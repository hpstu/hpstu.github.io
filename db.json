{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"themes/matery/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/matery/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/matery.css","path":"css/matery.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/my.css","path":"css/my.css","modified":0,"renderable":1},{"_id":"themes/matery/source/js/click_show_text.js","path":"js/click_show_text.js","modified":0,"renderable":1},{"_id":"themes/matery/source/js/matery.js","path":"js/matery.js","modified":0,"renderable":1},{"_id":"themes/matery/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.css","path":"libs/aplayer/APlayer.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.js","path":"libs/aplayer/APlayer.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/clipboard.min.js","path":"libs/codeBlock/clipboard.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeBlockFuction.js","path":"libs/codeBlock/codeBlockFuction.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeCopy.js","path":"libs/codeBlock/codeCopy.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeLang.js","path":"libs/codeBlock/codeLang.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/codeBlock/codeShrink.js","path":"libs/codeBlock/codeShrink.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/cryptojs/crypto-js.min.js","path":"libs/cryptojs/crypto-js.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.css","path":"libs/dplayer/DPlayer.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.js","path":"libs/dplayer/DPlayer.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/jquery/jquery-2.2.0.min.js","path":"libs/jquery/jquery-2.2.0.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/materialize.min.css","path":"libs/materialize/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/materialize.min.js","path":"libs/materialize/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/busuanzi.pure.mini.js","path":"libs/others/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/clicklove.js","path":"libs/others/clicklove.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/explosion.min.js","path":"libs/others/explosion.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/fireworks.js","path":"libs/others/fireworks.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/snow.js","path":"libs/others/snow.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/others/text.js","path":"libs/others/text.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/valine/Valine.min.js","path":"libs/valine/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/valine/av-min.js","path":"libs/valine/av-min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/csdn.ico","path":"medias/avatars/csdn.ico","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatars/myzhihu.png","path":"medias/avatars/myzhihu.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/6.jpg","path":"medias/banner/6.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/24.jpg","path":"medias/featureimages/24.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/25.jpg","path":"medias/featureimages/25.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/26.jpg","path":"medias/featureimages/26.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/27.jpg","path":"medias/featureimages/27.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/28.jpg","path":"medias/featureimages/28.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/29.jpg","path":"medias/featureimages/29.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/30.jpg","path":"medias/featureimages/30.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/31.jpg","path":"medias/featureimages/31.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/32.jpg","path":"medias/featureimages/32.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/33.jpg","path":"medias/featureimages/33.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/34.jpg","path":"medias/featureimages/34.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/35.jpg","path":"medias/featureimages/35.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/36.jpg","path":"medias/featureimages/36.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/37.jpg","path":"medias/featureimages/37.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/38.jpg","path":"medias/featureimages/38.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/39.jpg","path":"medias/featureimages/39.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/40.jpg","path":"medias/featureimages/40.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/41.jpg","path":"medias/featureimages/41.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/42.jpg","path":"medias/featureimages/42.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/43.jpg","path":"medias/featureimages/43.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/44.jpg","path":"medias/featureimages/44.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/45.jpg","path":"medias/featureimages/45.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/46.jpg","path":"medias/featureimages/46.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/47.jpg","path":"medias/featureimages/47.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/48.jpg","path":"medias/featureimages/48.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/49.jpg","path":"medias/featureimages/49.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/总有一个人要先走.mp3","path":"medias/music/总有一个人要先走.mp3","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/reward/wechat.jpg","path":"medias/reward/wechat.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/css/font-awesome.min.css","path":"libs/awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/FontAwesome.otf","path":"libs/awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.eot","path":"libs/awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.svg","path":"libs/awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.ttf","path":"libs/awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff","path":"libs/awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff2","path":"libs/awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/Like Real People Do.jpg","path":"medias/music/avatars/Like Real People Do.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/Shame.jpg","path":"medias/music/avatars/Shame.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/Stay Alive.jpg","path":"medias/music/avatars/Stay Alive.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/se.jpg","path":"medias/music/avatars/se.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/music/avatars/总有一个人要先走.jpg","path":"medias/music/avatars/总有一个人要先走.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.md","hash":"9e6f55d7c01343e1ffd36d55860587fd269d6cb6","modified":1635065021000},{"_id":"source/CNAME","hash":"09d9784c9e39dc97ce8f6a2840d15d05da834478","modified":1635065021000},{"_id":"source/robots.txt","hash":"96afc2fc25d1e9121f5eae9eaef811cd1ac04208","modified":1635065021000},{"_id":"source/_data/friends.json","hash":"16fdb72790a2eac7052a8dd9f9c11248cd6ed37e","modified":1635065021000},{"_id":"source/_data/musics.json","hash":"c505f1ee1c9102f74a54c7d594d79a844e09dbb3","modified":1635065021000},{"_id":"source/about/index.md","hash":"861988a1ea14daee4103681e05d583fb9622a9b0","modified":1635065021000},{"_id":"source/_posts/1.md","hash":"8ec09dd75c279b153b71aa13a55ff9e6cca81472","modified":1635065021000},{"_id":"source/archives/index.md","hash":"28ffe1788b7ec6b5e8096d3bdba6060afd5024b3","modified":1635065021000},{"_id":"source/categories/index.md","hash":"ea9413cff6268ec0cab02a3fd9628c90e9f9c08d","modified":1635065021000},{"_id":"source/contact/index.md","hash":"a6f0ef09621ee74bb13f29e4b0ccacb57a66dea6","modified":1635065021000},{"_id":"source/friends/index.md","hash":"e3c8d6b0ccd81b066b7b7566dd4afaa37e67348a","modified":1635065021000},{"_id":"source/tags/index.md","hash":"aed5e51001f4c51a4b3ffbd18c2320da8004901f","modified":1635065021000},{"_id":"themes/matery/.gitignore","hash":"eaa3d84cb77d92a21b111fd1e37f53edc1ff9de0","modified":1635065021000},{"_id":"themes/matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1635065021000},{"_id":"themes/matery/_config.yml","hash":"1b64b5d1382361e261faf2fe0129116838a0364e","modified":1646487472425},{"_id":"themes/matery/languages/default.yml","hash":"08b43a89b366b45a84b572da8e7139104829df32","modified":1635065021000},{"_id":"themes/matery/layout/404.ejs","hash":"40c4af57aef2b77611042782e9f3b395f217408f","modified":1635065021000},{"_id":"themes/matery/languages/zh-CN.yml","hash":"4fd8aff7506cd282b3735a48bc2d77a6b3ea3e7e","modified":1635065021000},{"_id":"themes/matery/layout/about.ejs","hash":"8d3355f15ab3b4667243af81aa593d41f2f39557","modified":1635065021000},{"_id":"themes/matery/layout/archive.ejs","hash":"b09487edc56298e20e8d0c29b9b1131f3eb28fd2","modified":1635065021000},{"_id":"themes/matery/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1635065021000},{"_id":"themes/matery/layout/contact.ejs","hash":"7b0f365624f9fdc2fe242930c8de62535c00ae3f","modified":1635065021000},{"_id":"themes/matery/layout/category.ejs","hash":"8fa32a94aa3ba36d788e8f8f5906074e391f1739","modified":1635065021000},{"_id":"themes/matery/layout/friends.ejs","hash":"61c5c20b9d0061c71c8f81fb41351f4836e96f64","modified":1635065021000},{"_id":"themes/matery/layout/index.ejs","hash":"b1a8a07b1da8ab939cf9d30d3b35a5bcaf22a6e1","modified":1635065021000},{"_id":"themes/matery/layout/layout.ejs","hash":"de38cd533d70e281aa4337b4c51f27f46246b612","modified":1635065021000},{"_id":"themes/matery/layout/post.ejs","hash":"23fcd2d9bcf4256260e830339f0b2976a145705e","modified":1635065021000},{"_id":"themes/matery/layout/tag.ejs","hash":"b4ec6952112384961061c923847f19c5afba8d7a","modified":1635065021000},{"_id":"themes/matery/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1635065021000},{"_id":"themes/matery/layout/_partial/back-top.ejs","hash":"8c91d2088c9bb323246b054d4940bde6cead6828","modified":1635065021000},{"_id":"themes/matery/layout/_partial/bg-cover-content.ejs","hash":"dbe4391fba348972b1882951b6f453af09273ee4","modified":1635065021000},{"_id":"themes/matery/layout/_partial/bg-cover.ejs","hash":"02191109712f61c0e487b8f0b8466597181a9004","modified":1635065021000},{"_id":"themes/matery/layout/_partial/disqus.ejs","hash":"a0f53d1a9b579d52e52ccad8c6e330bf3b89547e","modified":1635065021000},{"_id":"themes/matery/layout/_partial/footer.ejs","hash":"12872c3ba85e7117f5278b1aca5f0b6d32322004","modified":1635065021000},{"_id":"themes/matery/layout/_partial/gitalk.ejs","hash":"c07893e507971db87a3d3509cbd1c0440ab1b691","modified":1635065021000},{"_id":"themes/matery/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1635065021000},{"_id":"themes/matery/layout/_partial/gitment.ejs","hash":"0abfb51dc80ad063fb2118bee28de6bb8d99ed4e","modified":1635065021000},{"_id":"themes/matery/layout/_partial/google-analytics.ejs","hash":"5f4992205617da5f8cc5863c62b5ec46e414e2fb","modified":1635065021000},{"_id":"themes/matery/layout/_partial/head.ejs","hash":"8f256b8d704076c85b32b762d427d813c6c22c38","modified":1635065021000},{"_id":"themes/matery/layout/_partial/header.ejs","hash":"e253c813b3ee5ed924700a95133741802e58adc5","modified":1635065021000},{"_id":"themes/matery/layout/_partial/index-cover.ejs","hash":"294e51ad32426fb84da8daaee7c2155071dbd6b1","modified":1635065021000},{"_id":"themes/matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1635065021000},{"_id":"themes/matery/layout/_partial/mobile-nav.ejs","hash":"c0d37eaaa0ec59a7dabccccbec6b0f6562c9c92e","modified":1635065021000},{"_id":"themes/matery/layout/_partial/navigation.ejs","hash":"33aa62639015661cda3650f5c96ee38975bf1189","modified":1635065021000},{"_id":"themes/matery/layout/_partial/paging.ejs","hash":"68a24cad2b2049c4dc3a250aa30bf4256f9e50cb","modified":1635065021000},{"_id":"themes/matery/layout/_partial/post-cover.ejs","hash":"8f90dba37cb824a037fe86f6b60b73056673cee0","modified":1635065021000},{"_id":"themes/matery/layout/_partial/post-detail-toc.ejs","hash":"d4114c22126704cc1754d6d28cb00aec020b428b","modified":1635065021000},{"_id":"themes/matery/layout/_partial/post-detail.ejs","hash":"80991b987adc765fff991e0d352920cf9e009c19","modified":1635065021000},{"_id":"themes/matery/layout/_partial/post-statis.ejs","hash":"2b2fe8e8e94e65c52a4dbd454168e9b9df6baf10","modified":1635065021000},{"_id":"themes/matery/layout/_partial/prev-next.ejs","hash":"078cee6adc13ab4a88845d694454ac5dff77ee27","modified":1635065021000},{"_id":"themes/matery/layout/_partial/reprint-statement.ejs","hash":"3d61d4acde8d27a63072145130d2661df8c05df7","modified":1635065021000},{"_id":"themes/matery/layout/_partial/reward.ejs","hash":"3dff4f6a73973b0b32f40604244255f3c2a5bb78","modified":1635065021000},{"_id":"themes/matery/layout/_partial/search.ejs","hash":"942609b9240d5c8c09b24562fc8fb31eabe1cae4","modified":1635065021000},{"_id":"themes/matery/layout/_partial/share.ejs","hash":"34f8e4250bb66012026aa50686a7c89a0414ca1b","modified":1635065021000},{"_id":"themes/matery/layout/_partial/social-link.ejs","hash":"cd435a1e20a809d11f3bcbeb9bcd7f646ea84500","modified":1635065021000},{"_id":"themes/matery/layout/_partial/valine.ejs","hash":"6ce8a347fdb40b8ae78f924ef6b9f972f2a101a5","modified":1635065021000},{"_id":"themes/matery/layout/_widget/category-cloud.ejs","hash":"a5a10d6fa66a389d0253d7a52e0a646af6e8e9be","modified":1635065021000},{"_id":"themes/matery/layout/_widget/category-radar.ejs","hash":"f5561dd7d53d68897a33090bf677719213459b19","modified":1635065021000},{"_id":"themes/matery/layout/_widget/dream.ejs","hash":"96c43b244a9abf1f501ed61bad22cd315e2a863d","modified":1635065021000},{"_id":"themes/matery/layout/_widget/music.ejs","hash":"8eafddbd73fed80e85c66d49837c1a241b087258","modified":1635065021000},{"_id":"themes/matery/layout/_widget/my-gallery.ejs","hash":"f81eb2891bea326908057029e2a063001371ba9b","modified":1635065021000},{"_id":"themes/matery/layout/_widget/my-projects.ejs","hash":"b9bf70ec5d97b0e14bb1b4f60f92db7680be5949","modified":1635065021000},{"_id":"themes/matery/layout/_widget/my-skills.ejs","hash":"bb8609e8739c7625e5ebfc1998acfac259386273","modified":1635065021000},{"_id":"themes/matery/layout/_widget/post-calendar.ejs","hash":"0b0a3eb6af29bf0d55d535958c44b01c0f18d10d","modified":1635065021000},{"_id":"themes/matery/layout/_widget/post-charts.ejs","hash":"af0604623db37ef800bb7ad48028d18d99efbbc3","modified":1635065021000},{"_id":"themes/matery/layout/_widget/recommend.ejs","hash":"72ee5ed55e68101a9c560788659674c48e15f568","modified":1635065021000},{"_id":"themes/matery/layout/_widget/tag-cloud.ejs","hash":"a3725f0e3a405acb595b04630a27765b537fb580","modified":1635065021000},{"_id":"themes/matery/layout/_widget/tag-wordcloud.ejs","hash":"3a991d7292e0cf98e0eb7d899d0aba5a3ad8cf03","modified":1635065021000},{"_id":"themes/matery/layout/_widget/video.ejs","hash":"bda810cc135b52f834f1c1ccf52defccacace714","modified":1635065021000},{"_id":"themes/matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1635065021000},{"_id":"themes/matery/source/css/matery.css","hash":"9177986b225313e4a986a9ff35085104e5886b2a","modified":1635065021000},{"_id":"themes/matery/source/css/my-gitalk.css","hash":"eeda46a83d0db1cc239a9cd27d544faf663f9883","modified":1635065021000},{"_id":"themes/matery/source/css/my.css","hash":"405d61aa393c79aeb2033ef227fc7beb7b20eff6","modified":1635065021000},{"_id":"themes/matery/source/js/click_show_text.js","hash":"613c5e7851df10317da8ac50ec91b26a3e2ef372","modified":1635065021000},{"_id":"themes/matery/source/js/matery.js","hash":"c5a9c4fae16126cae80719e7435705840718b628","modified":1635065021000},{"_id":"themes/matery/source/js/search.js","hash":"499e11786efbb04815b54a1de317cc8606a37555","modified":1635065021000},{"_id":"themes/matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1635065021000},{"_id":"themes/matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1635065021000},{"_id":"themes/matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1635065021000},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1635065021000},{"_id":"themes/matery/source/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1635065021000},{"_id":"themes/matery/source/libs/codeBlock/clipboard.min.js","hash":"9cd57c67fbd3e3067f80793ef8445f5ff7783563","modified":1635065021000},{"_id":"themes/matery/source/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1635065021000},{"_id":"themes/matery/source/libs/codeBlock/codeCopy.js","hash":"b74a381adf6ef8404d6a0452c2b9f44b47219c80","modified":1635065021000},{"_id":"themes/matery/source/libs/codeBlock/codeLang.js","hash":"ea8b51e4d75e7b2cd63e4d5bcb8db2cf7f23f5db","modified":1635065021000},{"_id":"themes/matery/source/libs/codeBlock/codeShrink.js","hash":"215910dc8f63fd50b97957e5fcdc8480aa2728cb","modified":1635065021000},{"_id":"themes/matery/source/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1635065021000},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1635065021000},{"_id":"themes/matery/source/libs/gitalk/gitalk.css","hash":"3aac1db83b0135c521187254ff302d125cc30706","modified":1635065021000},{"_id":"themes/matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1635065021000},{"_id":"themes/matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1635065021000},{"_id":"themes/matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1635065021000},{"_id":"themes/matery/source/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1635065021000},{"_id":"themes/matery/source/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1635065021000},{"_id":"themes/matery/source/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1635065021000},{"_id":"themes/matery/source/libs/others/explosion.min.js","hash":"417b68e2cf2c6de2119c57626f4412105a8457f5","modified":1635065021000},{"_id":"themes/matery/source/libs/others/fireworks.js","hash":"53981959bc6def4a85bbbb41b07e4b1474a2124d","modified":1635065021000},{"_id":"themes/matery/source/libs/others/snow.js","hash":"7f3b1ad2f64d4473210a2c3218893649c73c980e","modified":1635065021000},{"_id":"themes/matery/source/libs/others/text.js","hash":"1791782cde0d1e4197f2ed58ecb7dd6aefddd169","modified":1635065021000},{"_id":"themes/matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1635065021000},{"_id":"themes/matery/source/libs/tocbot/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1635065021000},{"_id":"themes/matery/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1635065021000},{"_id":"themes/matery/source/medias/avatars/csdn.ico","hash":"fff55f10e98084a888ac0b346ccdf0dbaad2ccb1","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/9.jpg","hash":"2e1ac235e6a6d80dbed651f993f319c1ed4b5925","modified":1635065021000},{"_id":"themes/matery/source/medias/reward/wechat.jpg","hash":"bf861ad684cd708ba5d864040eecdf9645685ae0","modified":1635065021000},{"_id":"themes/matery/source/libs/awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1635065021000},{"_id":"themes/matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1635065021000},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1635065021000},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1635065021000},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1635065021000},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1635065021000},{"_id":"themes/matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1635065021000},{"_id":"themes/matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1635065021000},{"_id":"themes/matery/source/libs/lightGallery/img/video-play.png","hash":"fbfdbe06aebf7d0c00da175a4810cf888d128f11","modified":1635065021000},{"_id":"themes/matery/source/libs/lightGallery/img/vimeo-play.png","hash":"1142b47de219dddfba2e712cd3189dec0c8b7bee","modified":1635065021000},{"_id":"themes/matery/source/libs/lightGallery/img/youtube-play.png","hash":"39150b45ec5fc03155b7ebeaa44f1829281788e2","modified":1635065021000},{"_id":"themes/matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1635065021000},{"_id":"themes/matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1635065021000},{"_id":"themes/matery/source/libs/share/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1635065021000},{"_id":"themes/matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1635065021000},{"_id":"themes/matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1635065021000},{"_id":"themes/matery/source/libs/share/js/jquery.share.min.js","hash":"16ce82901ca0e302cf47a35fb10f59009a5e7eb9","modified":1635065021000},{"_id":"themes/matery/source/libs/share/js/social-share.min.js","hash":"4df722bafde2c5d8faaace0d1f894798385a8793","modified":1635065021000},{"_id":"themes/matery/source/medias/music/avatars/Like Real People Do.jpg","hash":"70d026f8ff9df7a5427e75e58c4b8bc6c637d85f","modified":1635065021000},{"_id":"themes/matery/source/medias/music/avatars/Shame.jpg","hash":"08464f06d5400d92431cfc4668cda9b0eccce0be","modified":1635065021000},{"_id":"themes/matery/source/medias/music/avatars/Stay Alive.jpg","hash":"c0611b3db7a0acb91c8d1972e6ffe99545289bc8","modified":1635065021000},{"_id":"themes/matery/source/medias/music/avatars/se.jpg","hash":"2afb8904ae101e2a7dc719226ad4d05032a635c1","modified":1635065021000},{"_id":"themes/matery/source/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1635065021000},{"_id":"themes/matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1635065021000},{"_id":"themes/matery/source/libs/jquery/jquery-2.2.0.min.js","hash":"5d7e5bbfa540f0e53bd599e4305e1a4e815b5dd1","modified":1635065021000},{"_id":"themes/matery/source/libs/valine/Valine.min.js","hash":"4e34802ccbb59f1daa58a62241ff57f923e50600","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/14.jpg","hash":"164bda04d4ef6ae75f149c2e822d0d0f0b79e15c","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/15.jpg","hash":"867c9882842f84290ba173292d551a626106a45d","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/21.jpg","hash":"9ad4b78782e69f0ace50f76daa7a4bd687738332","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/27.jpg","hash":"ea65367dab59059c343cd0a211f41ca4bd0dc2c9","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/35.jpg","hash":"2f001a7d045a952ba059eb3575664347ebbf4d1f","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/36.jpg","hash":"a71a869c98c68123e94706fa970333235990f0ab","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/37.jpg","hash":"515fd43e0acddf316a5753ea1cdc259c9571eec6","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/38.jpg","hash":"fc728ac4c69d06e911bbc4d6cba9c9ef1b158b9f","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/47.jpg","hash":"ee4de6373759e67d96c0fe7237620ccdd190f188","modified":1635065021000},{"_id":"themes/matery/source/medias/reward/alipay.jpg","hash":"318823c8af1fd810cf7f7724bc6428dfff762089","modified":1635065021000},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1635065021000},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1635065021000},{"_id":"themes/matery/source/libs/gitalk/gitalk.min.js","hash":"28bdb33c9eb609c2f30d431df1a4cf8ca70bf841","modified":1635065021000},{"_id":"themes/matery/source/libs/materialize/materialize.min.css","hash":"4d46df5f22cbc24eefa76228c7ee308dc3585594","modified":1635065021000},{"_id":"themes/matery/source/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1635065021000},{"_id":"themes/matery/source/libs/valine/av-min.js","hash":"2577e72b52b736d99649f9e95be8976d58563333","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/0.jpg","hash":"4e9f83cbe1575a44fe9315f937e7505ed05b6920","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/1.jpg","hash":"aaf5863bed7563a86a6da15cef0b5d44740e449c","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/10.jpg","hash":"53f3eb05edab87ee07c889f26fc550e9b5e5cb91","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/11.jpg","hash":"4e4ed3d6f8466b3362cbaaa04dc31b8859d3e202","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/16.jpg","hash":"87100d52e5077c77f9e74856a1c5330d81708ae3","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/2.jpg","hash":"8567da47271a81b74ca341d170e057bb42f42bf5","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/20.jpg","hash":"e854df6ea24c22c999216db611dfd3785b76b834","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/24.jpg","hash":"33fc0af42186fa2c0e41712d5e45c716dd47bce6","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/23.jpg","hash":"c2f1f9387db7dd99d3c0e4df42a160d482dde5bd","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/28.jpg","hash":"565fb296d8e4e2e520d6f15985f1de33d7bd98c8","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/29.jpg","hash":"a8ff01c7f29be6d703040fad7889f5afba1eb844","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/30.jpg","hash":"6dfe6d277ec3ef36e8c958a71712702a5be3e4d8","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/31.jpg","hash":"50eedc29287470f333612e6f71d88c3121357257","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/33.jpg","hash":"851fadf999b21c4e42d7a5e4114a10abd21f81cd","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/39.jpg","hash":"2b914a3b098aa874f68b4fcda7c85613140c6420","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/41.jpg","hash":"51ccac5c36201f1c04f66e5d54babbb21cf5dc5f","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/43.jpg","hash":"76bf6095d8e92aa5d6a4e2dff4c2d710c61da07e","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/46.jpg","hash":"1e73f8ed0bd91c4443c4f7e57d2ea5cf94d419c6","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/6.jpg","hash":"e0eb036bf77aacc91dffea2d75f590f9f1b2b961","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/8.jpg","hash":"b04f9b49261b2486260e64e6543da45689e272de","modified":1635065021000},{"_id":"themes/matery/source/libs/awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1635065021000},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1635065021000},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1635065021000},{"_id":"themes/matery/source/medias/banner/5.jpg","hash":"38272cddbb09c70c7785aed877f6c9b45a61262a","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/13.jpg","hash":"1eed284202ae51c4f3051d943b3d97a7602a9fc6","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/18.jpg","hash":"b8108799fbf3eadf0462fba04034a277a462018b","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/22.jpg","hash":"2beb56f529f0ce49f36a84d55890b7c0de3d7705","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/25.jpg","hash":"97930cf52f9e68ccf24d26b383704ca4724dae34","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/26.jpg","hash":"9c2eaf5aff8abdc4e215af96002c8525be9ddd06","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/3.jpg","hash":"4cabac02df559a5eb1b9abc8a0359fe6573a738b","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/32.jpg","hash":"e440f9bdcdff7c181904b26b2774c48632e4d24a","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/34.jpg","hash":"6fca10e13cae2a089909ea266fa6be510e57a2bd","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/4.jpg","hash":"d7139f883aad272d619ce181ebcd86672a2a7bdc","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/42.jpg","hash":"c05648a22e1f083d13f40e76fed535f027fae0b6","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/44.jpg","hash":"6bca5b340c7e16350e3040da2416f6184ccd64a4","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/45.jpg","hash":"5c22e8d627f763ebae1d080025aee103383a8460","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/48.jpg","hash":"13754e6efc8f6db46088d736ed2c290b0d9bfb33","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/5.jpg","hash":"38272cddbb09c70c7785aed877f6c9b45a61262a","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/7.jpg","hash":"26833abcdd65e10c48e8d0553cb3543d3e0ca4d8","modified":1635065021000},{"_id":"themes/matery/source/medias/music/avatars/总有一个人要先走.jpg","hash":"2beb56f529f0ce49f36a84d55890b7c0de3d7705","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/12.jpg","hash":"29f884076a7fbed6900a1a05c41ffd3ce122a123","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/17.jpg","hash":"4cbd4926b13132903c465685a127c577b56b2b8b","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/40.jpg","hash":"7a69b037ce05312d9322fe3f11c4d645b88645aa","modified":1635065021000},{"_id":"themes/matery/source/medias/logo.png","hash":"4a9aec7e236615e3b698adfd3b36bc34ec05e5c7","modified":1635065021000},{"_id":"themes/matery/source/medias/avatars/myzhihu.png","hash":"4a9aec7e236615e3b698adfd3b36bc34ec05e5c7","modified":1635065021000},{"_id":"themes/matery/source/medias/banner/0.jpg","hash":"73bae0e6812c46509b91e3155bd12ce8640b245a","modified":1635065021000},{"_id":"themes/matery/source/medias/banner/1.jpg","hash":"cd3fc47d2042a3277e4b375ad084365abdc28f5d","modified":1635065021000},{"_id":"themes/matery/source/medias/banner/2.jpg","hash":"c2980f75f2c047d0957e3c8227b3f8d84e67f752","modified":1635065021000},{"_id":"themes/matery/source/medias/banner/4.jpg","hash":"4d6f31f86966584360bcdbfecb6f6a2ec94f944d","modified":1635065021000},{"_id":"themes/matery/source/medias/banner/6.jpg","hash":"5be9274e63d6ac02607e3d659fd32532291385fa","modified":1635065021000},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1635065021000},{"_id":"themes/matery/source/favicon.png","hash":"7bb5d2128dbe1ecfd6d8640174a34c2c402d999a","modified":1635065021000},{"_id":"themes/matery/source/medias/featureimages/49.jpg","hash":"90ad50712c339a89402a363288dcd355e98d0fbb","modified":1635065021000},{"_id":"themes/matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1635065021000},{"_id":"themes/matery/source/medias/banner/3.jpg","hash":"42a57b512acce7f09f122b6b8c4f85c3803cd438","modified":1635065021000},{"_id":"themes/matery/source/medias/music/总有一个人要先走.mp3","hash":"a9a64e4e6da5bb508be368267c5c1fbbcd1f5b7f","modified":1635065021000},{"_id":"public/baidu_urls.txt","hash":"159c404c4d115eeeb56bac2bc9cc6cc28e8c34c6","modified":1646535377360},{"_id":"public/baidusitemap.xml","hash":"1b9eb57a80a405e6e6a7a47ebe78785418618904","modified":1646535377360},{"_id":"public/atom.xml","hash":"2116c2b4075af4cf7c3e03ef6a910f7d0d5b4d74","modified":1646535377360},{"_id":"public/sitemap.xml","hash":"284b69e310bbdc80837bbfe113d45f1c953c3050","modified":1646535377360},{"_id":"public/search.xml","hash":"7d65508e36208c386f0a67a4737a26def24983e4","modified":1646535377360},{"_id":"public/404.html","hash":"4ed8f2e9e7cd5ce4da227c05d8f891ee0acdc1f4","modified":1646535377360},{"_id":"public/about/index.html","hash":"0e57fbfb5bc3d5398ba2cffe5ce5f9b7a4dccba7","modified":1646535377360},{"_id":"public/archives/index.html","hash":"907a979eae8dff99b11df5302f543d5e036fa324","modified":1646535377360},{"_id":"public/categories/index.html","hash":"bd45068704453b781e104a95b43d4978c5c45bc0","modified":1646535377360},{"_id":"public/contact/index.html","hash":"0e1b547c4fdfcfe730635f3f88c60baba3f3050f","modified":1646535377360},{"_id":"public/friends/index.html","hash":"533d9a156b94f33c8fd24c8017faa25c22d25e78","modified":1646535377360},{"_id":"public/tags/index.html","hash":"c8074526afbc839806911a1d41dfdaa37729de3a","modified":1646535377360},{"_id":"public/1.html","hash":"cecc5e69b4cb2cc704004f88e185ac85ddcf97f1","modified":1646535377360},{"_id":"public/archives/2020/index.html","hash":"8dae4184245e4e39d77c5b46ed104129fbac2c28","modified":1646535377360},{"_id":"public/archives/2020/02/index.html","hash":"14eeeb952193eabe3c1581584afb5bbf485efd78","modified":1646535377360},{"_id":"public/categories/Blog/index.html","hash":"b0ab4937b7878ff1339b620135eff6695184b8b0","modified":1646535377360},{"_id":"public/index.html","hash":"091155607743e853d9e1167d4f532adc61468a23","modified":1646535377360},{"_id":"public/tags/Github/index.html","hash":"a2dd1d302249692f8fb9f9299757540f9f0bbf97","modified":1646535377360},{"_id":"public/tags/Hexo/index.html","hash":"032f2d6a423098bb9bbdd7837e5e09d905309e61","modified":1646535377360},{"_id":"public/tags/博客搭建/index.html","hash":"6bd45ee7bb73caaf277b2129fc1113d4dcd945ab","modified":1646535377360},{"_id":"public/robots.txt","hash":"96afc2fc25d1e9121f5eae9eaef811cd1ac04208","modified":1646484131281},{"_id":"public/CNAME","hash":"09d9784c9e39dc97ce8f6a2840d15d05da834478","modified":1646484131281},{"_id":"public/medias/avatars/csdn.ico","hash":"fff55f10e98084a888ac0b346ccdf0dbaad2ccb1","modified":1646484131281},{"_id":"public/medias/featureimages/9.jpg","hash":"2e1ac235e6a6d80dbed651f993f319c1ed4b5925","modified":1646484131281},{"_id":"public/medias/reward/wechat.jpg","hash":"bf861ad684cd708ba5d864040eecdf9645685ae0","modified":1646484131281},{"_id":"public/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1646484131281},{"_id":"public/libs/lightGallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1646484131281},{"_id":"public/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1646484131281},{"_id":"public/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1646484131281},{"_id":"public/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1646484131281},{"_id":"public/libs/lightGallery/img/video-play.png","hash":"fbfdbe06aebf7d0c00da175a4810cf888d128f11","modified":1646484131281},{"_id":"public/libs/lightGallery/img/vimeo-play.png","hash":"1142b47de219dddfba2e712cd3189dec0c8b7bee","modified":1646484131281},{"_id":"public/libs/lightGallery/img/youtube-play.png","hash":"39150b45ec5fc03155b7ebeaa44f1829281788e2","modified":1646484131281},{"_id":"public/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1646484131281},{"_id":"public/libs/share/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1646484131281},{"_id":"public/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1646484131281},{"_id":"public/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1646484131281},{"_id":"public/medias/music/avatars/Like Real People Do.jpg","hash":"70d026f8ff9df7a5427e75e58c4b8bc6c637d85f","modified":1646484131281},{"_id":"public/medias/music/avatars/Shame.jpg","hash":"08464f06d5400d92431cfc4668cda9b0eccce0be","modified":1646484131281},{"_id":"public/medias/music/avatars/Stay Alive.jpg","hash":"c0611b3db7a0acb91c8d1972e6ffe99545289bc8","modified":1646484131281},{"_id":"public/medias/music/avatars/se.jpg","hash":"2afb8904ae101e2a7dc719226ad4d05032a635c1","modified":1646484131281},{"_id":"public/css/prism-tomorrow.css","hash":"3b99487dfc9b4e51e9105a93743b92a761840e34","modified":1646484131281},{"_id":"public/css/prism-line-numbers.css","hash":"a1692758d22c6cdf6fd1a8dafc9b4b98e41d3138","modified":1646484131281},{"_id":"public/medias/featureimages/14.jpg","hash":"164bda04d4ef6ae75f149c2e822d0d0f0b79e15c","modified":1646484131281},{"_id":"public/medias/featureimages/15.jpg","hash":"867c9882842f84290ba173292d551a626106a45d","modified":1646484131281},{"_id":"public/medias/featureimages/21.jpg","hash":"9ad4b78782e69f0ace50f76daa7a4bd687738332","modified":1646484131281},{"_id":"public/medias/featureimages/27.jpg","hash":"ea65367dab59059c343cd0a211f41ca4bd0dc2c9","modified":1646484131281},{"_id":"public/medias/featureimages/35.jpg","hash":"2f001a7d045a952ba059eb3575664347ebbf4d1f","modified":1646484131281},{"_id":"public/medias/featureimages/36.jpg","hash":"a71a869c98c68123e94706fa970333235990f0ab","modified":1646484131281},{"_id":"public/medias/featureimages/37.jpg","hash":"515fd43e0acddf316a5753ea1cdc259c9571eec6","modified":1646484131281},{"_id":"public/medias/featureimages/38.jpg","hash":"fc728ac4c69d06e911bbc4d6cba9c9ef1b158b9f","modified":1646484131281},{"_id":"public/medias/featureimages/47.jpg","hash":"ee4de6373759e67d96c0fe7237620ccdd190f188","modified":1646484131281},{"_id":"public/medias/reward/alipay.jpg","hash":"318823c8af1fd810cf7f7724bc6428dfff762089","modified":1646484131281},{"_id":"public/libs/awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1646484131281},{"_id":"public/libs/awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1646484131281},{"_id":"public/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1646484131281},{"_id":"public/css/my-gitalk.css","hash":"eeda46a83d0db1cc239a9cd27d544faf663f9883","modified":1646484131281},{"_id":"public/css/my.css","hash":"405d61aa393c79aeb2033ef227fc7beb7b20eff6","modified":1646484131281},{"_id":"public/js/click_show_text.js","hash":"613c5e7851df10317da8ac50ec91b26a3e2ef372","modified":1646484131281},{"_id":"public/js/matery.js","hash":"c5a9c4fae16126cae80719e7435705840718b628","modified":1646484131281},{"_id":"public/js/search.js","hash":"499e11786efbb04815b54a1de317cc8606a37555","modified":1646484131281},{"_id":"public/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1646484131281},{"_id":"public/libs/aplayer/APlayer.min.css","hash":"07372a2ba507388d0fed166d761b1c2c2a659dce","modified":1646484131281},{"_id":"public/libs/codeBlock/codeBlockFuction.js","hash":"c7ab06d27a525b15b1eb69027135269e9b9132fb","modified":1646484131281},{"_id":"public/libs/codeBlock/codeCopy.js","hash":"b74a381adf6ef8404d6a0452c2b9f44b47219c80","modified":1646484131281},{"_id":"public/libs/codeBlock/codeLang.js","hash":"ea8b51e4d75e7b2cd63e4d5bcb8db2cf7f23f5db","modified":1646484131281},{"_id":"public/libs/codeBlock/codeShrink.js","hash":"215910dc8f63fd50b97957e5fcdc8480aa2728cb","modified":1646484131281},{"_id":"public/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1646484131281},{"_id":"public/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1646484131281},{"_id":"public/libs/others/busuanzi.pure.mini.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1646484131281},{"_id":"public/libs/others/clicklove.js","hash":"6a39b8c683ba5dcd92f70c6ab45d1cfac3213e8e","modified":1646484131281},{"_id":"public/libs/others/explosion.min.js","hash":"417b68e2cf2c6de2119c57626f4412105a8457f5","modified":1646484131281},{"_id":"public/libs/others/fireworks.js","hash":"53981959bc6def4a85bbbb41b07e4b1474a2124d","modified":1646484131281},{"_id":"public/libs/others/snow.js","hash":"7f3b1ad2f64d4473210a2c3218893649c73c980e","modified":1646484131281},{"_id":"public/libs/others/text.js","hash":"1791782cde0d1e4197f2ed58ecb7dd6aefddd169","modified":1646484131281},{"_id":"public/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1646484131281},{"_id":"public/libs/tocbot/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1646484131281},{"_id":"public/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1646484131281},{"_id":"public/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1646484131281},{"_id":"public/css/matery.css","hash":"9177986b225313e4a986a9ff35085104e5886b2a","modified":1646484131281},{"_id":"public/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1646484131281},{"_id":"public/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1646484131281},{"_id":"public/libs/aplayer/APlayer.min.js","hash":"22caa28ff6b41a16ff40f15d38f1739e22359478","modified":1646484131281},{"_id":"public/libs/codeBlock/clipboard.min.js","hash":"9cd57c67fbd3e3067f80793ef8445f5ff7783563","modified":1646484131281},{"_id":"public/libs/cryptojs/crypto-js.min.js","hash":"5989527a378b55011a59522f41eeb3981518325c","modified":1646484131281},{"_id":"public/libs/dplayer/DPlayer.min.css","hash":"f7d19655f873b813ffba5d1a17145c91f82631b8","modified":1646484131281},{"_id":"public/libs/gitalk/gitalk.css","hash":"3aac1db83b0135c521187254ff302d125cc30706","modified":1646484131281},{"_id":"public/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1646484131281},{"_id":"public/libs/dplayer/DPlayer.min.js","hash":"c3bad7b265574fab0ae4d45867422ea1cb9d6599","modified":1646484131281},{"_id":"public/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1646484131281},{"_id":"public/libs/gitalk/gitalk.min.js","hash":"28bdb33c9eb609c2f30d431df1a4cf8ca70bf841","modified":1646484131281},{"_id":"public/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1646484131281},{"_id":"public/libs/jquery/jquery-2.2.0.min.js","hash":"5d7e5bbfa540f0e53bd599e4305e1a4e815b5dd1","modified":1646484131281},{"_id":"public/libs/materialize/materialize.min.css","hash":"4d46df5f22cbc24eefa76228c7ee308dc3585594","modified":1646484131281},{"_id":"public/libs/materialize/materialize.min.js","hash":"c8b4c65651921d888cf5f27430dfe2ad190d35bf","modified":1646484131281},{"_id":"public/libs/valine/Valine.min.js","hash":"4e34802ccbb59f1daa58a62241ff57f923e50600","modified":1646484131281},{"_id":"public/libs/awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1646484131281},{"_id":"public/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1646484131281},{"_id":"public/libs/valine/av-min.js","hash":"2577e72b52b736d99649f9e95be8976d58563333","modified":1646484131281},{"_id":"public/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1646484131281},{"_id":"public/libs/share/js/jquery.share.min.js","hash":"16ce82901ca0e302cf47a35fb10f59009a5e7eb9","modified":1646484131281},{"_id":"public/libs/share/js/social-share.min.js","hash":"4df722bafde2c5d8faaace0d1f894798385a8793","modified":1646484131281},{"_id":"public/medias/featureimages/0.jpg","hash":"4e9f83cbe1575a44fe9315f937e7505ed05b6920","modified":1646484131281},{"_id":"public/medias/featureimages/1.jpg","hash":"aaf5863bed7563a86a6da15cef0b5d44740e449c","modified":1646484131281},{"_id":"public/medias/featureimages/10.jpg","hash":"53f3eb05edab87ee07c889f26fc550e9b5e5cb91","modified":1646484131281},{"_id":"public/medias/featureimages/11.jpg","hash":"4e4ed3d6f8466b3362cbaaa04dc31b8859d3e202","modified":1646484131281},{"_id":"public/medias/featureimages/16.jpg","hash":"87100d52e5077c77f9e74856a1c5330d81708ae3","modified":1646484131281},{"_id":"public/medias/featureimages/2.jpg","hash":"8567da47271a81b74ca341d170e057bb42f42bf5","modified":1646484131281},{"_id":"public/medias/featureimages/20.jpg","hash":"e854df6ea24c22c999216db611dfd3785b76b834","modified":1646484131281},{"_id":"public/medias/featureimages/23.jpg","hash":"c2f1f9387db7dd99d3c0e4df42a160d482dde5bd","modified":1646484131281},{"_id":"public/medias/featureimages/24.jpg","hash":"33fc0af42186fa2c0e41712d5e45c716dd47bce6","modified":1646484131281},{"_id":"public/medias/featureimages/28.jpg","hash":"565fb296d8e4e2e520d6f15985f1de33d7bd98c8","modified":1646484131281},{"_id":"public/medias/featureimages/29.jpg","hash":"a8ff01c7f29be6d703040fad7889f5afba1eb844","modified":1646484131281},{"_id":"public/medias/featureimages/30.jpg","hash":"6dfe6d277ec3ef36e8c958a71712702a5be3e4d8","modified":1646484131281},{"_id":"public/medias/featureimages/31.jpg","hash":"50eedc29287470f333612e6f71d88c3121357257","modified":1646484131281},{"_id":"public/medias/featureimages/33.jpg","hash":"851fadf999b21c4e42d7a5e4114a10abd21f81cd","modified":1646484131281},{"_id":"public/medias/featureimages/39.jpg","hash":"2b914a3b098aa874f68b4fcda7c85613140c6420","modified":1646484131281},{"_id":"public/medias/featureimages/41.jpg","hash":"51ccac5c36201f1c04f66e5d54babbb21cf5dc5f","modified":1646484131281},{"_id":"public/medias/featureimages/43.jpg","hash":"76bf6095d8e92aa5d6a4e2dff4c2d710c61da07e","modified":1646484131281},{"_id":"public/medias/featureimages/46.jpg","hash":"1e73f8ed0bd91c4443c4f7e57d2ea5cf94d419c6","modified":1646484131281},{"_id":"public/medias/featureimages/6.jpg","hash":"e0eb036bf77aacc91dffea2d75f590f9f1b2b961","modified":1646484131281},{"_id":"public/medias/featureimages/8.jpg","hash":"b04f9b49261b2486260e64e6543da45689e272de","modified":1646484131281},{"_id":"public/libs/awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1646484131281},{"_id":"public/libs/awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1646484131281},{"_id":"public/libs/awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1646484131281},{"_id":"public/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1646484131281},{"_id":"public/medias/banner/5.jpg","hash":"38272cddbb09c70c7785aed877f6c9b45a61262a","modified":1646484131281},{"_id":"public/medias/featureimages/13.jpg","hash":"1eed284202ae51c4f3051d943b3d97a7602a9fc6","modified":1646484131281},{"_id":"public/medias/featureimages/18.jpg","hash":"b8108799fbf3eadf0462fba04034a277a462018b","modified":1646484131281},{"_id":"public/medias/featureimages/22.jpg","hash":"2beb56f529f0ce49f36a84d55890b7c0de3d7705","modified":1646484131281},{"_id":"public/medias/featureimages/25.jpg","hash":"97930cf52f9e68ccf24d26b383704ca4724dae34","modified":1646484131281},{"_id":"public/medias/featureimages/26.jpg","hash":"9c2eaf5aff8abdc4e215af96002c8525be9ddd06","modified":1646484131281},{"_id":"public/medias/featureimages/3.jpg","hash":"4cabac02df559a5eb1b9abc8a0359fe6573a738b","modified":1646484131281},{"_id":"public/medias/featureimages/32.jpg","hash":"e440f9bdcdff7c181904b26b2774c48632e4d24a","modified":1646484131281},{"_id":"public/medias/featureimages/34.jpg","hash":"6fca10e13cae2a089909ea266fa6be510e57a2bd","modified":1646484131281},{"_id":"public/medias/featureimages/4.jpg","hash":"d7139f883aad272d619ce181ebcd86672a2a7bdc","modified":1646484131281},{"_id":"public/medias/featureimages/42.jpg","hash":"c05648a22e1f083d13f40e76fed535f027fae0b6","modified":1646484131281},{"_id":"public/medias/featureimages/44.jpg","hash":"6bca5b340c7e16350e3040da2416f6184ccd64a4","modified":1646484131281},{"_id":"public/medias/featureimages/45.jpg","hash":"5c22e8d627f763ebae1d080025aee103383a8460","modified":1646484131281},{"_id":"public/medias/featureimages/48.jpg","hash":"13754e6efc8f6db46088d736ed2c290b0d9bfb33","modified":1646484131281},{"_id":"public/medias/featureimages/5.jpg","hash":"38272cddbb09c70c7785aed877f6c9b45a61262a","modified":1646484131281},{"_id":"public/medias/featureimages/7.jpg","hash":"26833abcdd65e10c48e8d0553cb3543d3e0ca4d8","modified":1646484131281},{"_id":"public/medias/music/avatars/总有一个人要先走.jpg","hash":"2beb56f529f0ce49f36a84d55890b7c0de3d7705","modified":1646484131281},{"_id":"public/medias/featureimages/12.jpg","hash":"29f884076a7fbed6900a1a05c41ffd3ce122a123","modified":1646484131281},{"_id":"public/medias/featureimages/17.jpg","hash":"4cbd4926b13132903c465685a127c577b56b2b8b","modified":1646484131281},{"_id":"public/medias/featureimages/40.jpg","hash":"7a69b037ce05312d9322fe3f11c4d645b88645aa","modified":1646484131281},{"_id":"public/medias/logo.png","hash":"4a9aec7e236615e3b698adfd3b36bc34ec05e5c7","modified":1646484131281},{"_id":"public/medias/avatars/myzhihu.png","hash":"4a9aec7e236615e3b698adfd3b36bc34ec05e5c7","modified":1646484131281},{"_id":"public/medias/banner/0.jpg","hash":"73bae0e6812c46509b91e3155bd12ce8640b245a","modified":1646484131281},{"_id":"public/medias/banner/1.jpg","hash":"cd3fc47d2042a3277e4b375ad084365abdc28f5d","modified":1646484131281},{"_id":"public/medias/banner/2.jpg","hash":"c2980f75f2c047d0957e3c8227b3f8d84e67f752","modified":1646484131281},{"_id":"public/medias/banner/4.jpg","hash":"4d6f31f86966584360bcdbfecb6f6a2ec94f944d","modified":1646484131281},{"_id":"public/medias/banner/6.jpg","hash":"5be9274e63d6ac02607e3d659fd32532291385fa","modified":1646484131281},{"_id":"public/libs/awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1646484131281},{"_id":"public/favicon.png","hash":"7bb5d2128dbe1ecfd6d8640174a34c2c402d999a","modified":1646484131281},{"_id":"public/medias/featureimages/49.jpg","hash":"90ad50712c339a89402a363288dcd355e98d0fbb","modified":1646484131281},{"_id":"public/medias/banner/3.jpg","hash":"42a57b512acce7f09f122b6b8c4f85c3803cd438","modified":1646484131281},{"_id":"public/medias/music/总有一个人要先走.mp3","hash":"a9a64e4e6da5bb508be368267c5c1fbbcd1f5b7f","modified":1646484131281},{"_id":"source/_posts/cmake.md","hash":"f2dcce1357599488f4856e2251118ecc4d958207","modified":1646488030208},{"_id":"source/_posts/python.md","hash":"a2a45239958d9970d85fe6cc8a8396d258571aae","modified":1646484808979},{"_id":"public/cmake.html","hash":"1701d8daf2f38ab6b606eebdb7fcabb0f478156e","modified":1646535377360},{"_id":"public/python.html","hash":"3b0307d4c18fe23b6ed25b459e78fe57b17c2202","modified":1646486870671},{"_id":"public/archives/2022/03/index.html","hash":"92a32b6affe89eaba327407ed7a9d62a2af53a1b","modified":1646535377360},{"_id":"public/archives/2022/index.html","hash":"806120e16858a6f9b254744527cb72929e45432a","modified":1646535377360},{"_id":"source/_posts/Bash.md","hash":"397b791c159914516ac02551b71e9350da7a1f01","modified":1640742293939},{"_id":"source/_posts/C++.md","hash":"414d3d8f327eda44d61f1fa5007cc53fae576dcc","modified":1640676610509},{"_id":"source/_posts/Git.md","hash":"4db03d63d9418e7fc9358458c49775e21c1de2a0","modified":1636028809707},{"_id":"source/_posts/Github密钥.txt","hash":"8dc4c5ecb5cd88f47044ebd5f074df21c37b87b4","modified":1633672725078},{"_id":"source/_posts/Git操作.md","hash":"74cf3c374bf18c8d2da50ba91f78c87000dc090b","modified":1633682724755},{"_id":"source/_posts/Latex.md","hash":"303f6fa8c467ffd0dbfa3ec89a6bf57d4f707f8b","modified":1637934403681},{"_id":"source/_posts/Python.md","hash":"d9de7301c33724c76dfc690beeba66770bdedacc","modified":1638953015102},{"_id":"source/_posts/Pytorch.md","hash":"4ac655acb36cf27d615d6331c5c7b393a01d8da9","modified":1630301743475},{"_id":"source/_posts/Ubuntu.md","hash":"cce012939045fc1881caf02afd4c450717221ea2","modified":1646535367235},{"_id":"source/_posts/bash 使用教程.md","hash":"58d2047704c5922649774d6a0d993ca11b5905b2","modified":1640759620654},{"_id":"source/_posts/cmake 查找库文件模板.md","hash":"297591c4ec4049ef12a458edc4ec9430e62b5fe2","modified":1638153588104},{"_id":"source/_posts/img/2021-10-14_14-22.png","hash":"20dc0aedab833f059b8d252c3cd4cd0b3c8d7766","modified":1634192577824},{"_id":"source/_posts/img/2021-10-14_14-52.png","hash":"003032317d43c65970459750b69f88757d4b08ea","modified":1634194326849},{"_id":"source/_posts/paper/笔记.md","hash":"e89e2b3fcff4e5cf22e8e7051bef1bc695adf0ec","modified":1636102659449},{"_id":"source/_posts/img/clion.png","hash":"5a6d4353d97a8b2638ddb8c1c3707375be28ae08","modified":1634442751208},{"_id":"source/_posts/cmake实践.pdf","hash":"5e63a6c1a8fd6cbd128a32dbea19a7357147a9cc","modified":1644055658258},{"_id":"source/_posts/tlcl-cn.pdf","hash":"b28ed76108b73349ff9ee6564242e38f188bc156","modified":1640759604854},{"_id":"source/_posts/paper/paper/融合深度学习和几何定姿的光流视觉里程计研究.pdf","hash":"4df656420d9f8c57baef2de3fd08316982f5679d","modified":1636101451296},{"_id":"source/_posts/paper/paper/LiteFlowNet.pdf","hash":"6d3e829eaad1add20660c0f0c8c60f5546a795b8","modified":1636100987973},{"_id":"source/_posts/paper/paper/MonoDepth2.pdf","hash":"582b9959ad086a13720c050932b980ff2b43607c","modified":1636100037346},{"_id":"source/_posts/paper/paper/RAFT.pdf","hash":"aca55fcb6ae010dd2276308a3bb166351bb6c732","modified":1636096546526},{"_id":"source/_posts/paper/paper/LiteFlowNet2.pdf","hash":"558d42f5603f9993f26709a3483f5c0cc9240b2b","modified":1636101182626},{"_id":"source/_posts/paper/paper/LiteFlowNet3.pdf","hash":"47f1b28cdb2b5cb64a31637a66a47bb7d9a87abd","modified":1636097723307},{"_id":"public/ubuntu.html","hash":"85eb3a8a481620e8fa9a6528a50c78d428e2a599","modified":1646535377360},{"_id":"public/latex.html","hash":"802f35aafefc72f829a75ccb475d90513a754619","modified":1646486870671},{"_id":"public/pytorch.html","hash":"e9d7a252f0158f8350b358a5912fab441b729173","modified":1646486870671},{"_id":"public/git.html","hash":"4ccbadb695b5475eefb2204c62a24a0189348a11","modified":1646486870671},{"_id":"public/git-cao-zuo.html","hash":"f337ce903f8b26208c4d84db6bb800b5f9466fc0","modified":1646486870671},{"_id":"public/cmake-cha-zhao-ku-wen-jian-mo-ban.html","hash":"f1a55aa41b19d36623968ec138fe3b08fa3f938e","modified":1646486870671},{"_id":"public/bash.html","hash":"b0b13343db39ca738a5a511c1d7cbcb789426bfd","modified":1646486870671},{"_id":"public/c.html","hash":"911a9a4e04f690d4062686bebc3b52795695431a","modified":1646486870671},{"_id":"public/bash-shi-yong-jiao-cheng.html","hash":"b87393188b57132f8bebb7123076186a8fd2a70b","modified":1646486870671},{"_id":"public/paper/bi-ji.html","hash":"a4cf26fcae0b2cf6afd70a6d0673dc50d4076be9","modified":1646535377360},{"_id":"public/archives/page/2/index.html","hash":"e7c75c4d0881be2ce683c73b97ea88635c411552","modified":1646486870671},{"_id":"public/page/2/index.html","hash":"496f5826d4b1a0eab1b05dc81014fb9160f2bc10","modified":1646486870671},{"_id":"public/tags/ubuntu/index.html","hash":"0166cd26316a9589c2dc9a3d9c239956e1f6d575","modified":1646535377360}],"Category":[{"name":"Blog","_id":"cl0du52rn0003fie943e0dbva"}],"Data":[{"_id":"friends","data":[{"name":"Hexo博客搭建","url":"https://zhuanlan.zhihu.com/c_1215655729367113728","title":"访问主页","introduction":"我的知乎博客搭建专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"godxiaolong","url":"https://blog.csdn.net/weixin_45682081","title":"访问主页","introduction":"我的CSDN主页，欢迎大家关注！","avatar":"/medias/avatars/csdn.ico"},{"name":"陈YF的博客","url":"https://blog.cyfan.top","title":"访问主页","introduction":"一个在互联网角落挣扎的小小博客，很小很小。","avatar":"https://blog.cyfan.top/pic/BLOGER.jpg"},{"name":"DylanLi","url":"https://cloudguest.cn","title":"前去学习","introduction":"人在少年，梦中不觉，醒后要归去。","avatar":"https://my-markdown-picbed.oss-cn-qingdao.aliyuncs.com/DylanBlog/logo2.jpg"},{"name":"框架师","url":"https://www.mobaijun.com","title":"前去学习","introduction":"墨白","avatar":"https://www.mobaijun.com/medias/avatar.jpg"}]},{"_id":"musics","data":[{"name":"总有一个人要先走","artist":"佚名","url":"/medias/music/总有一个人要先走.mp3","cover":"/medias/music/avatars/总有一个人要先走.jpg"},{"name":"Stay Alive","artist":"José González","url":"/medias/music/Stay Alive.mp3","cover":"/medias/music/avatars/Stay Alive.jpg"},{"name":"Like Real People Do","artist":"Hozier","url":"/medias/music/Like Real People Do.mp3","cover":"/medias/music/avatars/Like Real People Do.jpg"}]}],"Page":[{"title":"404","date":"2019-07-19T08:41:10.000Z","type":"404","layout":"404","description":"你来到了没有知识的荒原 :(","_content":"","source":"404.md","raw":"---\ntitle: 404\ndate: 2019-07-19 16:41:10\ntype: \"404\"\nlayout: \"404\"\ndescription: \"你来到了没有知识的荒原 :(\"\n---\n","updated":"2021-10-24T08:43:41.000Z","path":"404.html","comments":1,"_id":"cl0du52rh0000fie984mi3net","content":"","site":{"data":{"friends":[{"name":"Hexo博客搭建","url":"https://zhuanlan.zhihu.com/c_1215655729367113728","title":"访问主页","introduction":"我的知乎博客搭建专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"godxiaolong","url":"https://blog.csdn.net/weixin_45682081","title":"访问主页","introduction":"我的CSDN主页，欢迎大家关注！","avatar":"/medias/avatars/csdn.ico"},{"name":"陈YF的博客","url":"https://blog.cyfan.top","title":"访问主页","introduction":"一个在互联网角落挣扎的小小博客，很小很小。","avatar":"https://blog.cyfan.top/pic/BLOGER.jpg"},{"name":"DylanLi","url":"https://cloudguest.cn","title":"前去学习","introduction":"人在少年，梦中不觉，醒后要归去。","avatar":"https://my-markdown-picbed.oss-cn-qingdao.aliyuncs.com/DylanBlog/logo2.jpg"},{"name":"框架师","url":"https://www.mobaijun.com","title":"前去学习","introduction":"墨白","avatar":"https://www.mobaijun.com/medias/avatar.jpg"}],"musics":[{"name":"总有一个人要先走","artist":"佚名","url":"/medias/music/总有一个人要先走.mp3","cover":"/medias/music/avatars/总有一个人要先走.jpg"},{"name":"Stay Alive","artist":"José González","url":"/medias/music/Stay Alive.mp3","cover":"/medias/music/avatars/Stay Alive.jpg"},{"name":"Like Real People Do","artist":"Hozier","url":"/medias/music/Like Real People Do.mp3","cover":"/medias/music/avatars/Like Real People Do.jpg"}]}},"excerpt":"","more":""},{"title":"about","date":"2020-01-01T08:41:10.000Z","type":"about","layout":"about","_content":"\n\n# 教育经历\n\n* <b>本科 计算机科学与技术</b>\n\n2019/09 - 现在\n<b>努力小白</b>\n\n\n\n# 联系方式\n\n* <b>电子邮箱</b>\n1571504536@qq.com\n* <b>地址</b>\n重庆市合川区交通路593号\n* <b>微信</b>\ngodxiaolong\n* <b>QQ</b>\n1571504536","source":"about/index.md","raw":"---\ntitle: about\ndate: 2020-01-01 16:41:10\ntype: \"about\"\nlayout: \"about\"\n---\n\n\n# 教育经历\n\n* <b>本科 计算机科学与技术</b>\n\n2019/09 - 现在\n<b>努力小白</b>\n\n\n\n# 联系方式\n\n* <b>电子邮箱</b>\n1571504536@qq.com\n* <b>地址</b>\n重庆市合川区交通路593号\n* <b>微信</b>\ngodxiaolong\n* <b>QQ</b>\n1571504536","updated":"2021-10-24T08:43:41.000Z","path":"about/index.html","comments":1,"_id":"cl0du52rm0002fie928w13rf5","content":"<h1 id=\"教育经历\"><a href=\"#教育经历\" class=\"headerlink\" title=\"教育经历\"></a>教育经历</h1><ul>\n<li><b>本科 计算机科学与技术</b></li>\n</ul>\n<p>2019&#x2F;09 - 现在<br><b>努力小白</b></p>\n<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li><b>电子邮箱</b><br><a href=\"mailto:&#x31;&#x35;&#x37;&#x31;&#53;&#x30;&#x34;&#53;&#51;&#x36;&#x40;&#x71;&#x71;&#46;&#99;&#x6f;&#109;\">&#x31;&#x35;&#x37;&#x31;&#53;&#x30;&#x34;&#53;&#51;&#x36;&#x40;&#x71;&#x71;&#46;&#99;&#x6f;&#109;</a></li>\n<li><b>地址</b><br>重庆市合川区交通路593号</li>\n<li><b>微信</b><br>godxiaolong</li>\n<li><b>QQ</b><br>1571504536</li>\n</ul>\n","site":{"data":{"friends":[{"name":"Hexo博客搭建","url":"https://zhuanlan.zhihu.com/c_1215655729367113728","title":"访问主页","introduction":"我的知乎博客搭建专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"godxiaolong","url":"https://blog.csdn.net/weixin_45682081","title":"访问主页","introduction":"我的CSDN主页，欢迎大家关注！","avatar":"/medias/avatars/csdn.ico"},{"name":"陈YF的博客","url":"https://blog.cyfan.top","title":"访问主页","introduction":"一个在互联网角落挣扎的小小博客，很小很小。","avatar":"https://blog.cyfan.top/pic/BLOGER.jpg"},{"name":"DylanLi","url":"https://cloudguest.cn","title":"前去学习","introduction":"人在少年，梦中不觉，醒后要归去。","avatar":"https://my-markdown-picbed.oss-cn-qingdao.aliyuncs.com/DylanBlog/logo2.jpg"},{"name":"框架师","url":"https://www.mobaijun.com","title":"前去学习","introduction":"墨白","avatar":"https://www.mobaijun.com/medias/avatar.jpg"}],"musics":[{"name":"总有一个人要先走","artist":"佚名","url":"/medias/music/总有一个人要先走.mp3","cover":"/medias/music/avatars/总有一个人要先走.jpg"},{"name":"Stay Alive","artist":"José González","url":"/medias/music/Stay Alive.mp3","cover":"/medias/music/avatars/Stay Alive.jpg"},{"name":"Like Real People Do","artist":"Hozier","url":"/medias/music/Like Real People Do.mp3","cover":"/medias/music/avatars/Like Real People Do.jpg"}]}},"excerpt":"","more":"<h1 id=\"教育经历\"><a href=\"#教育经历\" class=\"headerlink\" title=\"教育经历\"></a>教育经历</h1><ul>\n<li><b>本科 计算机科学与技术</b></li>\n</ul>\n<p>2019&#x2F;09 - 现在<br><b>努力小白</b></p>\n<h1 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h1><ul>\n<li><b>电子邮箱</b><br><a href=\"mailto:&#x31;&#x35;&#x37;&#x31;&#53;&#x30;&#x34;&#53;&#51;&#x36;&#x40;&#x71;&#x71;&#46;&#99;&#x6f;&#109;\">&#x31;&#x35;&#x37;&#x31;&#53;&#x30;&#x34;&#53;&#51;&#x36;&#x40;&#x71;&#x71;&#46;&#99;&#x6f;&#109;</a></li>\n<li><b>地址</b><br>重庆市合川区交通路593号</li>\n<li><b>微信</b><br>godxiaolong</li>\n<li><b>QQ</b><br>1571504536</li>\n</ul>\n"},{"title":"archives","date":"2020-01-01T08:39:20.000Z","type":"archives","layout":"archives","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2020-01-01 16:39:20\ntype: \"archives\"\nlayout: \"archives\"\n---","updated":"2021-10-24T08:43:41.000Z","path":"archives/index.html","comments":1,"_id":"cl0du52ro0005fie97i85e5kk","content":"","site":{"data":{"friends":[{"name":"Hexo博客搭建","url":"https://zhuanlan.zhihu.com/c_1215655729367113728","title":"访问主页","introduction":"我的知乎博客搭建专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"godxiaolong","url":"https://blog.csdn.net/weixin_45682081","title":"访问主页","introduction":"我的CSDN主页，欢迎大家关注！","avatar":"/medias/avatars/csdn.ico"},{"name":"陈YF的博客","url":"https://blog.cyfan.top","title":"访问主页","introduction":"一个在互联网角落挣扎的小小博客，很小很小。","avatar":"https://blog.cyfan.top/pic/BLOGER.jpg"},{"name":"DylanLi","url":"https://cloudguest.cn","title":"前去学习","introduction":"人在少年，梦中不觉，醒后要归去。","avatar":"https://my-markdown-picbed.oss-cn-qingdao.aliyuncs.com/DylanBlog/logo2.jpg"},{"name":"框架师","url":"https://www.mobaijun.com","title":"前去学习","introduction":"墨白","avatar":"https://www.mobaijun.com/medias/avatar.jpg"}],"musics":[{"name":"总有一个人要先走","artist":"佚名","url":"/medias/music/总有一个人要先走.mp3","cover":"/medias/music/avatars/总有一个人要先走.jpg"},{"name":"Stay Alive","artist":"José González","url":"/medias/music/Stay Alive.mp3","cover":"/medias/music/avatars/Stay Alive.jpg"},{"name":"Like Real People Do","artist":"Hozier","url":"/medias/music/Like Real People Do.mp3","cover":"/medias/music/avatars/Like Real People Do.jpg"}]}},"excerpt":"","more":""},{"title":"categories","date":"2020-01-01T08:39:20.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2020-01-01 16:39:20\ntype: \"categories\"\nlayout: \"categories\"\n---","updated":"2021-10-24T08:43:41.000Z","path":"categories/index.html","comments":1,"_id":"cl0du52rp0006fie9bwmrhcxd","content":"","site":{"data":{"friends":[{"name":"Hexo博客搭建","url":"https://zhuanlan.zhihu.com/c_1215655729367113728","title":"访问主页","introduction":"我的知乎博客搭建专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"godxiaolong","url":"https://blog.csdn.net/weixin_45682081","title":"访问主页","introduction":"我的CSDN主页，欢迎大家关注！","avatar":"/medias/avatars/csdn.ico"},{"name":"陈YF的博客","url":"https://blog.cyfan.top","title":"访问主页","introduction":"一个在互联网角落挣扎的小小博客，很小很小。","avatar":"https://blog.cyfan.top/pic/BLOGER.jpg"},{"name":"DylanLi","url":"https://cloudguest.cn","title":"前去学习","introduction":"人在少年，梦中不觉，醒后要归去。","avatar":"https://my-markdown-picbed.oss-cn-qingdao.aliyuncs.com/DylanBlog/logo2.jpg"},{"name":"框架师","url":"https://www.mobaijun.com","title":"前去学习","introduction":"墨白","avatar":"https://www.mobaijun.com/medias/avatar.jpg"}],"musics":[{"name":"总有一个人要先走","artist":"佚名","url":"/medias/music/总有一个人要先走.mp3","cover":"/medias/music/avatars/总有一个人要先走.jpg"},{"name":"Stay Alive","artist":"José González","url":"/medias/music/Stay Alive.mp3","cover":"/medias/music/avatars/Stay Alive.jpg"},{"name":"Like Real People Do","artist":"Hozier","url":"/medias/music/Like Real People Do.mp3","cover":"/medias/music/avatars/Like Real People Do.jpg"}]}},"excerpt":"","more":""},{"title":"contact","date":"2020-01-01T09:17:02.000Z","type":"contact","layout":"contact","_content":"\n# 欢迎留言\n大家有任何问题，都可以在评论区给我留言，或者加我联系方式：\n* QQ：**1571504536**\n* 微信：**godxiaolong**\n\n我很忙啦，如果不是很麻烦的问题就直接在评论区留言啦。\n**当然不介意小改改加我哦~~**\n\n# 友链交换\n想要交换友链的小伙伴，欢迎在评论区留言，留言格式：\n* **名称：**你的博客名称\n* **地址：**你的博客地址\n* **简介：**一句话简介\n* **头像：**你的头像地址\n\n例如我的博客友链，大家可以加到自己博客里哦：\n* **名称：**godxiaolong\n* **地址：**https://www.yashwlon.com\n* **简介：**Yshawlon\n* **头像：**https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.2/Images/avatars/favicon.jpg","source":"contact/index.md","raw":"---\ntitle: contact\ndate: 2020-01-01 17:17:02\ntype: \"contact\"\nlayout: \"contact\"\n---\n\n# 欢迎留言\n大家有任何问题，都可以在评论区给我留言，或者加我联系方式：\n* QQ：**1571504536**\n* 微信：**godxiaolong**\n\n我很忙啦，如果不是很麻烦的问题就直接在评论区留言啦。\n**当然不介意小改改加我哦~~**\n\n# 友链交换\n想要交换友链的小伙伴，欢迎在评论区留言，留言格式：\n* **名称：**你的博客名称\n* **地址：**你的博客地址\n* **简介：**一句话简介\n* **头像：**你的头像地址\n\n例如我的博客友链，大家可以加到自己博客里哦：\n* **名称：**godxiaolong\n* **地址：**https://www.yashwlon.com\n* **简介：**Yshawlon\n* **头像：**https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.2/Images/avatars/favicon.jpg","updated":"2021-10-24T08:43:41.000Z","path":"contact/index.html","comments":1,"_id":"cl0du52rp0007fie99nqm2x56","content":"<h1 id=\"欢迎留言\"><a href=\"#欢迎留言\" class=\"headerlink\" title=\"欢迎留言\"></a>欢迎留言</h1><p>大家有任何问题，都可以在评论区给我留言，或者加我联系方式：</p>\n<ul>\n<li>QQ：<strong>1571504536</strong></li>\n<li>微信：<strong>godxiaolong</strong></li>\n</ul>\n<p>我很忙啦，如果不是很麻烦的问题就直接在评论区留言啦。<br><strong>当然不介意小改改加我哦~~</strong></p>\n<h1 id=\"友链交换\"><a href=\"#友链交换\" class=\"headerlink\" title=\"友链交换\"></a>友链交换</h1><p>想要交换友链的小伙伴，欢迎在评论区留言，留言格式：</p>\n<ul>\n<li><strong>名称：</strong>你的博客名称</li>\n<li><strong>地址：</strong>你的博客地址</li>\n<li><strong>简介：</strong>一句话简介</li>\n<li><strong>头像：</strong>你的头像地址</li>\n</ul>\n<p>例如我的博客友链，大家可以加到自己博客里哦：</p>\n<ul>\n<li><strong>名称：</strong>godxiaolong</li>\n<li><strong>地址：</strong><a href=\"https://www.yashwlon.com/\">https://www.yashwlon.com</a></li>\n<li><strong>简介：</strong>Yshawlon</li>\n<li><strong>头像：</strong><a href=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.2/Images/avatars/favicon.jpg\">https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.2/Images/avatars/favicon.jpg</a></li>\n</ul>\n","site":{"data":{"friends":[{"name":"Hexo博客搭建","url":"https://zhuanlan.zhihu.com/c_1215655729367113728","title":"访问主页","introduction":"我的知乎博客搭建专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"godxiaolong","url":"https://blog.csdn.net/weixin_45682081","title":"访问主页","introduction":"我的CSDN主页，欢迎大家关注！","avatar":"/medias/avatars/csdn.ico"},{"name":"陈YF的博客","url":"https://blog.cyfan.top","title":"访问主页","introduction":"一个在互联网角落挣扎的小小博客，很小很小。","avatar":"https://blog.cyfan.top/pic/BLOGER.jpg"},{"name":"DylanLi","url":"https://cloudguest.cn","title":"前去学习","introduction":"人在少年，梦中不觉，醒后要归去。","avatar":"https://my-markdown-picbed.oss-cn-qingdao.aliyuncs.com/DylanBlog/logo2.jpg"},{"name":"框架师","url":"https://www.mobaijun.com","title":"前去学习","introduction":"墨白","avatar":"https://www.mobaijun.com/medias/avatar.jpg"}],"musics":[{"name":"总有一个人要先走","artist":"佚名","url":"/medias/music/总有一个人要先走.mp3","cover":"/medias/music/avatars/总有一个人要先走.jpg"},{"name":"Stay Alive","artist":"José González","url":"/medias/music/Stay Alive.mp3","cover":"/medias/music/avatars/Stay Alive.jpg"},{"name":"Like Real People Do","artist":"Hozier","url":"/medias/music/Like Real People Do.mp3","cover":"/medias/music/avatars/Like Real People Do.jpg"}]}},"excerpt":"","more":"<h1 id=\"欢迎留言\"><a href=\"#欢迎留言\" class=\"headerlink\" title=\"欢迎留言\"></a>欢迎留言</h1><p>大家有任何问题，都可以在评论区给我留言，或者加我联系方式：</p>\n<ul>\n<li>QQ：<strong>1571504536</strong></li>\n<li>微信：<strong>godxiaolong</strong></li>\n</ul>\n<p>我很忙啦，如果不是很麻烦的问题就直接在评论区留言啦。<br><strong>当然不介意小改改加我哦~~</strong></p>\n<h1 id=\"友链交换\"><a href=\"#友链交换\" class=\"headerlink\" title=\"友链交换\"></a>友链交换</h1><p>想要交换友链的小伙伴，欢迎在评论区留言，留言格式：</p>\n<ul>\n<li><strong>名称：</strong>你的博客名称</li>\n<li><strong>地址：</strong>你的博客地址</li>\n<li><strong>简介：</strong>一句话简介</li>\n<li><strong>头像：</strong>你的头像地址</li>\n</ul>\n<p>例如我的博客友链，大家可以加到自己博客里哦：</p>\n<ul>\n<li><strong>名称：</strong>godxiaolong</li>\n<li><strong>地址：</strong><a href=\"https://www.yashwlon.com/\">https://www.yashwlon.com</a></li>\n<li><strong>简介：</strong>Yshawlon</li>\n<li><strong>头像：</strong><a href=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.2/Images/avatars/favicon.jpg\">https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.2/Images/avatars/favicon.jpg</a></li>\n</ul>\n"},{"title":"friends","date":"2020-01-01T08:42:10.000Z","type":"friends","layout":"friends","_content":"\n# 赞赏名单\n感谢所有赞赏过我的小伙伴啦，你们的支持是我最大的动力！\n`panakot`\n\n# 友链交换\n想要交换友链的小伙伴，欢迎在留言板留言，留言格式：\n* **名称：**你的博客名称\n* **地址：**你的博客地址\n* **简介：**一句话简介\n* **头像：**你的头像地址\n\n例如我的博客友链，大家可以加到自己博客里哦：\n* **名称：**Tyzhao\n* **地址：**https://www.muyiio.com\n* **简介：**Yshawlon\n* **头像：**https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.2/Images/avatars/favicon.jpg","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2020-01-01 16:42:10\ntype: \"friends\"\nlayout: \"friends\"\n---\n\n# 赞赏名单\n感谢所有赞赏过我的小伙伴啦，你们的支持是我最大的动力！\n`panakot`\n\n# 友链交换\n想要交换友链的小伙伴，欢迎在留言板留言，留言格式：\n* **名称：**你的博客名称\n* **地址：**你的博客地址\n* **简介：**一句话简介\n* **头像：**你的头像地址\n\n例如我的博客友链，大家可以加到自己博客里哦：\n* **名称：**Tyzhao\n* **地址：**https://www.muyiio.com\n* **简介：**Yshawlon\n* **头像：**https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.2/Images/avatars/favicon.jpg","updated":"2021-10-24T08:43:41.000Z","path":"friends/index.html","comments":1,"_id":"cl0du52rq0009fie9bw2u46f2","content":"<h1 id=\"赞赏名单\"><a href=\"#赞赏名单\" class=\"headerlink\" title=\"赞赏名单\"></a>赞赏名单</h1><p>感谢所有赞赏过我的小伙伴啦，你们的支持是我最大的动力！<br><code>panakot</code></p>\n<h1 id=\"友链交换\"><a href=\"#友链交换\" class=\"headerlink\" title=\"友链交换\"></a>友链交换</h1><p>想要交换友链的小伙伴，欢迎在留言板留言，留言格式：</p>\n<ul>\n<li><strong>名称：</strong>你的博客名称</li>\n<li><strong>地址：</strong>你的博客地址</li>\n<li><strong>简介：</strong>一句话简介</li>\n<li><strong>头像：</strong>你的头像地址</li>\n</ul>\n<p>例如我的博客友链，大家可以加到自己博客里哦：</p>\n<ul>\n<li><strong>名称：</strong>Tyzhao</li>\n<li><strong>地址：</strong><a href=\"https://www.muyiio.com/\">https://www.muyiio.com</a></li>\n<li><strong>简介：</strong>Yshawlon</li>\n<li><strong>头像：</strong><a href=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.2/Images/avatars/favicon.jpg\">https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.2/Images/avatars/favicon.jpg</a></li>\n</ul>\n","site":{"data":{"friends":[{"name":"Hexo博客搭建","url":"https://zhuanlan.zhihu.com/c_1215655729367113728","title":"访问主页","introduction":"我的知乎博客搭建专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"godxiaolong","url":"https://blog.csdn.net/weixin_45682081","title":"访问主页","introduction":"我的CSDN主页，欢迎大家关注！","avatar":"/medias/avatars/csdn.ico"},{"name":"陈YF的博客","url":"https://blog.cyfan.top","title":"访问主页","introduction":"一个在互联网角落挣扎的小小博客，很小很小。","avatar":"https://blog.cyfan.top/pic/BLOGER.jpg"},{"name":"DylanLi","url":"https://cloudguest.cn","title":"前去学习","introduction":"人在少年，梦中不觉，醒后要归去。","avatar":"https://my-markdown-picbed.oss-cn-qingdao.aliyuncs.com/DylanBlog/logo2.jpg"},{"name":"框架师","url":"https://www.mobaijun.com","title":"前去学习","introduction":"墨白","avatar":"https://www.mobaijun.com/medias/avatar.jpg"}],"musics":[{"name":"总有一个人要先走","artist":"佚名","url":"/medias/music/总有一个人要先走.mp3","cover":"/medias/music/avatars/总有一个人要先走.jpg"},{"name":"Stay Alive","artist":"José González","url":"/medias/music/Stay Alive.mp3","cover":"/medias/music/avatars/Stay Alive.jpg"},{"name":"Like Real People Do","artist":"Hozier","url":"/medias/music/Like Real People Do.mp3","cover":"/medias/music/avatars/Like Real People Do.jpg"}]}},"excerpt":"","more":"<h1 id=\"赞赏名单\"><a href=\"#赞赏名单\" class=\"headerlink\" title=\"赞赏名单\"></a>赞赏名单</h1><p>感谢所有赞赏过我的小伙伴啦，你们的支持是我最大的动力！<br><code>panakot</code></p>\n<h1 id=\"友链交换\"><a href=\"#友链交换\" class=\"headerlink\" title=\"友链交换\"></a>友链交换</h1><p>想要交换友链的小伙伴，欢迎在留言板留言，留言格式：</p>\n<ul>\n<li><strong>名称：</strong>你的博客名称</li>\n<li><strong>地址：</strong>你的博客地址</li>\n<li><strong>简介：</strong>一句话简介</li>\n<li><strong>头像：</strong>你的头像地址</li>\n</ul>\n<p>例如我的博客友链，大家可以加到自己博客里哦：</p>\n<ul>\n<li><strong>名称：</strong>Tyzhao</li>\n<li><strong>地址：</strong><a href=\"https://www.muyiio.com/\">https://www.muyiio.com</a></li>\n<li><strong>简介：</strong>Yshawlon</li>\n<li><strong>头像：</strong><a href=\"https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.2/Images/avatars/favicon.jpg\">https://cdn.jsdelivr.net/gh/MUYIio/CDN@1.2/Images/avatars/favicon.jpg</a></li>\n</ul>\n"},{"title":"tags","date":"2020-01-01T08:40:27.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2020-01-01 16:40:27\ntype: \"tags\"\nlayout: \"tags\"\n---","updated":"2021-10-24T08:43:41.000Z","path":"tags/index.html","comments":1,"_id":"cl0du52rr000afie9grjd6xun","content":"","site":{"data":{"friends":[{"name":"Hexo博客搭建","url":"https://zhuanlan.zhihu.com/c_1215655729367113728","title":"访问主页","introduction":"我的知乎博客搭建专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"godxiaolong","url":"https://blog.csdn.net/weixin_45682081","title":"访问主页","introduction":"我的CSDN主页，欢迎大家关注！","avatar":"/medias/avatars/csdn.ico"},{"name":"陈YF的博客","url":"https://blog.cyfan.top","title":"访问主页","introduction":"一个在互联网角落挣扎的小小博客，很小很小。","avatar":"https://blog.cyfan.top/pic/BLOGER.jpg"},{"name":"DylanLi","url":"https://cloudguest.cn","title":"前去学习","introduction":"人在少年，梦中不觉，醒后要归去。","avatar":"https://my-markdown-picbed.oss-cn-qingdao.aliyuncs.com/DylanBlog/logo2.jpg"},{"name":"框架师","url":"https://www.mobaijun.com","title":"前去学习","introduction":"墨白","avatar":"https://www.mobaijun.com/medias/avatar.jpg"}],"musics":[{"name":"总有一个人要先走","artist":"佚名","url":"/medias/music/总有一个人要先走.mp3","cover":"/medias/music/avatars/总有一个人要先走.jpg"},{"name":"Stay Alive","artist":"José González","url":"/medias/music/Stay Alive.mp3","cover":"/medias/music/avatars/Stay Alive.jpg"},{"name":"Like Real People Do","artist":"Hozier","url":"/medias/music/Like Real People Do.mp3","cover":"/medias/music/avatars/Like Real People Do.jpg"}]}},"excerpt":"","more":""}],"Post":[{"title":"Github + Hexo 搭建个人博客超详细教程","top":true,"cover":false,"toc":true,"mathjax":true,"date":"2020-02-18T13:17:35.000Z","password":null,"summary":"搭建博客的初衷是希望用博客记录下自己的学习过程，帮助自己复习。","_content":"![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/01.png)\n\n<font color=magenta size=4>**在搭建过程中遇到问题欢迎来骚扰我哈！<font color=red size=4> V：godxiaolong，QQ:1571504536</font>，如果觉得有帮助的话不介意打赏一杯奶茶哟~**</font>\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/02.png)\n\n# 前言 #\n- 作为一名计算机爱好者，摸索了一周搭建出自己的博客。目前只学    习了c语言，没有任何前端知识和网站开发经验，总的来说，算不上很难，     但也要费些心思。网上各类教程应有尽有，只要肯摸索，还是水到渠成的事。另外，写下这篇文章，记录下自己的经验，给需要的朋友，祝你早日拥有自己的博客！\n\n- 搭建博客的初衷是希望用博客记录下自己的学习过程，帮助自己复习，分享一部分不成熟的思考，敦促自己把既定的目标完成。\n- **为什么要搭建自己的博客？可以看看这三篇文章：**\n\n[《为什么你应该（从现在开始就）写博客》](http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/ \"为什么你应该（从现在开始就）写博客\")   (By 刘未鹏 | Mind Hacks)\n\n[《为什么要自建博客？》](https://www.zhihu.com/question/19916345 \"为什么要自建博客？\")   (By 知乎)\n\n[《我为什么写博客》](https://www.cnblogs.com/jhzhu/p/3893297.html \"我为什么写博客\") （By 知明所以）\n\n\n我们需要知道搭建博客要用到的框架。<font color=red size=3>Hexo</font>是高效的静态站点生成框架，它基于<font color=red size=3>Node.js</font>。我们使用<font color=red size=3>MarkDown</font>在本地编辑我们的博客文章，通过<font color=red size=3>Hexo</font>生成静态页面，再用两条命令即可部署到我们的网站。无需关心网页源代码的具体细节，我们只需要用心写好自己的博客内容就行。\n\n## 本文目录 ##\n- **快速搭建**\n- 安装<font color=red size=3>Node.js</font>\n- 添加国内镜像\n- 安装<font color=red size=3>Git </font>\n- 注册<font color=red size=3>Github</font>账号\n- 创建<font color=red size=3>Git</font>仓库\n- 安装<font color=red size=3>Hexo</font> \n- 配置本地<font color=red size=3>Hexo</font>\n- 连接<font color=red size=3>Github</font>与本地 \n- 写文章、发布文章 \n- <font color=red size=3>MarkDown</font>文章编辑器说明\n- 配置个性化域名\n- 更换自己喜欢的<font color=red size=3>Hexo</font>主题\n- 我的博客源代码\n- 结语\n\n----\n\n# 快速搭建 #\n有的朋友可能不想去折腾，自定义主题也比较麻烦，亦或有尝试几次搭建却失败，那就可以看这部分。快速搭建可以帮助我们更快搭建出自己的博客，优点是别人博客有的东西你都有，就跟复制差不多；缺点是博客里的配置信息都是别人的，不过不要紧，稍稍改改配置就可以。\n\n在这里以我的博客为例。\n\n## 一、下载博客源代码 ##\n\n大家可以直接素质二连，<font color=red size=3>Star&Fork</font>我的博客源代码：<https://github.com/MUYIio/hexo-themes-matery>，这里我给出两种下载方法：\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/03.png)\n\n**第一种**：直接<font color=red size=3>DownLoad</font>，下载到本地就可以。（**不推荐**）\n\n**第二种**：如果你已经安装了[Git](https://git-scm.com/download/win \"Git\")，就可以右键单击<font color=red size=3>Come Bash Here</font>运行\n\n\n\n```bash\ngit clone git@github.com:MUYIio/hexo-themes-matery.git\n```\n\n\n\n将所有文件下载到本地，这个复杂一点。\n\n## 二、修改博客文档配置 ##\n\n首先将我们下载的博客源代码解压，然后修改主要配置：\n\n- 根目录配置文件<font color=red size=3>_config.yml</font>和主题目录配置文件<font color=red size=3>_config.yml</font>中修改个人信息。\n- 根目录配置文件中修改<font color=red size=3>deploy</font>一栏的<font color=red size=3>repository</font>。\n- 根目录配置文件中修改<font color=red size=3>baidu_url_submit</font>一栏的<font color=red size=3>token</font>。\n- 主题配置文件中修改<font color=red size=3>gitalk</font>一栏，修改方法见正文。\n\n我给出的是博客比较明显的几个地方，先修改这几个地方，其它的可以自己慢慢摸索修改。\n\n最后一步，**本地的运行环境还是需要搭建好的**，跟着下文操作到连接Github与本地，环境就算是搭建完成。\n\n**本地环境搭建好之后会生成的文件：**\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/35.png)\n\n然后直接把<font color=red size=3>Hexo</font>文件夹里面的文件删掉，把我的源代码的文件全部移动过来，就是这样了：\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/37.png)\n\n然后在<font color=red size=3>Hexo</font>文件夹下右键单击鼠标，点击 <font color=red size=3>Git Bash Here</font>点击输入以下命令上传就可以了：\n\n    hexo clean\n    hexo g\n    hexo d\n\n# 安装Node.js #\n了解一下什么是<font color=red size=3>Node.js</font>：\n\n> <font color=red size=3>Node.js</font>就是一个用于创建服务器端应用程序的运行系统，它可以轻松构建网络或其他事件驱动的应用程序服务器。\n\n需要用到的命令：\n        \n    $ git --version\n    $ node -v\n    $ npm -v\n\n[点击此处](https://nodejs.org/en/download/ \"Node.js\")进入<font color=red size=3>Node.js</font>官网下载相应版本即可，安装时选项全部默认，一路点击<font color=red size=3>Next</font>。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/04.png)\n\n检验是否安装成功：\n按<font color=red size=3>Win+R</font>打开命令提示符，输入<font color=red size=3>node -v</font>和<font color=red size=3>npm -v</font>，如果出现版本号，那么就安装成功了。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/05.png)\n\n# 添加国内镜像 #\n这里我们使用阿里的国内镜像进行加速，按Win+R打开命令提示符输入：\n\n    npm config set registry https://registry.npm.taobao.org\n\n# 安装Git #\n> <font color=red size=3>Git</font>是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理，帮助我们把本地网页上传到<font color=red size=3>Github</font>。\n\n[点击此处](https://git-scm.com/download/win \"Git\")进入Git官网下载相应版本，默认安装即可。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/005.png)\n\n参考资料：[《如何在windows下安装GIT》](https://www.cnblogs.com/jytx/p/5602927.html \"如何在windows下安装GIT\") (By 俊雨廷休)\n\n检验是否安装成功：\n\n安装完成后在命令提示符中输入<font color=red size=3>git --version</font>验证是否安装成功\n\n    git --version\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/06.png)\n\n# 注册Github账号 #\n\n<font color=red size=3>Github</font>作为全球最大的开源社区，相信朋友们都已经有了吧，如果没有，[点击此处](https://github.com/ \"Github\")进入<font color=red size=3>Github</font>官网点击 <font color=red size=3>Sign Up </font>注册账户。\n\n# 创建git仓库 #\n登录<font color=red size=3>Github</font>创建一个仓库\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/07.png)\n\n如下图所示，**输入自己的项目名字，后面一定要加<font color=red size=3>.github.io</font>后缀，<font color=red size=3>README</font>初始化也要勾上。名称一定要和你的<font color=red size=3>Github</font>名字完全一样，比如你<font color=red size=3>github</font>名字叫<font color=red size=3>A</font>，那么仓库名字一定要是<font color=red size=3>A.github.io</font>。**\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/08.png)\n\n选择一个自己喜欢的主题：\n在上面创建的仓库里面点击<font color=red size=3>Settings</font>（不是头像下面那个<font color=red size=3>Settings</font>），向下拉到最后有个<font color=red size=3>GitHub Pages</font>，点击<font color=red size=3>Choose a theme</font>选择一个主题。然后等一会儿，再回到<font color=red size=3>GitHub Pages</font>，就可以预览效果啦。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/09.png)\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/10.png)\n\n# 安装Hexo #\n> <font color=red size=3>Hexo</font>是一款基于<font color=red size=3>Node.js</font>的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在<font color=red size=3>GitHub</font>和<font color=red size=3>Heroku</font>上，是搭建博客的首选框架。\n\n选择一个磁盘，新建一个文件夹用来存放博客文件。比如我的<font color=red size=3>（C/panakot Blog）</font>，在该文件夹下右键单击鼠标，点击<font color=red size=3> Git Bash Here</font>，输入以下<font color=red size=3> npm </font>命令即可安装\n\n    $ npm install hexo-cli -g\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/11.png)\n\n输入<font color=red size=3>hexo -v</font>即可检验是否安装成功，我这里就不演示了。\n\n# 配置本地hexo #\n还是在刚才新建的文件夹下再新建一个<font color=red size=3>Hexo</font>文件夹，比如我的<font color=red size=3>（C/panakot Blog/Hexo）</font>，在<font color=red size=3>Hexo</font>文件夹下右键单击鼠标，点击<font color=red size=3> Git Bash Here</font>，依次输入以下<font color=red size=3> npm </font>命令即可初始化。\n\n    hexo init\n    npm install\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/12.png)\n\n初始化成功生成的文件：\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/13.png)\n\n接着我们输入<font color=red size=3>hexo g</font>生成静态网页，然后输入<font color=red size=3>hexo s</font>打开本地服务器，然后浏览器打开<http://localhost:4000/>，就可以预览我们的博客啦，如图：\n\n显示以下信息说明操作正确：\n\n```INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.```\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/14.png)\n\n按<font color=red size=3>ctrl+c</font>关闭本地服务器。\n\n**我们以后常用到的<font color=red size=3>Hexo</font>命令：**\n\n- <font color=red size=3>hexo s</font>等价于 <font color=red size=3>hexo server</font>  #<font color=red size=3>Hexo</font> 会监视文件变动并自动更新，除修改站点配置文件外,无须重启服务器,直接刷新网页即可生效。\n\n- <font color=red size=3>hexo g</font> 等价于 <font color=red size=3>hexo generate</font>  #生成静态网页 (执行 $ <font color=red size=3>hexo g</font>后会在站点根目录下生成<font color=red size=3>public</font>文件夹,<font color=red size=3> hexo</font>会将\"<font color=red size=3>/blog/source/</font>\" 下面的<font color=red size=3>.md</font>后缀的文件编译为<font color=red size=3>.html</font>后缀的文件,存放在\"<font color=red size=3>/blog/public/ </font>\" 路径下)\n\n- <font color=red size=3>hexo d </font>等价于 <font color=red size=3>hexo deploy</font>  #将本地数据部署到远端服务器(如<font color=red size=3>github</font>)\n- <font color=red size=3>hexo clean </font> #清除缓存 ,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的<font color=red size=3>public</font>文件夹\n\n# 连接Github与本地 #\n## 一、生成密钥 ##\n\n右键单击鼠标，点击 <font color=red size=3>Git Bash Here</font>输入以下命令：\n\n    git config --global user.name \"Name\"\n    git config --global user.email \"Email\"\n\n**<font color=red size=3>Name</font>和<font color=red size=3>Email</font>是我们注册<font color=red size=3>Github</font>时的用户名和邮箱。**\n\n然后生成密钥：\n\n    ssh-keygen -t rsa -C \"Email\"\n\n\n**<font color=red size=3>Email</font>是我们注册<font color=red size=3>Github</font>时的邮箱**\n\n然后会出现：\n\n    Generating public/private rsa key pair.\n    Enter file in which to save the key (/c/Users/you/.ssh/id_rsa):\n    //到这里可以直接回车将密钥按默认文件进行存储\n\n回车之后：\n\n    Enter passphrase (empty for no passphrase):\n    //这里是要你输入密码，其实不需要输什么密码，直接回车就行\n    Enter same passphrase again:\n\n接下来会有：\n\n    Your identification has been saved in /c/Users/you/.ssh/id_rsa.\n    Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.\n    The key fingerprint is:\n    这里是各种字母数字组成的字符串，结尾是你的邮箱\n    The key's randomart image is:\n    这里也是各种字母数字符号组成的字符串\n\n现在密钥已经生成，一般存放在<font color=red size=3>（/c/Users/you/.ssh/id_rsa.pub.）</font>，我们运行下面的命令将密钥复制为粘贴板：\n\n     clip < ~/.ssh/id_rsa.pub\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/15.png)\n\n## 二、连接Github ##\n在<font color=red size=3>Github</font>头像下面点击<font color=red size=3>Settings</font>，再点击<font color=red size=3>SSH and GPG keys</font>，新建一个<font color=red size=3>SSH</font>，名字任意。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/16.png)\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/17.png)\n\n然后将刚才复制的密钥添加就可以了，像这样：\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/18.png)\n\n**本地连接Github**\n\n右键单击鼠标，点击<font color=red size=3> Git Bash Here</font>输入以下命令，如果如下图所示，出现你的用户名，那就成功了\n\n    ssh -T git@github.com\n    //注意不要做任何修改\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/19.png)\n\n用记事本打开博客根目录下的<font color=red size=3>_config.yml</font>文件，这是博客的配置文件，我们需要修改一下才能连接<font color=red size=3>Github</font>。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/20.png)\n\n修改最后一行的配置：\n\n    # Deployment\n    ## Docs: https://hexo.io/docs/deployment.html\n    deploy:\n      type:\n改为：\n\n    # Deployment\n    ## Docs: https://hexo.io/docs/deployment.html\n    deploy:\n      type: git\n      repository: git@github.com:panakot/panakot.github.io.git\n      branch: master\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/21.png)\n\n切记：\n\n- **<font color=red size=3>repository</font>修改为你自己的<font color=red size=3>github</font>项目地址**。\n- **每一个冒号后面都有一个空格。**\n\n# 写文章、发布文章 #\n首先在博客根目录下右键打开<font color=red size=3>Git Bash Here</font>输入以下命令，安装一个扩展.\n\n    npm i hexo-deployer-git\n\n然后输入下面的命令，新建一篇文章。\n\n    hexo new post \"article title\"\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/22.png)\n\n然后打开<font color=red size=3>C:\\panakot Blog\\Hexo\\source\\_posts</font>的目录，可以发现下面多了一个文件夹和一个<font color=red size=3>.md</font>文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/23.png)\n\n编写完<font color=red size=3>markdown</font>文件后，根目录下右键打开<font color=red size=3>Git Bash Here</font>输入<font color=red size=3>hexo g</font>生成静态网页，然后输入<font color=red size=3>hexo s</font>可以本地预览效果，最后输入<font color=red size=3>hexo d</font>上传到<font color=red size=3>github</font>上。\n\n你的博客地址：<font color=red size=3>https://你的用户名.github.io</font>，比如我的是：<https://muyiio.github.io>，现在每个人都可以通过此链接访问你的博客\n\n# MarkDown文章编辑器说明 #\n> 前面我们提到了使用<font color=red size=3>MarkDown</font>编辑我们的博客文章。<font color=red size=3> Markdown</font> 是<font color=red size=3> 2004</font> 年由 <font color=red size=3>John Gruberis </font>设计和开发的纯文本格式的语法，非常的简单实用，常用的标记符号屈指可数，几分钟即可学会，<font color=red size=3> .md </font>文件可以使用支持 <font color=red size=3>Markdown </font>语法的编辑器编辑，然后将写好的文章<font color=red size=3>（.md文件）</font>保存到<font color=red size=3> \\Hexo\\source\\_posts </font>文件夹下即可。\n\n <font color=red size=3>Windows </font>上推荐使用 <font color=red size=3>MarkdownPad2 </font>或者<font color=red size=3>小书匠</font>编辑器，<font color=red size=3>macOS </font>上使用<font color=red size=3> Mou</font> 编辑器，<font color=red size=3>Linux </font>上使用 <font color=red size=3>Remarkable</font> 编辑器，<font color=red size=3>Web </font>端上使用 简书。\n\n**[点击此处](http://markdownpad.com/download.html \"MarkDown\")下载<font color=red size=3>MarkDown</font>\n，刚使用的朋友或许不知道如何使用这个编辑器，只需要几分钟就可以掌握啦，给出以下几个我觉得不错的参考：**\n\n[《献给写作者的 Markdown 新手指南》](https://www.jianshu.com/p/q81RER/ \"献给写作者的 Markdown 新手指南\") （By 简书）\n\n[《Markdown语法图文全面详解(10分钟学会)》](https://blog.csdn.net/u014061630/article/details/81359144?utm_source=app \"Markdown语法图文全面详解\")（By 黑暗星球）\n\n[《Markdown 语法手册 （完整整理版）》](https://blog.csdn.net/witnessai1/article/details/52551362?utm_source=app \"Markdown 语法手册 （完整整理版）\") （By witnessai1）\n\n[《认识与入门 Markdown》](https://sspai.com/post/25137 \"认识与入门 Markdown\")（By Te_Lee）\n\n写完文章记得在博客根目录<font color=red size=3>Bash Here</font>输入<font color=red size=3>hexo g</font>和<font color=red size=3>hexo d</font>上传到网站。\n# 配置个性化域名 #\n一顿操作下来，打开我们的博客还是：<font color=red size=3>www.xxx.github.io</font>，是不是很没有牌面？我们可以考虑购买一个专属域名，以后打开博客就是这样：<font color=red size=3>www.xxx.com </font>。\n\n[阿里云](https://www.aliyun.com/ \"阿里云\")和[腾讯云](https://cloud.tencent.com/ \"腾讯云\")都可以，我的是腾讯云，购买域名后首先需要添加解析：\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/24.png)\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/25.png)\n\n**方法一：**点击添加记录，需要添加两个记录，两个记录类型都是 <font color=red size=3>CNAME </font>，第一个主机记录为<font color=red size=3> @ </font>，第二个主机记录为<font color=red size=3> www</font>，记录值都是填你自己的博客地址（比如我的是：<font color=red size=3>muyiio.github.io</font>），保存之后域名解析就完成了！\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/27.png)\n\n**方法二：**两个记录类型为<font color=red size=3> A </font>，第一个主机记录为<font color=red size=3> @ </font>，第二个主机记录为<font color=red size=3> www</font>，记录值都为博客的<font color=red size=3> IP</font> 地址，<font color=red size=3>IP </font>地址可以<font color=red size=3> cmd</font> 中输入<font color=red size=3> ping</font> 你的博客地址 获得（比如我的：<font color=red size=3>ping muyiio.github.io</font>），保存之后域名解析就完成了！\n\n参考资料：\n\n[《域名解析中A记录、CNAME、MX记录、NS记录的区别和联系》](https://blog.csdn.net/it_man/article/details/9017307 \"域名解析中A记录、CNAME、MX记录、NS记录的区别和联系\")\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/26.png)\n\n**不管在哪个平台购买域名，操作都大同小异，这里说明两点**：\n\n> 如果你填写的是没有<font color=red size=3>www</font>的，比如 <font color=red size=3>muyio.com</font>，那么无论是访问<font color=red size=3> https://www.muyiio.com </font>还是<font color=red size=3> https://muyiio.com</font> ，都会自动跳转到<font color=red size=3> https://muyiio.com</font>。\n\n\n> 如果你填写的是带<font color=red size=3>www</font>的，比如 <font color=red size=3>www.muyiio.com </font>，那么无论是访问 <font color=red size=3>https://www.muyiio.com</font> 还是 <font color=red size=3>https://muyiio.com </font>，都会自动跳转到 <font color=red size=3>http://www.imuyiio.com</font>。\n\n然后打开你的<font color=red size=3>github</font>博客项目，点击settings，拉到下面<font color=red size=3>Custom domain</font>处，填上你自己的域名，保存就可以了。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/28.png)\n\n现在我们的项目根目录应该会出现一个名为<font color=red size=3>CNAME</font>的文件了。如果没有的话，打开你本地博客<font color=red size=3>/source</font>目录，我的是<font color=red size=3>C:\\Blog\\Hexo\\source</font>，新建<font color=red size=3>CNAME</font>文件，<font color=red size=3>（注意不要加.txt，没有任何后缀名！）</font>。然后在里面写上你的域名，保存。最后运行<font color=red size=3>hexo g、hexo d</font>上传到<font color=red size=3>github</font>。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/29.png)\n\n现在就可以通过我们的个性化域名：<font color=red size=3>www.xxx.com、xxx.com</font>访问自己的博客了。\n\n# 更换自己喜欢的Hexo主题 #\n点击进入[Hexo主题专栏](https://hexo.io/themes/ \"Hexo主题专栏\")可以看到很多<font color=red size=3>Hexo</font>主题：\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/30.png)\n\n推荐：\n\n[几个好用的hexo主题](https://blog.csdn.net/fail_perfectly/article/details/83791781?utm_source=app \"几个好用的hexo主题\") (By fail_perfectly)\n\n这里我们以[Bean Tech](http://huangxuan.me/ \"Bean Tech\")主题为例，下滑到底部我们可以看到他的<font color=red size=3>GitHub</font>（<font color=red size=3>有的主题是：Theme by xxx，点击那里也是进入GitHub地址</font>）：\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/31.png)\n\n点击进入主题的<font color=red size=3>GitHub</font>地址：\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/32.png)\n\n复制该项目地址：\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/33.png)\n\n然后打开<font color=red size=3> Hexo </font>文件夹下的<font color=red size=3> themes</font> 目录（如：<font color=red size=3>C:\\MUYIio Blog\\Hexo\\themes</font>），右键<font color=red size=3> Git Bash Here</font>，输入以下命令：\n\n    $ git clone 此处填写你刚才复制的主题地址\n\n以我们刚才复制的为例：\n\n    $ git clone https://github.com/Huxpro/huxpro.github.io\n\n下载完成后即可在<font color=red size=3> themes </font>目录下生成 <font color=red size=3>hexo-theme-Bean-Tech </font>文件夹，然后打开 <font color=red size=3>Hexo</font> 文件夹下的配置文件 <font color=red size=3>_config.yml </font>，找到关键字 <font color=red size=3>theme</font>，修改参数为：<font color=red size=3>theme：hexo-theme-Bean-Tech </font>（其他主题修改成相应名称即可），**再次注意冒号后面有一个空格！**\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/34.png)\n\n现在我们的主题已经替换完成，将它部署到我们的博客，博客根目录下右键<font color=red size=3> Git Bash Here</font>，输入以下命令：\n\n    hexo clean\n    hexo g\n    hexo d\n\n现在访问我们的网站就可以看到主题已经更换了，但是比如网站标题，图标等都没有更换，我们博客文件中有两份主要的配置文件，名称都是 <font color=red size=3>_config.yml</font> ，它们均是用于站点配置使用的。其中，一份位于站点根目录下（比如我的：<font color=red size=3>C:\\MUYIio Blog\\Hexo\\_config.yml</font>），主要包含<font color=red size=3> Hexo</font> 本身整站的配置；另一份位于主题目录下（比如我的：<font color=red size=3>C:\\MUYIio Blog\\Hexo\\themes\\hexo-theme-matery\\_config.yml</font>），这份配置由主题作者提供，主要用于配置主题相关的选项，一般<font color=red size=3> _config.yml </font>文件里都有相关注释，按需修改即可。\n\n\n# 我的博客源代码 #\n**我的博客源代码地址：<https://github.com/MUYIio/hexo-themes-matery>，有心的话可以给个<font color=red size=3>Star&Fork</font>。**\n\n下载源代码：git clone git@github.com:MUYIio/hexo-themes-matery.git\n\n\n\n在文章开头给出了快速搭建教程，相对于自己从头开始搭建还是比较方便的，修复了很多<font color=red size=3>Bug</font>，也添加了一些插件，下载就可以使用，可以帮你们省去个性化配置带来的很多麻烦。\n\n主题的原地址在这里：[hexo-theme-matery](https://github.com/blinkfox/hexo-theme-matery)，作者把文档写得也非常的详细，还有中英文两个版本，建议可以多看几遍，在本地修改的时候轻松一些。\n\n使用我的源代码之前本地的环境还是要搭建好，就是前面一部分。\n\n\n<table><tr><td bgcolor=orange>\n-----------------------------------------------------------------------------------------------------------                                                                                                                                                                                                            \n</td></tr></table>\n\n# 结语 #\n初学者可能会觉得困难，毕竟很多东西都是第一次接触，当初我也尝试了好几次才成功，不要放弃，弄错了就删掉重新来过，当你把博客搭建出来会觉得受益良多的。\n\n文章中难免有错误的地方，有大佬发现了欢迎给我指正！有的地方解释不够详细，可以百度一下看看细节，文章中的引用以及参考资料涉及侵权请联系我删除！\n","source":"_posts/1.md","raw":"---\ntitle: Github + Hexo 搭建个人博客超详细教程\ntop: true\ncover: false\ntoc: true\nmathjax: true\ndate: 2020-02-18 21:17:35\npassword:\nsummary: 搭建博客的初衷是希望用博客记录下自己的学习过程，帮助自己复习。\ntags:\n- Github\n- Hexo\n- 博客搭建\ncategories:\n- Blog\n---\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/01.png)\n\n<font color=magenta size=4>**在搭建过程中遇到问题欢迎来骚扰我哈！<font color=red size=4> V：godxiaolong，QQ:1571504536</font>，如果觉得有帮助的话不介意打赏一杯奶茶哟~**</font>\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/02.png)\n\n# 前言 #\n- 作为一名计算机爱好者，摸索了一周搭建出自己的博客。目前只学    习了c语言，没有任何前端知识和网站开发经验，总的来说，算不上很难，     但也要费些心思。网上各类教程应有尽有，只要肯摸索，还是水到渠成的事。另外，写下这篇文章，记录下自己的经验，给需要的朋友，祝你早日拥有自己的博客！\n\n- 搭建博客的初衷是希望用博客记录下自己的学习过程，帮助自己复习，分享一部分不成熟的思考，敦促自己把既定的目标完成。\n- **为什么要搭建自己的博客？可以看看这三篇文章：**\n\n[《为什么你应该（从现在开始就）写博客》](http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/ \"为什么你应该（从现在开始就）写博客\")   (By 刘未鹏 | Mind Hacks)\n\n[《为什么要自建博客？》](https://www.zhihu.com/question/19916345 \"为什么要自建博客？\")   (By 知乎)\n\n[《我为什么写博客》](https://www.cnblogs.com/jhzhu/p/3893297.html \"我为什么写博客\") （By 知明所以）\n\n\n我们需要知道搭建博客要用到的框架。<font color=red size=3>Hexo</font>是高效的静态站点生成框架，它基于<font color=red size=3>Node.js</font>。我们使用<font color=red size=3>MarkDown</font>在本地编辑我们的博客文章，通过<font color=red size=3>Hexo</font>生成静态页面，再用两条命令即可部署到我们的网站。无需关心网页源代码的具体细节，我们只需要用心写好自己的博客内容就行。\n\n## 本文目录 ##\n- **快速搭建**\n- 安装<font color=red size=3>Node.js</font>\n- 添加国内镜像\n- 安装<font color=red size=3>Git </font>\n- 注册<font color=red size=3>Github</font>账号\n- 创建<font color=red size=3>Git</font>仓库\n- 安装<font color=red size=3>Hexo</font> \n- 配置本地<font color=red size=3>Hexo</font>\n- 连接<font color=red size=3>Github</font>与本地 \n- 写文章、发布文章 \n- <font color=red size=3>MarkDown</font>文章编辑器说明\n- 配置个性化域名\n- 更换自己喜欢的<font color=red size=3>Hexo</font>主题\n- 我的博客源代码\n- 结语\n\n----\n\n# 快速搭建 #\n有的朋友可能不想去折腾，自定义主题也比较麻烦，亦或有尝试几次搭建却失败，那就可以看这部分。快速搭建可以帮助我们更快搭建出自己的博客，优点是别人博客有的东西你都有，就跟复制差不多；缺点是博客里的配置信息都是别人的，不过不要紧，稍稍改改配置就可以。\n\n在这里以我的博客为例。\n\n## 一、下载博客源代码 ##\n\n大家可以直接素质二连，<font color=red size=3>Star&Fork</font>我的博客源代码：<https://github.com/MUYIio/hexo-themes-matery>，这里我给出两种下载方法：\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/03.png)\n\n**第一种**：直接<font color=red size=3>DownLoad</font>，下载到本地就可以。（**不推荐**）\n\n**第二种**：如果你已经安装了[Git](https://git-scm.com/download/win \"Git\")，就可以右键单击<font color=red size=3>Come Bash Here</font>运行\n\n\n\n```bash\ngit clone git@github.com:MUYIio/hexo-themes-matery.git\n```\n\n\n\n将所有文件下载到本地，这个复杂一点。\n\n## 二、修改博客文档配置 ##\n\n首先将我们下载的博客源代码解压，然后修改主要配置：\n\n- 根目录配置文件<font color=red size=3>_config.yml</font>和主题目录配置文件<font color=red size=3>_config.yml</font>中修改个人信息。\n- 根目录配置文件中修改<font color=red size=3>deploy</font>一栏的<font color=red size=3>repository</font>。\n- 根目录配置文件中修改<font color=red size=3>baidu_url_submit</font>一栏的<font color=red size=3>token</font>。\n- 主题配置文件中修改<font color=red size=3>gitalk</font>一栏，修改方法见正文。\n\n我给出的是博客比较明显的几个地方，先修改这几个地方，其它的可以自己慢慢摸索修改。\n\n最后一步，**本地的运行环境还是需要搭建好的**，跟着下文操作到连接Github与本地，环境就算是搭建完成。\n\n**本地环境搭建好之后会生成的文件：**\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/35.png)\n\n然后直接把<font color=red size=3>Hexo</font>文件夹里面的文件删掉，把我的源代码的文件全部移动过来，就是这样了：\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/37.png)\n\n然后在<font color=red size=3>Hexo</font>文件夹下右键单击鼠标，点击 <font color=red size=3>Git Bash Here</font>点击输入以下命令上传就可以了：\n\n    hexo clean\n    hexo g\n    hexo d\n\n# 安装Node.js #\n了解一下什么是<font color=red size=3>Node.js</font>：\n\n> <font color=red size=3>Node.js</font>就是一个用于创建服务器端应用程序的运行系统，它可以轻松构建网络或其他事件驱动的应用程序服务器。\n\n需要用到的命令：\n        \n    $ git --version\n    $ node -v\n    $ npm -v\n\n[点击此处](https://nodejs.org/en/download/ \"Node.js\")进入<font color=red size=3>Node.js</font>官网下载相应版本即可，安装时选项全部默认，一路点击<font color=red size=3>Next</font>。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/04.png)\n\n检验是否安装成功：\n按<font color=red size=3>Win+R</font>打开命令提示符，输入<font color=red size=3>node -v</font>和<font color=red size=3>npm -v</font>，如果出现版本号，那么就安装成功了。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/05.png)\n\n# 添加国内镜像 #\n这里我们使用阿里的国内镜像进行加速，按Win+R打开命令提示符输入：\n\n    npm config set registry https://registry.npm.taobao.org\n\n# 安装Git #\n> <font color=red size=3>Git</font>是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理，帮助我们把本地网页上传到<font color=red size=3>Github</font>。\n\n[点击此处](https://git-scm.com/download/win \"Git\")进入Git官网下载相应版本，默认安装即可。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/005.png)\n\n参考资料：[《如何在windows下安装GIT》](https://www.cnblogs.com/jytx/p/5602927.html \"如何在windows下安装GIT\") (By 俊雨廷休)\n\n检验是否安装成功：\n\n安装完成后在命令提示符中输入<font color=red size=3>git --version</font>验证是否安装成功\n\n    git --version\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/06.png)\n\n# 注册Github账号 #\n\n<font color=red size=3>Github</font>作为全球最大的开源社区，相信朋友们都已经有了吧，如果没有，[点击此处](https://github.com/ \"Github\")进入<font color=red size=3>Github</font>官网点击 <font color=red size=3>Sign Up </font>注册账户。\n\n# 创建git仓库 #\n登录<font color=red size=3>Github</font>创建一个仓库\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/07.png)\n\n如下图所示，**输入自己的项目名字，后面一定要加<font color=red size=3>.github.io</font>后缀，<font color=red size=3>README</font>初始化也要勾上。名称一定要和你的<font color=red size=3>Github</font>名字完全一样，比如你<font color=red size=3>github</font>名字叫<font color=red size=3>A</font>，那么仓库名字一定要是<font color=red size=3>A.github.io</font>。**\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/08.png)\n\n选择一个自己喜欢的主题：\n在上面创建的仓库里面点击<font color=red size=3>Settings</font>（不是头像下面那个<font color=red size=3>Settings</font>），向下拉到最后有个<font color=red size=3>GitHub Pages</font>，点击<font color=red size=3>Choose a theme</font>选择一个主题。然后等一会儿，再回到<font color=red size=3>GitHub Pages</font>，就可以预览效果啦。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/09.png)\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/10.png)\n\n# 安装Hexo #\n> <font color=red size=3>Hexo</font>是一款基于<font color=red size=3>Node.js</font>的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在<font color=red size=3>GitHub</font>和<font color=red size=3>Heroku</font>上，是搭建博客的首选框架。\n\n选择一个磁盘，新建一个文件夹用来存放博客文件。比如我的<font color=red size=3>（C/panakot Blog）</font>，在该文件夹下右键单击鼠标，点击<font color=red size=3> Git Bash Here</font>，输入以下<font color=red size=3> npm </font>命令即可安装\n\n    $ npm install hexo-cli -g\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/11.png)\n\n输入<font color=red size=3>hexo -v</font>即可检验是否安装成功，我这里就不演示了。\n\n# 配置本地hexo #\n还是在刚才新建的文件夹下再新建一个<font color=red size=3>Hexo</font>文件夹，比如我的<font color=red size=3>（C/panakot Blog/Hexo）</font>，在<font color=red size=3>Hexo</font>文件夹下右键单击鼠标，点击<font color=red size=3> Git Bash Here</font>，依次输入以下<font color=red size=3> npm </font>命令即可初始化。\n\n    hexo init\n    npm install\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/12.png)\n\n初始化成功生成的文件：\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/13.png)\n\n接着我们输入<font color=red size=3>hexo g</font>生成静态网页，然后输入<font color=red size=3>hexo s</font>打开本地服务器，然后浏览器打开<http://localhost:4000/>，就可以预览我们的博客啦，如图：\n\n显示以下信息说明操作正确：\n\n```INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.```\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/14.png)\n\n按<font color=red size=3>ctrl+c</font>关闭本地服务器。\n\n**我们以后常用到的<font color=red size=3>Hexo</font>命令：**\n\n- <font color=red size=3>hexo s</font>等价于 <font color=red size=3>hexo server</font>  #<font color=red size=3>Hexo</font> 会监视文件变动并自动更新，除修改站点配置文件外,无须重启服务器,直接刷新网页即可生效。\n\n- <font color=red size=3>hexo g</font> 等价于 <font color=red size=3>hexo generate</font>  #生成静态网页 (执行 $ <font color=red size=3>hexo g</font>后会在站点根目录下生成<font color=red size=3>public</font>文件夹,<font color=red size=3> hexo</font>会将\"<font color=red size=3>/blog/source/</font>\" 下面的<font color=red size=3>.md</font>后缀的文件编译为<font color=red size=3>.html</font>后缀的文件,存放在\"<font color=red size=3>/blog/public/ </font>\" 路径下)\n\n- <font color=red size=3>hexo d </font>等价于 <font color=red size=3>hexo deploy</font>  #将本地数据部署到远端服务器(如<font color=red size=3>github</font>)\n- <font color=red size=3>hexo clean </font> #清除缓存 ,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的<font color=red size=3>public</font>文件夹\n\n# 连接Github与本地 #\n## 一、生成密钥 ##\n\n右键单击鼠标，点击 <font color=red size=3>Git Bash Here</font>输入以下命令：\n\n    git config --global user.name \"Name\"\n    git config --global user.email \"Email\"\n\n**<font color=red size=3>Name</font>和<font color=red size=3>Email</font>是我们注册<font color=red size=3>Github</font>时的用户名和邮箱。**\n\n然后生成密钥：\n\n    ssh-keygen -t rsa -C \"Email\"\n\n\n**<font color=red size=3>Email</font>是我们注册<font color=red size=3>Github</font>时的邮箱**\n\n然后会出现：\n\n    Generating public/private rsa key pair.\n    Enter file in which to save the key (/c/Users/you/.ssh/id_rsa):\n    //到这里可以直接回车将密钥按默认文件进行存储\n\n回车之后：\n\n    Enter passphrase (empty for no passphrase):\n    //这里是要你输入密码，其实不需要输什么密码，直接回车就行\n    Enter same passphrase again:\n\n接下来会有：\n\n    Your identification has been saved in /c/Users/you/.ssh/id_rsa.\n    Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.\n    The key fingerprint is:\n    这里是各种字母数字组成的字符串，结尾是你的邮箱\n    The key's randomart image is:\n    这里也是各种字母数字符号组成的字符串\n\n现在密钥已经生成，一般存放在<font color=red size=3>（/c/Users/you/.ssh/id_rsa.pub.）</font>，我们运行下面的命令将密钥复制为粘贴板：\n\n     clip < ~/.ssh/id_rsa.pub\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/15.png)\n\n## 二、连接Github ##\n在<font color=red size=3>Github</font>头像下面点击<font color=red size=3>Settings</font>，再点击<font color=red size=3>SSH and GPG keys</font>，新建一个<font color=red size=3>SSH</font>，名字任意。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/16.png)\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/17.png)\n\n然后将刚才复制的密钥添加就可以了，像这样：\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/18.png)\n\n**本地连接Github**\n\n右键单击鼠标，点击<font color=red size=3> Git Bash Here</font>输入以下命令，如果如下图所示，出现你的用户名，那就成功了\n\n    ssh -T git@github.com\n    //注意不要做任何修改\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/19.png)\n\n用记事本打开博客根目录下的<font color=red size=3>_config.yml</font>文件，这是博客的配置文件，我们需要修改一下才能连接<font color=red size=3>Github</font>。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/20.png)\n\n修改最后一行的配置：\n\n    # Deployment\n    ## Docs: https://hexo.io/docs/deployment.html\n    deploy:\n      type:\n改为：\n\n    # Deployment\n    ## Docs: https://hexo.io/docs/deployment.html\n    deploy:\n      type: git\n      repository: git@github.com:panakot/panakot.github.io.git\n      branch: master\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/21.png)\n\n切记：\n\n- **<font color=red size=3>repository</font>修改为你自己的<font color=red size=3>github</font>项目地址**。\n- **每一个冒号后面都有一个空格。**\n\n# 写文章、发布文章 #\n首先在博客根目录下右键打开<font color=red size=3>Git Bash Here</font>输入以下命令，安装一个扩展.\n\n    npm i hexo-deployer-git\n\n然后输入下面的命令，新建一篇文章。\n\n    hexo new post \"article title\"\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/22.png)\n\n然后打开<font color=red size=3>C:\\panakot Blog\\Hexo\\source\\_posts</font>的目录，可以发现下面多了一个文件夹和一个<font color=red size=3>.md</font>文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/23.png)\n\n编写完<font color=red size=3>markdown</font>文件后，根目录下右键打开<font color=red size=3>Git Bash Here</font>输入<font color=red size=3>hexo g</font>生成静态网页，然后输入<font color=red size=3>hexo s</font>可以本地预览效果，最后输入<font color=red size=3>hexo d</font>上传到<font color=red size=3>github</font>上。\n\n你的博客地址：<font color=red size=3>https://你的用户名.github.io</font>，比如我的是：<https://muyiio.github.io>，现在每个人都可以通过此链接访问你的博客\n\n# MarkDown文章编辑器说明 #\n> 前面我们提到了使用<font color=red size=3>MarkDown</font>编辑我们的博客文章。<font color=red size=3> Markdown</font> 是<font color=red size=3> 2004</font> 年由 <font color=red size=3>John Gruberis </font>设计和开发的纯文本格式的语法，非常的简单实用，常用的标记符号屈指可数，几分钟即可学会，<font color=red size=3> .md </font>文件可以使用支持 <font color=red size=3>Markdown </font>语法的编辑器编辑，然后将写好的文章<font color=red size=3>（.md文件）</font>保存到<font color=red size=3> \\Hexo\\source\\_posts </font>文件夹下即可。\n\n <font color=red size=3>Windows </font>上推荐使用 <font color=red size=3>MarkdownPad2 </font>或者<font color=red size=3>小书匠</font>编辑器，<font color=red size=3>macOS </font>上使用<font color=red size=3> Mou</font> 编辑器，<font color=red size=3>Linux </font>上使用 <font color=red size=3>Remarkable</font> 编辑器，<font color=red size=3>Web </font>端上使用 简书。\n\n**[点击此处](http://markdownpad.com/download.html \"MarkDown\")下载<font color=red size=3>MarkDown</font>\n，刚使用的朋友或许不知道如何使用这个编辑器，只需要几分钟就可以掌握啦，给出以下几个我觉得不错的参考：**\n\n[《献给写作者的 Markdown 新手指南》](https://www.jianshu.com/p/q81RER/ \"献给写作者的 Markdown 新手指南\") （By 简书）\n\n[《Markdown语法图文全面详解(10分钟学会)》](https://blog.csdn.net/u014061630/article/details/81359144?utm_source=app \"Markdown语法图文全面详解\")（By 黑暗星球）\n\n[《Markdown 语法手册 （完整整理版）》](https://blog.csdn.net/witnessai1/article/details/52551362?utm_source=app \"Markdown 语法手册 （完整整理版）\") （By witnessai1）\n\n[《认识与入门 Markdown》](https://sspai.com/post/25137 \"认识与入门 Markdown\")（By Te_Lee）\n\n写完文章记得在博客根目录<font color=red size=3>Bash Here</font>输入<font color=red size=3>hexo g</font>和<font color=red size=3>hexo d</font>上传到网站。\n# 配置个性化域名 #\n一顿操作下来，打开我们的博客还是：<font color=red size=3>www.xxx.github.io</font>，是不是很没有牌面？我们可以考虑购买一个专属域名，以后打开博客就是这样：<font color=red size=3>www.xxx.com </font>。\n\n[阿里云](https://www.aliyun.com/ \"阿里云\")和[腾讯云](https://cloud.tencent.com/ \"腾讯云\")都可以，我的是腾讯云，购买域名后首先需要添加解析：\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/24.png)\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/25.png)\n\n**方法一：**点击添加记录，需要添加两个记录，两个记录类型都是 <font color=red size=3>CNAME </font>，第一个主机记录为<font color=red size=3> @ </font>，第二个主机记录为<font color=red size=3> www</font>，记录值都是填你自己的博客地址（比如我的是：<font color=red size=3>muyiio.github.io</font>），保存之后域名解析就完成了！\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/27.png)\n\n**方法二：**两个记录类型为<font color=red size=3> A </font>，第一个主机记录为<font color=red size=3> @ </font>，第二个主机记录为<font color=red size=3> www</font>，记录值都为博客的<font color=red size=3> IP</font> 地址，<font color=red size=3>IP </font>地址可以<font color=red size=3> cmd</font> 中输入<font color=red size=3> ping</font> 你的博客地址 获得（比如我的：<font color=red size=3>ping muyiio.github.io</font>），保存之后域名解析就完成了！\n\n参考资料：\n\n[《域名解析中A记录、CNAME、MX记录、NS记录的区别和联系》](https://blog.csdn.net/it_man/article/details/9017307 \"域名解析中A记录、CNAME、MX记录、NS记录的区别和联系\")\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/26.png)\n\n**不管在哪个平台购买域名，操作都大同小异，这里说明两点**：\n\n> 如果你填写的是没有<font color=red size=3>www</font>的，比如 <font color=red size=3>muyio.com</font>，那么无论是访问<font color=red size=3> https://www.muyiio.com </font>还是<font color=red size=3> https://muyiio.com</font> ，都会自动跳转到<font color=red size=3> https://muyiio.com</font>。\n\n\n> 如果你填写的是带<font color=red size=3>www</font>的，比如 <font color=red size=3>www.muyiio.com </font>，那么无论是访问 <font color=red size=3>https://www.muyiio.com</font> 还是 <font color=red size=3>https://muyiio.com </font>，都会自动跳转到 <font color=red size=3>http://www.imuyiio.com</font>。\n\n然后打开你的<font color=red size=3>github</font>博客项目，点击settings，拉到下面<font color=red size=3>Custom domain</font>处，填上你自己的域名，保存就可以了。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/28.png)\n\n现在我们的项目根目录应该会出现一个名为<font color=red size=3>CNAME</font>的文件了。如果没有的话，打开你本地博客<font color=red size=3>/source</font>目录，我的是<font color=red size=3>C:\\Blog\\Hexo\\source</font>，新建<font color=red size=3>CNAME</font>文件，<font color=red size=3>（注意不要加.txt，没有任何后缀名！）</font>。然后在里面写上你的域名，保存。最后运行<font color=red size=3>hexo g、hexo d</font>上传到<font color=red size=3>github</font>。\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/29.png)\n\n现在就可以通过我们的个性化域名：<font color=red size=3>www.xxx.com、xxx.com</font>访问自己的博客了。\n\n# 更换自己喜欢的Hexo主题 #\n点击进入[Hexo主题专栏](https://hexo.io/themes/ \"Hexo主题专栏\")可以看到很多<font color=red size=3>Hexo</font>主题：\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/30.png)\n\n推荐：\n\n[几个好用的hexo主题](https://blog.csdn.net/fail_perfectly/article/details/83791781?utm_source=app \"几个好用的hexo主题\") (By fail_perfectly)\n\n这里我们以[Bean Tech](http://huangxuan.me/ \"Bean Tech\")主题为例，下滑到底部我们可以看到他的<font color=red size=3>GitHub</font>（<font color=red size=3>有的主题是：Theme by xxx，点击那里也是进入GitHub地址</font>）：\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/31.png)\n\n点击进入主题的<font color=red size=3>GitHub</font>地址：\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/32.png)\n\n复制该项目地址：\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/33.png)\n\n然后打开<font color=red size=3> Hexo </font>文件夹下的<font color=red size=3> themes</font> 目录（如：<font color=red size=3>C:\\MUYIio Blog\\Hexo\\themes</font>），右键<font color=red size=3> Git Bash Here</font>，输入以下命令：\n\n    $ git clone 此处填写你刚才复制的主题地址\n\n以我们刚才复制的为例：\n\n    $ git clone https://github.com/Huxpro/huxpro.github.io\n\n下载完成后即可在<font color=red size=3> themes </font>目录下生成 <font color=red size=3>hexo-theme-Bean-Tech </font>文件夹，然后打开 <font color=red size=3>Hexo</font> 文件夹下的配置文件 <font color=red size=3>_config.yml </font>，找到关键字 <font color=red size=3>theme</font>，修改参数为：<font color=red size=3>theme：hexo-theme-Bean-Tech </font>（其他主题修改成相应名称即可），**再次注意冒号后面有一个空格！**\n\n![](https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/34.png)\n\n现在我们的主题已经替换完成，将它部署到我们的博客，博客根目录下右键<font color=red size=3> Git Bash Here</font>，输入以下命令：\n\n    hexo clean\n    hexo g\n    hexo d\n\n现在访问我们的网站就可以看到主题已经更换了，但是比如网站标题，图标等都没有更换，我们博客文件中有两份主要的配置文件，名称都是 <font color=red size=3>_config.yml</font> ，它们均是用于站点配置使用的。其中，一份位于站点根目录下（比如我的：<font color=red size=3>C:\\MUYIio Blog\\Hexo\\_config.yml</font>），主要包含<font color=red size=3> Hexo</font> 本身整站的配置；另一份位于主题目录下（比如我的：<font color=red size=3>C:\\MUYIio Blog\\Hexo\\themes\\hexo-theme-matery\\_config.yml</font>），这份配置由主题作者提供，主要用于配置主题相关的选项，一般<font color=red size=3> _config.yml </font>文件里都有相关注释，按需修改即可。\n\n\n# 我的博客源代码 #\n**我的博客源代码地址：<https://github.com/MUYIio/hexo-themes-matery>，有心的话可以给个<font color=red size=3>Star&Fork</font>。**\n\n下载源代码：git clone git@github.com:MUYIio/hexo-themes-matery.git\n\n\n\n在文章开头给出了快速搭建教程，相对于自己从头开始搭建还是比较方便的，修复了很多<font color=red size=3>Bug</font>，也添加了一些插件，下载就可以使用，可以帮你们省去个性化配置带来的很多麻烦。\n\n主题的原地址在这里：[hexo-theme-matery](https://github.com/blinkfox/hexo-theme-matery)，作者把文档写得也非常的详细，还有中英文两个版本，建议可以多看几遍，在本地修改的时候轻松一些。\n\n使用我的源代码之前本地的环境还是要搭建好，就是前面一部分。\n\n\n<table><tr><td bgcolor=orange>\n-----------------------------------------------------------------------------------------------------------                                                                                                                                                                                                            \n</td></tr></table>\n\n# 结语 #\n初学者可能会觉得困难，毕竟很多东西都是第一次接触，当初我也尝试了好几次才成功，不要放弃，弄错了就删掉重新来过，当你把博客搭建出来会觉得受益良多的。\n\n文章中难免有错误的地方，有大佬发现了欢迎给我指正！有的地方解释不够详细，可以百度一下看看细节，文章中的引用以及参考资料涉及侵权请联系我删除！\n","slug":"1","published":1,"updated":"2021-10-24T08:43:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0du52rj0001fie9brtw7j1z","content":"<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/01.png\"></p>\n<p><font color=magenta size=4><strong>在搭建过程中遇到问题欢迎来骚扰我哈！<font color=red size=4> V：godxiaolong，QQ:1571504536</font>，如果觉得有帮助的话不介意打赏一杯奶茶哟~</strong></font></p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/02.png\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><ul>\n<li><p>作为一名计算机爱好者，摸索了一周搭建出自己的博客。目前只学    习了c语言，没有任何前端知识和网站开发经验，总的来说，算不上很难，     但也要费些心思。网上各类教程应有尽有，只要肯摸索，还是水到渠成的事。另外，写下这篇文章，记录下自己的经验，给需要的朋友，祝你早日拥有自己的博客！</p>\n</li>\n<li><p>搭建博客的初衷是希望用博客记录下自己的学习过程，帮助自己复习，分享一部分不成熟的思考，敦促自己把既定的目标完成。</p>\n</li>\n<li><p><strong>为什么要搭建自己的博客？可以看看这三篇文章：</strong></p>\n</li>\n</ul>\n<p><a href=\"http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/\" title=\"为什么你应该（从现在开始就）写博客\">《为什么你应该（从现在开始就）写博客》</a>   (By 刘未鹏 | Mind Hacks)</p>\n<p><a href=\"https://www.zhihu.com/question/19916345\" title=\"为什么要自建博客？\">《为什么要自建博客？》</a>   (By 知乎)</p>\n<p><a href=\"https://www.cnblogs.com/jhzhu/p/3893297.html\" title=\"我为什么写博客\">《我为什么写博客》</a> （By 知明所以）</p>\n<p>我们需要知道搭建博客要用到的框架。<font color=red size=3>Hexo</font>是高效的静态站点生成框架，它基于<font color=red size=3>Node.js</font>。我们使用<font color=red size=3>MarkDown</font>在本地编辑我们的博客文章，通过<font color=red size=3>Hexo</font>生成静态页面，再用两条命令即可部署到我们的网站。无需关心网页源代码的具体细节，我们只需要用心写好自己的博客内容就行。</p>\n<h2 id=\"本文目录\"><a href=\"#本文目录\" class=\"headerlink\" title=\"本文目录\"></a>本文目录</h2><ul>\n<li><strong>快速搭建</strong></li>\n<li>安装<font color=red size=3>Node.js</font></li>\n<li>添加国内镜像</li>\n<li>安装<font color=red size=3>Git </font></li>\n<li>注册<font color=red size=3>Github</font>账号</li>\n<li>创建<font color=red size=3>Git</font>仓库</li>\n<li>安装<font color=red size=3>Hexo</font> </li>\n<li>配置本地<font color=red size=3>Hexo</font></li>\n<li>连接<font color=red size=3>Github</font>与本地 </li>\n<li>写文章、发布文章 </li>\n<li><font color=red size=3>MarkDown</font>文章编辑器说明</li>\n<li>配置个性化域名</li>\n<li>更换自己喜欢的<font color=red size=3>Hexo</font>主题</li>\n<li>我的博客源代码</li>\n<li>结语</li>\n</ul>\n<hr>\n<h1 id=\"快速搭建\"><a href=\"#快速搭建\" class=\"headerlink\" title=\"快速搭建\"></a>快速搭建</h1><p>有的朋友可能不想去折腾，自定义主题也比较麻烦，亦或有尝试几次搭建却失败，那就可以看这部分。快速搭建可以帮助我们更快搭建出自己的博客，优点是别人博客有的东西你都有，就跟复制差不多；缺点是博客里的配置信息都是别人的，不过不要紧，稍稍改改配置就可以。</p>\n<p>在这里以我的博客为例。</p>\n<h2 id=\"一、下载博客源代码\"><a href=\"#一、下载博客源代码\" class=\"headerlink\" title=\"一、下载博客源代码\"></a>一、下载博客源代码</h2><p>大家可以直接素质二连，<font color=red size=3>Star&amp;Fork</font>我的博客源代码：<a href=\"https://github.com/MUYIio/hexo-themes-matery\">https://github.com/MUYIio/hexo-themes-matery</a>，这里我给出两种下载方法：</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/03.png\"></p>\n<p><strong>第一种</strong>：直接<font color=red size=3>DownLoad</font>，下载到本地就可以。（<strong>不推荐</strong>）</p>\n<p><strong>第二种</strong>：如果你已经安装了<a href=\"https://git-scm.com/download/win\" title=\"Git\">Git</a>，就可以右键单击<font color=red size=3>Come Bash Here</font>运行</p>\n<pre class=\"line-numbers language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> clone git@github.com:MUYIio/hexo-themes-matery.git\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>将所有文件下载到本地，这个复杂一点。</p>\n<h2 id=\"二、修改博客文档配置\"><a href=\"#二、修改博客文档配置\" class=\"headerlink\" title=\"二、修改博客文档配置\"></a>二、修改博客文档配置</h2><p>首先将我们下载的博客源代码解压，然后修改主要配置：</p>\n<ul>\n<li>根目录配置文件<font color=red size=3>_config.yml</font>和主题目录配置文件<font color=red size=3>_config.yml</font>中修改个人信息。</li>\n<li>根目录配置文件中修改<font color=red size=3>deploy</font>一栏的<font color=red size=3>repository</font>。</li>\n<li>根目录配置文件中修改<font color=red size=3>baidu_url_submit</font>一栏的<font color=red size=3>token</font>。</li>\n<li>主题配置文件中修改<font color=red size=3>gitalk</font>一栏，修改方法见正文。</li>\n</ul>\n<p>我给出的是博客比较明显的几个地方，先修改这几个地方，其它的可以自己慢慢摸索修改。</p>\n<p>最后一步，<strong>本地的运行环境还是需要搭建好的</strong>，跟着下文操作到连接Github与本地，环境就算是搭建完成。</p>\n<p><strong>本地环境搭建好之后会生成的文件：</strong></p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/35.png\"></p>\n<p>然后直接把<font color=red size=3>Hexo</font>文件夹里面的文件删掉，把我的源代码的文件全部移动过来，就是这样了：</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/37.png\"></p>\n<p>然后在<font color=red size=3>Hexo</font>文件夹下右键单击鼠标，点击 <font color=red size=3>Git Bash Here</font>点击输入以下命令上传就可以了：</p>\n<pre><code>hexo clean\nhexo g\nhexo d\n</code></pre>\n<h1 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h1><p>了解一下什么是<font color=red size=3>Node.js</font>：</p>\n<blockquote>\n<p><font color=red size=3>Node.js</font>就是一个用于创建服务器端应用程序的运行系统，它可以轻松构建网络或其他事件驱动的应用程序服务器。</p>\n</blockquote>\n<p>需要用到的命令：</p>\n<pre><code>$ git --version\n$ node -v\n$ npm -v\n</code></pre>\n<p><a href=\"https://nodejs.org/en/download/\" title=\"Node.js\">点击此处</a>进入<font color=red size=3>Node.js</font>官网下载相应版本即可，安装时选项全部默认，一路点击<font color=red size=3>Next</font>。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/04.png\"></p>\n<p>检验是否安装成功：<br>按<font color=red size=3>Win+R</font>打开命令提示符，输入<font color=red size=3>node -v</font>和<font color=red size=3>npm -v</font>，如果出现版本号，那么就安装成功了。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/05.png\"></p>\n<h1 id=\"添加国内镜像\"><a href=\"#添加国内镜像\" class=\"headerlink\" title=\"添加国内镜像\"></a>添加国内镜像</h1><p>这里我们使用阿里的国内镜像进行加速，按Win+R打开命令提示符输入：</p>\n<pre><code>npm config set registry https://registry.npm.taobao.org\n</code></pre>\n<h1 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h1><blockquote>\n<p><font color=red size=3>Git</font>是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理，帮助我们把本地网页上传到<font color=red size=3>Github</font>。</p>\n</blockquote>\n<p><a href=\"https://git-scm.com/download/win\" title=\"Git\">点击此处</a>进入Git官网下载相应版本，默认安装即可。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/005.png\"></p>\n<p>参考资料：<a href=\"https://www.cnblogs.com/jytx/p/5602927.html\" title=\"如何在windows下安装GIT\">《如何在windows下安装GIT》</a> (By 俊雨廷休)</p>\n<p>检验是否安装成功：</p>\n<p>安装完成后在命令提示符中输入<font color=red size=3>git –version</font>验证是否安装成功</p>\n<pre><code>git --version\n</code></pre>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/06.png\"></p>\n<h1 id=\"注册Github账号\"><a href=\"#注册Github账号\" class=\"headerlink\" title=\"注册Github账号\"></a>注册Github账号</h1><p><font color=red size=3>Github</font>作为全球最大的开源社区，相信朋友们都已经有了吧，如果没有，<a href=\"https://github.com/\" title=\"Github\">点击此处</a>进入<font color=red size=3>Github</font>官网点击 <font color=red size=3>Sign Up </font>注册账户。</p>\n<h1 id=\"创建git仓库\"><a href=\"#创建git仓库\" class=\"headerlink\" title=\"创建git仓库\"></a>创建git仓库</h1><p>登录<font color=red size=3>Github</font>创建一个仓库</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/07.png\"></p>\n<p>如下图所示，<strong>输入自己的项目名字，后面一定要加<font color=red size=3>.github.io</font>后缀，<font color=red size=3>README</font>初始化也要勾上。名称一定要和你的<font color=red size=3>Github</font>名字完全一样，比如你<font color=red size=3>github</font>名字叫<font color=red size=3>A</font>，那么仓库名字一定要是<font color=red size=3>A.github.io</font>。</strong></p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/08.png\"></p>\n<p>选择一个自己喜欢的主题：<br>在上面创建的仓库里面点击<font color=red size=3>Settings</font>（不是头像下面那个<font color=red size=3>Settings</font>），向下拉到最后有个<font color=red size=3>GitHub Pages</font>，点击<font color=red size=3>Choose a theme</font>选择一个主题。然后等一会儿，再回到<font color=red size=3>GitHub Pages</font>，就可以预览效果啦。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/09.png\"></p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/10.png\"></p>\n<h1 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h1><blockquote>\n<p><font color=red size=3>Hexo</font>是一款基于<font color=red size=3>Node.js</font>的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在<font color=red size=3>GitHub</font>和<font color=red size=3>Heroku</font>上，是搭建博客的首选框架。</p>\n</blockquote>\n<p>选择一个磁盘，新建一个文件夹用来存放博客文件。比如我的<font color=red size=3>（C&#x2F;panakot Blog）</font>，在该文件夹下右键单击鼠标，点击<font color=red size=3> Git Bash Here</font>，输入以下<font color=red size=3> npm </font>命令即可安装</p>\n<pre><code>$ npm install hexo-cli -g\n</code></pre>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/11.png\"></p>\n<p>输入<font color=red size=3>hexo -v</font>即可检验是否安装成功，我这里就不演示了。</p>\n<h1 id=\"配置本地hexo\"><a href=\"#配置本地hexo\" class=\"headerlink\" title=\"配置本地hexo\"></a>配置本地hexo</h1><p>还是在刚才新建的文件夹下再新建一个<font color=red size=3>Hexo</font>文件夹，比如我的<font color=red size=3>（C&#x2F;panakot Blog&#x2F;Hexo）</font>，在<font color=red size=3>Hexo</font>文件夹下右键单击鼠标，点击<font color=red size=3> Git Bash Here</font>，依次输入以下<font color=red size=3> npm </font>命令即可初始化。</p>\n<pre><code>hexo init\nnpm install\n</code></pre>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/12.png\"></p>\n<p>初始化成功生成的文件：</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/13.png\"></p>\n<p>接着我们输入<font color=red size=3>hexo g</font>生成静态网页，然后输入<font color=red size=3>hexo s</font>打开本地服务器，然后浏览器打开<a href=\"http://localhost:4000/\">http://localhost:4000/</a>，就可以预览我们的博客啦，如图：</p>\n<p>显示以下信息说明操作正确：</p>\n<p><code>INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code></p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/14.png\"></p>\n<p>按<font color=red size=3>ctrl+c</font>关闭本地服务器。</p>\n<p><strong>我们以后常用到的<font color=red size=3>Hexo</font>命令：</strong></p>\n<ul>\n<li><p><font color=red size=3>hexo s</font>等价于 <font color=red size=3>hexo server</font>  #<font color=red size=3>Hexo</font> 会监视文件变动并自动更新，除修改站点配置文件外,无须重启服务器,直接刷新网页即可生效。</p>\n</li>\n<li><p><font color=red size=3>hexo g</font> 等价于 <font color=red size=3>hexo generate</font>  #生成静态网页 (执行 $ <font color=red size=3>hexo g</font>后会在站点根目录下生成<font color=red size=3>public</font>文件夹,<font color=red size=3> hexo</font>会将”<font color=red size=3>&#x2F;blog&#x2F;source&#x2F;</font>“ 下面的<font color=red size=3>.md</font>后缀的文件编译为<font color=red size=3>.html</font>后缀的文件,存放在”<font color=red size=3>&#x2F;blog&#x2F;public&#x2F; </font>“ 路径下)</p>\n</li>\n<li><p><font color=red size=3>hexo d </font>等价于 <font color=red size=3>hexo deploy</font>  #将本地数据部署到远端服务器(如<font color=red size=3>github</font>)</p>\n</li>\n<li><p><font color=red size=3>hexo clean </font> #清除缓存 ,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的<font color=red size=3>public</font>文件夹</p>\n</li>\n</ul>\n<h1 id=\"连接Github与本地\"><a href=\"#连接Github与本地\" class=\"headerlink\" title=\"连接Github与本地\"></a>连接Github与本地</h1><h2 id=\"一、生成密钥\"><a href=\"#一、生成密钥\" class=\"headerlink\" title=\"一、生成密钥\"></a>一、生成密钥</h2><p>右键单击鼠标，点击 <font color=red size=3>Git Bash Here</font>输入以下命令：</p>\n<pre><code>git config --global user.name &quot;Name&quot;\ngit config --global user.email &quot;Email&quot;\n</code></pre>\n<p><strong><font color=red size=3>Name</font>和<font color=red size=3>Email</font>是我们注册<font color=red size=3>Github</font>时的用户名和邮箱。</strong></p>\n<p>然后生成密钥：</p>\n<pre><code>ssh-keygen -t rsa -C &quot;Email&quot;\n</code></pre>\n<p><strong><font color=red size=3>Email</font>是我们注册<font color=red size=3>Github</font>时的邮箱</strong></p>\n<p>然后会出现：</p>\n<pre><code>Generating public/private rsa key pair.\nEnter file in which to save the key (/c/Users/you/.ssh/id_rsa):\n//到这里可以直接回车将密钥按默认文件进行存储\n</code></pre>\n<p>回车之后：</p>\n<pre><code>Enter passphrase (empty for no passphrase):\n//这里是要你输入密码，其实不需要输什么密码，直接回车就行\nEnter same passphrase again:\n</code></pre>\n<p>接下来会有：</p>\n<pre><code>Your identification has been saved in /c/Users/you/.ssh/id_rsa.\nYour public key has been saved in /c/Users/you/.ssh/id_rsa.pub.\nThe key fingerprint is:\n这里是各种字母数字组成的字符串，结尾是你的邮箱\nThe key&#39;s randomart image is:\n这里也是各种字母数字符号组成的字符串\n</code></pre>\n<p>现在密钥已经生成，一般存放在<font color=red size=3>（&#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.pub.）</font>，我们运行下面的命令将密钥复制为粘贴板：</p>\n<pre><code> clip &lt; ~/.ssh/id_rsa.pub\n</code></pre>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/15.png\"></p>\n<h2 id=\"二、连接Github\"><a href=\"#二、连接Github\" class=\"headerlink\" title=\"二、连接Github\"></a>二、连接Github</h2><p>在<font color=red size=3>Github</font>头像下面点击<font color=red size=3>Settings</font>，再点击<font color=red size=3>SSH and GPG keys</font>，新建一个<font color=red size=3>SSH</font>，名字任意。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/16.png\"></p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/17.png\"></p>\n<p>然后将刚才复制的密钥添加就可以了，像这样：</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/18.png\"></p>\n<p><strong>本地连接Github</strong></p>\n<p>右键单击鼠标，点击<font color=red size=3> Git Bash Here</font>输入以下命令，如果如下图所示，出现你的用户名，那就成功了</p>\n<pre><code>ssh -T git@github.com\n//注意不要做任何修改\n</code></pre>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/19.png\"></p>\n<p>用记事本打开博客根目录下的<font color=red size=3>_config.yml</font>文件，这是博客的配置文件，我们需要修改一下才能连接<font color=red size=3>Github</font>。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/20.png\"></p>\n<p>修改最后一行的配置：</p>\n<pre><code># Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type:\n</code></pre>\n<p>改为：</p>\n<pre><code># Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: git@github.com:panakot/panakot.github.io.git\n  branch: master\n</code></pre>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/21.png\"></p>\n<p>切记：</p>\n<ul>\n<li><strong><font color=red size=3>repository</font>修改为你自己的<font color=red size=3>github</font>项目地址</strong>。</li>\n<li><strong>每一个冒号后面都有一个空格。</strong></li>\n</ul>\n<h1 id=\"写文章、发布文章\"><a href=\"#写文章、发布文章\" class=\"headerlink\" title=\"写文章、发布文章\"></a>写文章、发布文章</h1><p>首先在博客根目录下右键打开<font color=red size=3>Git Bash Here</font>输入以下命令，安装一个扩展.</p>\n<pre><code>npm i hexo-deployer-git\n</code></pre>\n<p>然后输入下面的命令，新建一篇文章。</p>\n<pre><code>hexo new post &quot;article title&quot;\n</code></pre>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/22.png\"></p>\n<p>然后打开<font color=red size=3>C:\\panakot Blog\\Hexo\\source_posts</font>的目录，可以发现下面多了一个文件夹和一个<font color=red size=3>.md</font>文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/23.png\"></p>\n<p>编写完<font color=red size=3>markdown</font>文件后，根目录下右键打开<font color=red size=3>Git Bash Here</font>输入<font color=red size=3>hexo g</font>生成静态网页，然后输入<font color=red size=3>hexo s</font>可以本地预览效果，最后输入<font color=red size=3>hexo d</font>上传到<font color=red size=3>github</font>上。</p>\n<p>你的博客地址：<font color=red size=3>https:&#x2F;&#x2F;你的用户名.github.io</font>，比如我的是：<a href=\"https://muyiio.github.io/\">https://muyiio.github.io</a>，现在每个人都可以通过此链接访问你的博客</p>\n<h1 id=\"MarkDown文章编辑器说明\"><a href=\"#MarkDown文章编辑器说明\" class=\"headerlink\" title=\"MarkDown文章编辑器说明\"></a>MarkDown文章编辑器说明</h1><blockquote>\n<p>前面我们提到了使用<font color=red size=3>MarkDown</font>编辑我们的博客文章。<font color=red size=3> Markdown</font> 是<font color=red size=3> 2004</font> 年由 <font color=red size=3>John Gruberis </font>设计和开发的纯文本格式的语法，非常的简单实用，常用的标记符号屈指可数，几分钟即可学会，<font color=red size=3> .md </font>文件可以使用支持 <font color=red size=3>Markdown </font>语法的编辑器编辑，然后将写好的文章<font color=red size=3>（.md文件）</font>保存到<font color=red size=3> \\Hexo\\source_posts </font>文件夹下即可。</p>\n</blockquote>\n<p> <font color=red size=3>Windows </font>上推荐使用 <font color=red size=3>MarkdownPad2 </font>或者<font color=red size=3>小书匠</font>编辑器，<font color=red size=3>macOS </font>上使用<font color=red size=3> Mou</font> 编辑器，<font color=red size=3>Linux </font>上使用 <font color=red size=3>Remarkable</font> 编辑器，<font color=red size=3>Web </font>端上使用 简书。</p>\n<p><strong><a href=\"http://markdownpad.com/download.html\" title=\"MarkDown\">点击此处</a>下载<font color=red size=3>MarkDown</font><br>，刚使用的朋友或许不知道如何使用这个编辑器，只需要几分钟就可以掌握啦，给出以下几个我觉得不错的参考：</strong></p>\n<p><a href=\"https://www.jianshu.com/p/q81RER/\" title=\"献给写作者的 Markdown 新手指南\">《献给写作者的 Markdown 新手指南》</a> （By 简书）</p>\n<p><a href=\"https://blog.csdn.net/u014061630/article/details/81359144?utm_source=app\" title=\"Markdown语法图文全面详解\">《Markdown语法图文全面详解(10分钟学会)》</a>（By 黑暗星球）</p>\n<p><a href=\"https://blog.csdn.net/witnessai1/article/details/52551362?utm_source=app\" title=\"Markdown 语法手册 （完整整理版）\">《Markdown 语法手册 （完整整理版）》</a> （By witnessai1）</p>\n<p><a href=\"https://sspai.com/post/25137\" title=\"认识与入门 Markdown\">《认识与入门 Markdown》</a>（By Te_Lee）</p>\n<p>写完文章记得在博客根目录<font color=red size=3>Bash Here</font>输入<font color=red size=3>hexo g</font>和<font color=red size=3>hexo d</font>上传到网站。</p>\n<h1 id=\"配置个性化域名\"><a href=\"#配置个性化域名\" class=\"headerlink\" title=\"配置个性化域名\"></a>配置个性化域名</h1><p>一顿操作下来，打开我们的博客还是：<font color=red size=3><a href=\"http://www.xxx.github.io/\">www.xxx.github.io</a></font>，是不是很没有牌面？我们可以考虑购买一个专属域名，以后打开博客就是这样：<font color=red size=3><a href=\"http://www.xxx.com/\">www.xxx.com</a> </font>。</p>\n<p><a href=\"https://www.aliyun.com/\" title=\"阿里云\">阿里云</a>和<a href=\"https://cloud.tencent.com/\" title=\"腾讯云\">腾讯云</a>都可以，我的是腾讯云，购买域名后首先需要添加解析：</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/24.png\"></p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/25.png\"></p>\n<p><strong>方法一：</strong>点击添加记录，需要添加两个记录，两个记录类型都是 <font color=red size=3>CNAME </font>，第一个主机记录为<font color=red size=3> @ </font>，第二个主机记录为<font color=red size=3> www</font>，记录值都是填你自己的博客地址（比如我的是：<font color=red size=3>muyiio.github.io</font>），保存之后域名解析就完成了！</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/27.png\"></p>\n<p><strong>方法二：</strong>两个记录类型为<font color=red size=3> A </font>，第一个主机记录为<font color=red size=3> @ </font>，第二个主机记录为<font color=red size=3> www</font>，记录值都为博客的<font color=red size=3> IP</font> 地址，<font color=red size=3>IP </font>地址可以<font color=red size=3> cmd</font> 中输入<font color=red size=3> ping</font> 你的博客地址 获得（比如我的：<font color=red size=3>ping muyiio.github.io</font>），保存之后域名解析就完成了！</p>\n<p>参考资料：</p>\n<p><a href=\"https://blog.csdn.net/it_man/article/details/9017307\" title=\"域名解析中A记录、CNAME、MX记录、NS记录的区别和联系\">《域名解析中A记录、CNAME、MX记录、NS记录的区别和联系》</a></p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/26.png\"></p>\n<p><strong>不管在哪个平台购买域名，操作都大同小异，这里说明两点</strong>：</p>\n<blockquote>\n<p>如果你填写的是没有<font color=red size=3>www</font>的，比如 <font color=red size=3>muyio.com</font>，那么无论是访问<font color=red size=3> <a href=\"https://www.muyiio.com/\">https://www.muyiio.com</a> </font>还是<font color=red size=3> <a href=\"https://muyiio.com/\">https://muyiio.com</a></font> ，都会自动跳转到<font color=red size=3> <a href=\"https://muyiio.com/\">https://muyiio.com</a></font>。</p>\n</blockquote>\n<blockquote>\n<p>如果你填写的是带<font color=red size=3>www</font>的，比如 <font color=red size=3><a href=\"http://www.muyiio.com/\">www.muyiio.com</a> </font>，那么无论是访问 <font color=red size=3><a href=\"https://www.muyiio.com/\">https://www.muyiio.com</a></font> 还是 <font color=red size=3><a href=\"https://muyiio.com/\">https://muyiio.com</a> </font>，都会自动跳转到 <font color=red size=3><a href=\"http://www.imuyiio.com/\">http://www.imuyiio.com</a></font>。</p>\n</blockquote>\n<p>然后打开你的<font color=red size=3>github</font>博客项目，点击settings，拉到下面<font color=red size=3>Custom domain</font>处，填上你自己的域名，保存就可以了。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/28.png\"></p>\n<p>现在我们的项目根目录应该会出现一个名为<font color=red size=3>CNAME</font>的文件了。如果没有的话，打开你本地博客<font color=red size=3>&#x2F;source</font>目录，我的是<font color=red size=3>C:\\Blog\\Hexo\\source</font>，新建<font color=red size=3>CNAME</font>文件，<font color=red size=3>（注意不要加.txt，没有任何后缀名！）</font>。然后在里面写上你的域名，保存。最后运行<font color=red size=3>hexo g、hexo d</font>上传到<font color=red size=3>github</font>。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/29.png\"></p>\n<p>现在就可以通过我们的个性化域名：<font color=red size=3><a href=\"http://www.xxx.com、xxx.com/\">www.xxx.com、xxx.com</a></font>访问自己的博客了。</p>\n<h1 id=\"更换自己喜欢的Hexo主题\"><a href=\"#更换自己喜欢的Hexo主题\" class=\"headerlink\" title=\"更换自己喜欢的Hexo主题\"></a>更换自己喜欢的Hexo主题</h1><p>点击进入<a href=\"https://hexo.io/themes/\" title=\"Hexo主题专栏\">Hexo主题专栏</a>可以看到很多<font color=red size=3>Hexo</font>主题：</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/30.png\"></p>\n<p>推荐：</p>\n<p><a href=\"https://blog.csdn.net/fail_perfectly/article/details/83791781?utm_source=app\" title=\"几个好用的hexo主题\">几个好用的hexo主题</a> (By fail_perfectly)</p>\n<p>这里我们以<a href=\"http://huangxuan.me/\" title=\"Bean Tech\">Bean Tech</a>主题为例，下滑到底部我们可以看到他的<font color=red size=3>GitHub</font>（<font color=red size=3>有的主题是：Theme by xxx，点击那里也是进入GitHub地址</font>）：</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/31.png\"></p>\n<p>点击进入主题的<font color=red size=3>GitHub</font>地址：</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/32.png\"></p>\n<p>复制该项目地址：</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/33.png\"></p>\n<p>然后打开<font color=red size=3> Hexo </font>文件夹下的<font color=red size=3> themes</font> 目录（如：<font color=red size=3>C:\\MUYIio Blog\\Hexo\\themes</font>），右键<font color=red size=3> Git Bash Here</font>，输入以下命令：</p>\n<pre><code>$ git clone 此处填写你刚才复制的主题地址\n</code></pre>\n<p>以我们刚才复制的为例：</p>\n<pre><code>$ git clone https://github.com/Huxpro/huxpro.github.io\n</code></pre>\n<p>下载完成后即可在<font color=red size=3> themes </font>目录下生成 <font color=red size=3>hexo-theme-Bean-Tech </font>文件夹，然后打开 <font color=red size=3>Hexo</font> 文件夹下的配置文件 <font color=red size=3>_config.yml </font>，找到关键字 <font color=red size=3>theme</font>，修改参数为：<font color=red size=3>theme：hexo-theme-Bean-Tech </font>（其他主题修改成相应名称即可），<strong>再次注意冒号后面有一个空格！</strong></p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/34.png\"></p>\n<p>现在我们的主题已经替换完成，将它部署到我们的博客，博客根目录下右键<font color=red size=3> Git Bash Here</font>，输入以下命令：</p>\n<pre><code>hexo clean\nhexo g\nhexo d\n</code></pre>\n<p>现在访问我们的网站就可以看到主题已经更换了，但是比如网站标题，图标等都没有更换，我们博客文件中有两份主要的配置文件，名称都是 <font color=red size=3>_config.yml</font> ，它们均是用于站点配置使用的。其中，一份位于站点根目录下（比如我的：<font color=red size=3>C:\\MUYIio Blog\\Hexo_config.yml</font>），主要包含<font color=red size=3> Hexo</font> 本身整站的配置；另一份位于主题目录下（比如我的：<font color=red size=3>C:\\MUYIio Blog\\Hexo\\themes\\hexo-theme-matery_config.yml</font>），这份配置由主题作者提供，主要用于配置主题相关的选项，一般<font color=red size=3> _config.yml </font>文件里都有相关注释，按需修改即可。</p>\n<h1 id=\"我的博客源代码\"><a href=\"#我的博客源代码\" class=\"headerlink\" title=\"我的博客源代码\"></a>我的博客源代码</h1><p><strong>我的博客源代码地址：<a href=\"https://github.com/MUYIio/hexo-themes-matery\">https://github.com/MUYIio/hexo-themes-matery</a>，有心的话可以给个<font color=red size=3>Star&amp;Fork</font>。</strong></p>\n<p>下载源代码：git clone <a href=\"mailto:&#x67;&#105;&#x74;&#64;&#x67;&#105;&#x74;&#x68;&#117;&#x62;&#x2e;&#x63;&#111;&#x6d;\">&#x67;&#105;&#x74;&#64;&#x67;&#105;&#x74;&#x68;&#117;&#x62;&#x2e;&#x63;&#111;&#x6d;</a>:MUYIio&#x2F;hexo-themes-matery.git</p>\n<p>在文章开头给出了快速搭建教程，相对于自己从头开始搭建还是比较方便的，修复了很多<font color=red size=3>Bug</font>，也添加了一些插件，下载就可以使用，可以帮你们省去个性化配置带来的很多麻烦。</p>\n<p>主题的原地址在这里：<a href=\"https://github.com/blinkfox/hexo-theme-matery\">hexo-theme-matery</a>，作者把文档写得也非常的详细，还有中英文两个版本，建议可以多看几遍，在本地修改的时候轻松一些。</p>\n<p>使用我的源代码之前本地的环境还是要搭建好，就是前面一部分。</p>\n<table><tr><td bgcolor=orange>\n-----------------------------------------------------------------------------------------------------------                                                                                                                                                                                                            \n</td></tr></table>\n\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>初学者可能会觉得困难，毕竟很多东西都是第一次接触，当初我也尝试了好几次才成功，不要放弃，弄错了就删掉重新来过，当你把博客搭建出来会觉得受益良多的。</p>\n<p>文章中难免有错误的地方，有大佬发现了欢迎给我指正！有的地方解释不够详细，可以百度一下看看细节，文章中的引用以及参考资料涉及侵权请联系我删除！</p>\n","site":{"data":{"friends":[{"name":"Hexo博客搭建","url":"https://zhuanlan.zhihu.com/c_1215655729367113728","title":"访问主页","introduction":"我的知乎博客搭建专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"godxiaolong","url":"https://blog.csdn.net/weixin_45682081","title":"访问主页","introduction":"我的CSDN主页，欢迎大家关注！","avatar":"/medias/avatars/csdn.ico"},{"name":"陈YF的博客","url":"https://blog.cyfan.top","title":"访问主页","introduction":"一个在互联网角落挣扎的小小博客，很小很小。","avatar":"https://blog.cyfan.top/pic/BLOGER.jpg"},{"name":"DylanLi","url":"https://cloudguest.cn","title":"前去学习","introduction":"人在少年，梦中不觉，醒后要归去。","avatar":"https://my-markdown-picbed.oss-cn-qingdao.aliyuncs.com/DylanBlog/logo2.jpg"},{"name":"框架师","url":"https://www.mobaijun.com","title":"前去学习","introduction":"墨白","avatar":"https://www.mobaijun.com/medias/avatar.jpg"}],"musics":[{"name":"总有一个人要先走","artist":"佚名","url":"/medias/music/总有一个人要先走.mp3","cover":"/medias/music/avatars/总有一个人要先走.jpg"},{"name":"Stay Alive","artist":"José González","url":"/medias/music/Stay Alive.mp3","cover":"/medias/music/avatars/Stay Alive.jpg"},{"name":"Like Real People Do","artist":"Hozier","url":"/medias/music/Like Real People Do.mp3","cover":"/medias/music/avatars/Like Real People Do.jpg"}]}},"excerpt":"","more":"<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/01.png\"></p>\n<p><font color=magenta size=4><strong>在搭建过程中遇到问题欢迎来骚扰我哈！<font color=red size=4> V：godxiaolong，QQ:1571504536</font>，如果觉得有帮助的话不介意打赏一杯奶茶哟~</strong></font></p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/02.png\"></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><ul>\n<li><p>作为一名计算机爱好者，摸索了一周搭建出自己的博客。目前只学    习了c语言，没有任何前端知识和网站开发经验，总的来说，算不上很难，     但也要费些心思。网上各类教程应有尽有，只要肯摸索，还是水到渠成的事。另外，写下这篇文章，记录下自己的经验，给需要的朋友，祝你早日拥有自己的博客！</p>\n</li>\n<li><p>搭建博客的初衷是希望用博客记录下自己的学习过程，帮助自己复习，分享一部分不成熟的思考，敦促自己把既定的目标完成。</p>\n</li>\n<li><p><strong>为什么要搭建自己的博客？可以看看这三篇文章：</strong></p>\n</li>\n</ul>\n<p><a href=\"http://mindhacks.cn/2009/02/15/why-you-should-start-blogging-now/\" title=\"为什么你应该（从现在开始就）写博客\">《为什么你应该（从现在开始就）写博客》</a>   (By 刘未鹏 | Mind Hacks)</p>\n<p><a href=\"https://www.zhihu.com/question/19916345\" title=\"为什么要自建博客？\">《为什么要自建博客？》</a>   (By 知乎)</p>\n<p><a href=\"https://www.cnblogs.com/jhzhu/p/3893297.html\" title=\"我为什么写博客\">《我为什么写博客》</a> （By 知明所以）</p>\n<p>我们需要知道搭建博客要用到的框架。<font color=red size=3>Hexo</font>是高效的静态站点生成框架，它基于<font color=red size=3>Node.js</font>。我们使用<font color=red size=3>MarkDown</font>在本地编辑我们的博客文章，通过<font color=red size=3>Hexo</font>生成静态页面，再用两条命令即可部署到我们的网站。无需关心网页源代码的具体细节，我们只需要用心写好自己的博客内容就行。</p>\n<h2 id=\"本文目录\"><a href=\"#本文目录\" class=\"headerlink\" title=\"本文目录\"></a>本文目录</h2><ul>\n<li><strong>快速搭建</strong></li>\n<li>安装<font color=red size=3>Node.js</font></li>\n<li>添加国内镜像</li>\n<li>安装<font color=red size=3>Git </font></li>\n<li>注册<font color=red size=3>Github</font>账号</li>\n<li>创建<font color=red size=3>Git</font>仓库</li>\n<li>安装<font color=red size=3>Hexo</font> </li>\n<li>配置本地<font color=red size=3>Hexo</font></li>\n<li>连接<font color=red size=3>Github</font>与本地 </li>\n<li>写文章、发布文章 </li>\n<li><font color=red size=3>MarkDown</font>文章编辑器说明</li>\n<li>配置个性化域名</li>\n<li>更换自己喜欢的<font color=red size=3>Hexo</font>主题</li>\n<li>我的博客源代码</li>\n<li>结语</li>\n</ul>\n<hr>\n<h1 id=\"快速搭建\"><a href=\"#快速搭建\" class=\"headerlink\" title=\"快速搭建\"></a>快速搭建</h1><p>有的朋友可能不想去折腾，自定义主题也比较麻烦，亦或有尝试几次搭建却失败，那就可以看这部分。快速搭建可以帮助我们更快搭建出自己的博客，优点是别人博客有的东西你都有，就跟复制差不多；缺点是博客里的配置信息都是别人的，不过不要紧，稍稍改改配置就可以。</p>\n<p>在这里以我的博客为例。</p>\n<h2 id=\"一、下载博客源代码\"><a href=\"#一、下载博客源代码\" class=\"headerlink\" title=\"一、下载博客源代码\"></a>一、下载博客源代码</h2><p>大家可以直接素质二连，<font color=red size=3>Star&amp;Fork</font>我的博客源代码：<a href=\"https://github.com/MUYIio/hexo-themes-matery\">https://github.com/MUYIio/hexo-themes-matery</a>，这里我给出两种下载方法：</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/03.png\"></p>\n<p><strong>第一种</strong>：直接<font color=red size=3>DownLoad</font>，下载到本地就可以。（<strong>不推荐</strong>）</p>\n<p><strong>第二种</strong>：如果你已经安装了<a href=\"https://git-scm.com/download/win\" title=\"Git\">Git</a>，就可以右键单击<font color=red size=3>Come Bash Here</font>运行</p>\n<pre><code class=\"bash\">git clone git@github.com:MUYIio/hexo-themes-matery.git\n</code></pre>\n<p>将所有文件下载到本地，这个复杂一点。</p>\n<h2 id=\"二、修改博客文档配置\"><a href=\"#二、修改博客文档配置\" class=\"headerlink\" title=\"二、修改博客文档配置\"></a>二、修改博客文档配置</h2><p>首先将我们下载的博客源代码解压，然后修改主要配置：</p>\n<ul>\n<li>根目录配置文件<font color=red size=3>_config.yml</font>和主题目录配置文件<font color=red size=3>_config.yml</font>中修改个人信息。</li>\n<li>根目录配置文件中修改<font color=red size=3>deploy</font>一栏的<font color=red size=3>repository</font>。</li>\n<li>根目录配置文件中修改<font color=red size=3>baidu_url_submit</font>一栏的<font color=red size=3>token</font>。</li>\n<li>主题配置文件中修改<font color=red size=3>gitalk</font>一栏，修改方法见正文。</li>\n</ul>\n<p>我给出的是博客比较明显的几个地方，先修改这几个地方，其它的可以自己慢慢摸索修改。</p>\n<p>最后一步，<strong>本地的运行环境还是需要搭建好的</strong>，跟着下文操作到连接Github与本地，环境就算是搭建完成。</p>\n<p><strong>本地环境搭建好之后会生成的文件：</strong></p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/35.png\"></p>\n<p>然后直接把<font color=red size=3>Hexo</font>文件夹里面的文件删掉，把我的源代码的文件全部移动过来，就是这样了：</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/37.png\"></p>\n<p>然后在<font color=red size=3>Hexo</font>文件夹下右键单击鼠标，点击 <font color=red size=3>Git Bash Here</font>点击输入以下命令上传就可以了：</p>\n<pre><code>hexo clean\nhexo g\nhexo d\n</code></pre>\n<h1 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h1><p>了解一下什么是<font color=red size=3>Node.js</font>：</p>\n<blockquote>\n<p><font color=red size=3>Node.js</font>就是一个用于创建服务器端应用程序的运行系统，它可以轻松构建网络或其他事件驱动的应用程序服务器。</p>\n</blockquote>\n<p>需要用到的命令：</p>\n<pre><code>$ git --version\n$ node -v\n$ npm -v\n</code></pre>\n<p><a href=\"https://nodejs.org/en/download/\" title=\"Node.js\">点击此处</a>进入<font color=red size=3>Node.js</font>官网下载相应版本即可，安装时选项全部默认，一路点击<font color=red size=3>Next</font>。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/04.png\"></p>\n<p>检验是否安装成功：<br>按<font color=red size=3>Win+R</font>打开命令提示符，输入<font color=red size=3>node -v</font>和<font color=red size=3>npm -v</font>，如果出现版本号，那么就安装成功了。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/05.png\"></p>\n<h1 id=\"添加国内镜像\"><a href=\"#添加国内镜像\" class=\"headerlink\" title=\"添加国内镜像\"></a>添加国内镜像</h1><p>这里我们使用阿里的国内镜像进行加速，按Win+R打开命令提示符输入：</p>\n<pre><code>npm config set registry https://registry.npm.taobao.org\n</code></pre>\n<h1 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h1><blockquote>\n<p><font color=red size=3>Git</font>是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理，帮助我们把本地网页上传到<font color=red size=3>Github</font>。</p>\n</blockquote>\n<p><a href=\"https://git-scm.com/download/win\" title=\"Git\">点击此处</a>进入Git官网下载相应版本，默认安装即可。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/005.png\"></p>\n<p>参考资料：<a href=\"https://www.cnblogs.com/jytx/p/5602927.html\" title=\"如何在windows下安装GIT\">《如何在windows下安装GIT》</a> (By 俊雨廷休)</p>\n<p>检验是否安装成功：</p>\n<p>安装完成后在命令提示符中输入<font color=red size=3>git –version</font>验证是否安装成功</p>\n<pre><code>git --version\n</code></pre>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/06.png\"></p>\n<h1 id=\"注册Github账号\"><a href=\"#注册Github账号\" class=\"headerlink\" title=\"注册Github账号\"></a>注册Github账号</h1><p><font color=red size=3>Github</font>作为全球最大的开源社区，相信朋友们都已经有了吧，如果没有，<a href=\"https://github.com/\" title=\"Github\">点击此处</a>进入<font color=red size=3>Github</font>官网点击 <font color=red size=3>Sign Up </font>注册账户。</p>\n<h1 id=\"创建git仓库\"><a href=\"#创建git仓库\" class=\"headerlink\" title=\"创建git仓库\"></a>创建git仓库</h1><p>登录<font color=red size=3>Github</font>创建一个仓库</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/07.png\"></p>\n<p>如下图所示，<strong>输入自己的项目名字，后面一定要加<font color=red size=3>.github.io</font>后缀，<font color=red size=3>README</font>初始化也要勾上。名称一定要和你的<font color=red size=3>Github</font>名字完全一样，比如你<font color=red size=3>github</font>名字叫<font color=red size=3>A</font>，那么仓库名字一定要是<font color=red size=3>A.github.io</font>。</strong></p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/08.png\"></p>\n<p>选择一个自己喜欢的主题：<br>在上面创建的仓库里面点击<font color=red size=3>Settings</font>（不是头像下面那个<font color=red size=3>Settings</font>），向下拉到最后有个<font color=red size=3>GitHub Pages</font>，点击<font color=red size=3>Choose a theme</font>选择一个主题。然后等一会儿，再回到<font color=red size=3>GitHub Pages</font>，就可以预览效果啦。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/09.png\"></p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/10.png\"></p>\n<h1 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h1><blockquote>\n<p><font color=red size=3>Hexo</font>是一款基于<font color=red size=3>Node.js</font>的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在<font color=red size=3>GitHub</font>和<font color=red size=3>Heroku</font>上，是搭建博客的首选框架。</p>\n</blockquote>\n<p>选择一个磁盘，新建一个文件夹用来存放博客文件。比如我的<font color=red size=3>（C&#x2F;panakot Blog）</font>，在该文件夹下右键单击鼠标，点击<font color=red size=3> Git Bash Here</font>，输入以下<font color=red size=3> npm </font>命令即可安装</p>\n<pre><code>$ npm install hexo-cli -g\n</code></pre>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/11.png\"></p>\n<p>输入<font color=red size=3>hexo -v</font>即可检验是否安装成功，我这里就不演示了。</p>\n<h1 id=\"配置本地hexo\"><a href=\"#配置本地hexo\" class=\"headerlink\" title=\"配置本地hexo\"></a>配置本地hexo</h1><p>还是在刚才新建的文件夹下再新建一个<font color=red size=3>Hexo</font>文件夹，比如我的<font color=red size=3>（C&#x2F;panakot Blog&#x2F;Hexo）</font>，在<font color=red size=3>Hexo</font>文件夹下右键单击鼠标，点击<font color=red size=3> Git Bash Here</font>，依次输入以下<font color=red size=3> npm </font>命令即可初始化。</p>\n<pre><code>hexo init\nnpm install\n</code></pre>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/12.png\"></p>\n<p>初始化成功生成的文件：</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/13.png\"></p>\n<p>接着我们输入<font color=red size=3>hexo g</font>生成静态网页，然后输入<font color=red size=3>hexo s</font>打开本地服务器，然后浏览器打开<a href=\"http://localhost:4000/\">http://localhost:4000/</a>，就可以预览我们的博客啦，如图：</p>\n<p>显示以下信息说明操作正确：</p>\n<p><code>INFO Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</code></p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/14.png\"></p>\n<p>按<font color=red size=3>ctrl+c</font>关闭本地服务器。</p>\n<p><strong>我们以后常用到的<font color=red size=3>Hexo</font>命令：</strong></p>\n<ul>\n<li><p><font color=red size=3>hexo s</font>等价于 <font color=red size=3>hexo server</font>  #<font color=red size=3>Hexo</font> 会监视文件变动并自动更新，除修改站点配置文件外,无须重启服务器,直接刷新网页即可生效。</p>\n</li>\n<li><p><font color=red size=3>hexo g</font> 等价于 <font color=red size=3>hexo generate</font>  #生成静态网页 (执行 $ <font color=red size=3>hexo g</font>后会在站点根目录下生成<font color=red size=3>public</font>文件夹,<font color=red size=3> hexo</font>会将”<font color=red size=3>&#x2F;blog&#x2F;source&#x2F;</font>“ 下面的<font color=red size=3>.md</font>后缀的文件编译为<font color=red size=3>.html</font>后缀的文件,存放在”<font color=red size=3>&#x2F;blog&#x2F;public&#x2F; </font>“ 路径下)</p>\n</li>\n<li><p><font color=red size=3>hexo d </font>等价于 <font color=red size=3>hexo deploy</font>  #将本地数据部署到远端服务器(如<font color=red size=3>github</font>)</p>\n</li>\n<li><p><font color=red size=3>hexo clean </font> #清除缓存 ,网页正常情况下可以忽略此条命令,执行该指令后,会删掉站点根目录下的<font color=red size=3>public</font>文件夹</p>\n</li>\n</ul>\n<h1 id=\"连接Github与本地\"><a href=\"#连接Github与本地\" class=\"headerlink\" title=\"连接Github与本地\"></a>连接Github与本地</h1><h2 id=\"一、生成密钥\"><a href=\"#一、生成密钥\" class=\"headerlink\" title=\"一、生成密钥\"></a>一、生成密钥</h2><p>右键单击鼠标，点击 <font color=red size=3>Git Bash Here</font>输入以下命令：</p>\n<pre><code>git config --global user.name &quot;Name&quot;\ngit config --global user.email &quot;Email&quot;\n</code></pre>\n<p><strong><font color=red size=3>Name</font>和<font color=red size=3>Email</font>是我们注册<font color=red size=3>Github</font>时的用户名和邮箱。</strong></p>\n<p>然后生成密钥：</p>\n<pre><code>ssh-keygen -t rsa -C &quot;Email&quot;\n</code></pre>\n<p><strong><font color=red size=3>Email</font>是我们注册<font color=red size=3>Github</font>时的邮箱</strong></p>\n<p>然后会出现：</p>\n<pre><code>Generating public/private rsa key pair.\nEnter file in which to save the key (/c/Users/you/.ssh/id_rsa):\n//到这里可以直接回车将密钥按默认文件进行存储\n</code></pre>\n<p>回车之后：</p>\n<pre><code>Enter passphrase (empty for no passphrase):\n//这里是要你输入密码，其实不需要输什么密码，直接回车就行\nEnter same passphrase again:\n</code></pre>\n<p>接下来会有：</p>\n<pre><code>Your identification has been saved in /c/Users/you/.ssh/id_rsa.\nYour public key has been saved in /c/Users/you/.ssh/id_rsa.pub.\nThe key fingerprint is:\n这里是各种字母数字组成的字符串，结尾是你的邮箱\nThe key&#39;s randomart image is:\n这里也是各种字母数字符号组成的字符串\n</code></pre>\n<p>现在密钥已经生成，一般存放在<font color=red size=3>（&#x2F;c&#x2F;Users&#x2F;you&#x2F;.ssh&#x2F;id_rsa.pub.）</font>，我们运行下面的命令将密钥复制为粘贴板：</p>\n<pre><code> clip &lt; ~/.ssh/id_rsa.pub\n</code></pre>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/15.png\"></p>\n<h2 id=\"二、连接Github\"><a href=\"#二、连接Github\" class=\"headerlink\" title=\"二、连接Github\"></a>二、连接Github</h2><p>在<font color=red size=3>Github</font>头像下面点击<font color=red size=3>Settings</font>，再点击<font color=red size=3>SSH and GPG keys</font>，新建一个<font color=red size=3>SSH</font>，名字任意。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/16.png\"></p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/17.png\"></p>\n<p>然后将刚才复制的密钥添加就可以了，像这样：</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/18.png\"></p>\n<p><strong>本地连接Github</strong></p>\n<p>右键单击鼠标，点击<font color=red size=3> Git Bash Here</font>输入以下命令，如果如下图所示，出现你的用户名，那就成功了</p>\n<pre><code>ssh -T git@github.com\n//注意不要做任何修改\n</code></pre>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/19.png\"></p>\n<p>用记事本打开博客根目录下的<font color=red size=3>_config.yml</font>文件，这是博客的配置文件，我们需要修改一下才能连接<font color=red size=3>Github</font>。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/20.png\"></p>\n<p>修改最后一行的配置：</p>\n<pre><code># Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type:\n</code></pre>\n<p>改为：</p>\n<pre><code># Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repository: git@github.com:panakot/panakot.github.io.git\n  branch: master\n</code></pre>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/21.png\"></p>\n<p>切记：</p>\n<ul>\n<li><strong><font color=red size=3>repository</font>修改为你自己的<font color=red size=3>github</font>项目地址</strong>。</li>\n<li><strong>每一个冒号后面都有一个空格。</strong></li>\n</ul>\n<h1 id=\"写文章、发布文章\"><a href=\"#写文章、发布文章\" class=\"headerlink\" title=\"写文章、发布文章\"></a>写文章、发布文章</h1><p>首先在博客根目录下右键打开<font color=red size=3>Git Bash Here</font>输入以下命令，安装一个扩展.</p>\n<pre><code>npm i hexo-deployer-git\n</code></pre>\n<p>然后输入下面的命令，新建一篇文章。</p>\n<pre><code>hexo new post &quot;article title&quot;\n</code></pre>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/22.png\"></p>\n<p>然后打开<font color=red size=3>C:\\panakot Blog\\Hexo\\source_posts</font>的目录，可以发现下面多了一个文件夹和一个<font color=red size=3>.md</font>文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/23.png\"></p>\n<p>编写完<font color=red size=3>markdown</font>文件后，根目录下右键打开<font color=red size=3>Git Bash Here</font>输入<font color=red size=3>hexo g</font>生成静态网页，然后输入<font color=red size=3>hexo s</font>可以本地预览效果，最后输入<font color=red size=3>hexo d</font>上传到<font color=red size=3>github</font>上。</p>\n<p>你的博客地址：<font color=red size=3>https:&#x2F;&#x2F;你的用户名.github.io</font>，比如我的是：<a href=\"https://muyiio.github.io/\">https://muyiio.github.io</a>，现在每个人都可以通过此链接访问你的博客</p>\n<h1 id=\"MarkDown文章编辑器说明\"><a href=\"#MarkDown文章编辑器说明\" class=\"headerlink\" title=\"MarkDown文章编辑器说明\"></a>MarkDown文章编辑器说明</h1><blockquote>\n<p>前面我们提到了使用<font color=red size=3>MarkDown</font>编辑我们的博客文章。<font color=red size=3> Markdown</font> 是<font color=red size=3> 2004</font> 年由 <font color=red size=3>John Gruberis </font>设计和开发的纯文本格式的语法，非常的简单实用，常用的标记符号屈指可数，几分钟即可学会，<font color=red size=3> .md </font>文件可以使用支持 <font color=red size=3>Markdown </font>语法的编辑器编辑，然后将写好的文章<font color=red size=3>（.md文件）</font>保存到<font color=red size=3> \\Hexo\\source_posts </font>文件夹下即可。</p>\n</blockquote>\n<p> <font color=red size=3>Windows </font>上推荐使用 <font color=red size=3>MarkdownPad2 </font>或者<font color=red size=3>小书匠</font>编辑器，<font color=red size=3>macOS </font>上使用<font color=red size=3> Mou</font> 编辑器，<font color=red size=3>Linux </font>上使用 <font color=red size=3>Remarkable</font> 编辑器，<font color=red size=3>Web </font>端上使用 简书。</p>\n<p><strong><a href=\"http://markdownpad.com/download.html\" title=\"MarkDown\">点击此处</a>下载<font color=red size=3>MarkDown</font><br>，刚使用的朋友或许不知道如何使用这个编辑器，只需要几分钟就可以掌握啦，给出以下几个我觉得不错的参考：</strong></p>\n<p><a href=\"https://www.jianshu.com/p/q81RER/\" title=\"献给写作者的 Markdown 新手指南\">《献给写作者的 Markdown 新手指南》</a> （By 简书）</p>\n<p><a href=\"https://blog.csdn.net/u014061630/article/details/81359144?utm_source=app\" title=\"Markdown语法图文全面详解\">《Markdown语法图文全面详解(10分钟学会)》</a>（By 黑暗星球）</p>\n<p><a href=\"https://blog.csdn.net/witnessai1/article/details/52551362?utm_source=app\" title=\"Markdown 语法手册 （完整整理版）\">《Markdown 语法手册 （完整整理版）》</a> （By witnessai1）</p>\n<p><a href=\"https://sspai.com/post/25137\" title=\"认识与入门 Markdown\">《认识与入门 Markdown》</a>（By Te_Lee）</p>\n<p>写完文章记得在博客根目录<font color=red size=3>Bash Here</font>输入<font color=red size=3>hexo g</font>和<font color=red size=3>hexo d</font>上传到网站。</p>\n<h1 id=\"配置个性化域名\"><a href=\"#配置个性化域名\" class=\"headerlink\" title=\"配置个性化域名\"></a>配置个性化域名</h1><p>一顿操作下来，打开我们的博客还是：<font color=red size=3><a href=\"http://www.xxx.github.io/\">www.xxx.github.io</a></font>，是不是很没有牌面？我们可以考虑购买一个专属域名，以后打开博客就是这样：<font color=red size=3><a href=\"http://www.xxx.com/\">www.xxx.com</a> </font>。</p>\n<p><a href=\"https://www.aliyun.com/\" title=\"阿里云\">阿里云</a>和<a href=\"https://cloud.tencent.com/\" title=\"腾讯云\">腾讯云</a>都可以，我的是腾讯云，购买域名后首先需要添加解析：</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/24.png\"></p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/25.png\"></p>\n<p><strong>方法一：</strong>点击添加记录，需要添加两个记录，两个记录类型都是 <font color=red size=3>CNAME </font>，第一个主机记录为<font color=red size=3> @ </font>，第二个主机记录为<font color=red size=3> www</font>，记录值都是填你自己的博客地址（比如我的是：<font color=red size=3>muyiio.github.io</font>），保存之后域名解析就完成了！</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/27.png\"></p>\n<p><strong>方法二：</strong>两个记录类型为<font color=red size=3> A </font>，第一个主机记录为<font color=red size=3> @ </font>，第二个主机记录为<font color=red size=3> www</font>，记录值都为博客的<font color=red size=3> IP</font> 地址，<font color=red size=3>IP </font>地址可以<font color=red size=3> cmd</font> 中输入<font color=red size=3> ping</font> 你的博客地址 获得（比如我的：<font color=red size=3>ping muyiio.github.io</font>），保存之后域名解析就完成了！</p>\n<p>参考资料：</p>\n<p><a href=\"https://blog.csdn.net/it_man/article/details/9017307\" title=\"域名解析中A记录、CNAME、MX记录、NS记录的区别和联系\">《域名解析中A记录、CNAME、MX记录、NS记录的区别和联系》</a></p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/26.png\"></p>\n<p><strong>不管在哪个平台购买域名，操作都大同小异，这里说明两点</strong>：</p>\n<blockquote>\n<p>如果你填写的是没有<font color=red size=3>www</font>的，比如 <font color=red size=3>muyio.com</font>，那么无论是访问<font color=red size=3> <a href=\"https://www.muyiio.com/\">https://www.muyiio.com</a> </font>还是<font color=red size=3> <a href=\"https://muyiio.com/\">https://muyiio.com</a></font> ，都会自动跳转到<font color=red size=3> <a href=\"https://muyiio.com/\">https://muyiio.com</a></font>。</p>\n</blockquote>\n<blockquote>\n<p>如果你填写的是带<font color=red size=3>www</font>的，比如 <font color=red size=3><a href=\"http://www.muyiio.com/\">www.muyiio.com</a> </font>，那么无论是访问 <font color=red size=3><a href=\"https://www.muyiio.com/\">https://www.muyiio.com</a></font> 还是 <font color=red size=3><a href=\"https://muyiio.com/\">https://muyiio.com</a> </font>，都会自动跳转到 <font color=red size=3><a href=\"http://www.imuyiio.com/\">http://www.imuyiio.com</a></font>。</p>\n</blockquote>\n<p>然后打开你的<font color=red size=3>github</font>博客项目，点击settings，拉到下面<font color=red size=3>Custom domain</font>处，填上你自己的域名，保存就可以了。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/28.png\"></p>\n<p>现在我们的项目根目录应该会出现一个名为<font color=red size=3>CNAME</font>的文件了。如果没有的话，打开你本地博客<font color=red size=3>&#x2F;source</font>目录，我的是<font color=red size=3>C:\\Blog\\Hexo\\source</font>，新建<font color=red size=3>CNAME</font>文件，<font color=red size=3>（注意不要加.txt，没有任何后缀名！）</font>。然后在里面写上你的域名，保存。最后运行<font color=red size=3>hexo g、hexo d</font>上传到<font color=red size=3>github</font>。</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/29.png\"></p>\n<p>现在就可以通过我们的个性化域名：<font color=red size=3><a href=\"http://www.xxx.com、xxx.com/\">www.xxx.com、xxx.com</a></font>访问自己的博客了。</p>\n<h1 id=\"更换自己喜欢的Hexo主题\"><a href=\"#更换自己喜欢的Hexo主题\" class=\"headerlink\" title=\"更换自己喜欢的Hexo主题\"></a>更换自己喜欢的Hexo主题</h1><p>点击进入<a href=\"https://hexo.io/themes/\" title=\"Hexo主题专栏\">Hexo主题专栏</a>可以看到很多<font color=red size=3>Hexo</font>主题：</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/30.png\"></p>\n<p>推荐：</p>\n<p><a href=\"https://blog.csdn.net/fail_perfectly/article/details/83791781?utm_source=app\" title=\"几个好用的hexo主题\">几个好用的hexo主题</a> (By fail_perfectly)</p>\n<p>这里我们以<a href=\"http://huangxuan.me/\" title=\"Bean Tech\">Bean Tech</a>主题为例，下滑到底部我们可以看到他的<font color=red size=3>GitHub</font>（<font color=red size=3>有的主题是：Theme by xxx，点击那里也是进入GitHub地址</font>）：</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/31.png\"></p>\n<p>点击进入主题的<font color=red size=3>GitHub</font>地址：</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/32.png\"></p>\n<p>复制该项目地址：</p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/33.png\"></p>\n<p>然后打开<font color=red size=3> Hexo </font>文件夹下的<font color=red size=3> themes</font> 目录（如：<font color=red size=3>C:\\MUYIio Blog\\Hexo\\themes</font>），右键<font color=red size=3> Git Bash Here</font>，输入以下命令：</p>\n<pre><code>$ git clone 此处填写你刚才复制的主题地址\n</code></pre>\n<p>以我们刚才复制的为例：</p>\n<pre><code>$ git clone https://github.com/Huxpro/huxpro.github.io\n</code></pre>\n<p>下载完成后即可在<font color=red size=3> themes </font>目录下生成 <font color=red size=3>hexo-theme-Bean-Tech </font>文件夹，然后打开 <font color=red size=3>Hexo</font> 文件夹下的配置文件 <font color=red size=3>_config.yml </font>，找到关键字 <font color=red size=3>theme</font>，修改参数为：<font color=red size=3>theme：hexo-theme-Bean-Tech </font>（其他主题修改成相应名称即可），<strong>再次注意冒号后面有一个空格！</strong></p>\n<p><img src=\"https://muyiio-1300292673.cos.ap-chongqing.myqcloud.com/%E5%8D%9A%E5%AE%A2/_posts/1/34.png\"></p>\n<p>现在我们的主题已经替换完成，将它部署到我们的博客，博客根目录下右键<font color=red size=3> Git Bash Here</font>，输入以下命令：</p>\n<pre><code>hexo clean\nhexo g\nhexo d\n</code></pre>\n<p>现在访问我们的网站就可以看到主题已经更换了，但是比如网站标题，图标等都没有更换，我们博客文件中有两份主要的配置文件，名称都是 <font color=red size=3>_config.yml</font> ，它们均是用于站点配置使用的。其中，一份位于站点根目录下（比如我的：<font color=red size=3>C:\\MUYIio Blog\\Hexo_config.yml</font>），主要包含<font color=red size=3> Hexo</font> 本身整站的配置；另一份位于主题目录下（比如我的：<font color=red size=3>C:\\MUYIio Blog\\Hexo\\themes\\hexo-theme-matery_config.yml</font>），这份配置由主题作者提供，主要用于配置主题相关的选项，一般<font color=red size=3> _config.yml </font>文件里都有相关注释，按需修改即可。</p>\n<h1 id=\"我的博客源代码\"><a href=\"#我的博客源代码\" class=\"headerlink\" title=\"我的博客源代码\"></a>我的博客源代码</h1><p><strong>我的博客源代码地址：<a href=\"https://github.com/MUYIio/hexo-themes-matery\">https://github.com/MUYIio/hexo-themes-matery</a>，有心的话可以给个<font color=red size=3>Star&amp;Fork</font>。</strong></p>\n<p>下载源代码：git clone <a href=\"mailto:&#x67;&#105;&#x74;&#64;&#x67;&#105;&#x74;&#x68;&#117;&#x62;&#x2e;&#x63;&#111;&#x6d;\">&#x67;&#105;&#x74;&#64;&#x67;&#105;&#x74;&#x68;&#117;&#x62;&#x2e;&#x63;&#111;&#x6d;</a>:MUYIio&#x2F;hexo-themes-matery.git</p>\n<p>在文章开头给出了快速搭建教程，相对于自己从头开始搭建还是比较方便的，修复了很多<font color=red size=3>Bug</font>，也添加了一些插件，下载就可以使用，可以帮你们省去个性化配置带来的很多麻烦。</p>\n<p>主题的原地址在这里：<a href=\"https://github.com/blinkfox/hexo-theme-matery\">hexo-theme-matery</a>，作者把文档写得也非常的详细，还有中英文两个版本，建议可以多看几遍，在本地修改的时候轻松一些。</p>\n<p>使用我的源代码之前本地的环境还是要搭建好，就是前面一部分。</p>\n<table><tr><td bgcolor=orange>\n-----------------------------------------------------------------------------------------------------------                                                                                                                                                                                                            \n</td></tr></table>\n\n<h1 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h1><p>初学者可能会觉得困难，毕竟很多东西都是第一次接触，当初我也尝试了好几次才成功，不要放弃，弄错了就删掉重新来过，当你把博客搭建出来会觉得受益良多的。</p>\n<p>文章中难免有错误的地方，有大佬发现了欢迎给我指正！有的地方解释不够详细，可以百度一下看看细节，文章中的引用以及参考资料涉及侵权请联系我删除！</p>\n"},{"title":"cmake","top":false,"cover":false,"toc":true,"mathjax":true,"date":"2022-03-05T13:47:10.000Z","password":null,"summary":null,"keywords":null,"description":null,"_content":"","source":"_posts/cmake.md","raw":"---\ntitle: cmake\ntop: false\ncover: false\ntoc: true\nmathjax: true\ndate: 2022-03-05 21:47:10\npassword:\nsummary:\ntags:\ncategories:\nkeywords:\ndescription:\n---\n","slug":"cmake","published":1,"updated":"2022-03-05T13:47:10.208Z","_id":"cl0dum5ht0000cie9ayq970s5","comments":1,"layout":"post","photos":[],"link":"","content":"","site":{"data":{"friends":[{"name":"Hexo博客搭建","url":"https://zhuanlan.zhihu.com/c_1215655729367113728","title":"访问主页","introduction":"我的知乎博客搭建专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"godxiaolong","url":"https://blog.csdn.net/weixin_45682081","title":"访问主页","introduction":"我的CSDN主页，欢迎大家关注！","avatar":"/medias/avatars/csdn.ico"},{"name":"陈YF的博客","url":"https://blog.cyfan.top","title":"访问主页","introduction":"一个在互联网角落挣扎的小小博客，很小很小。","avatar":"https://blog.cyfan.top/pic/BLOGER.jpg"},{"name":"DylanLi","url":"https://cloudguest.cn","title":"前去学习","introduction":"人在少年，梦中不觉，醒后要归去。","avatar":"https://my-markdown-picbed.oss-cn-qingdao.aliyuncs.com/DylanBlog/logo2.jpg"},{"name":"框架师","url":"https://www.mobaijun.com","title":"前去学习","introduction":"墨白","avatar":"https://www.mobaijun.com/medias/avatar.jpg"}],"musics":[{"name":"总有一个人要先走","artist":"佚名","url":"/medias/music/总有一个人要先走.mp3","cover":"/medias/music/avatars/总有一个人要先走.jpg"},{"name":"Stay Alive","artist":"José González","url":"/medias/music/Stay Alive.mp3","cover":"/medias/music/avatars/Stay Alive.jpg"},{"name":"Like Real People Do","artist":"Hozier","url":"/medias/music/Like Real People Do.mp3","cover":"/medias/music/avatars/Like Real People Do.jpg"}]}},"excerpt":"","more":""},{"title":"Ubuntu 命令","top":false,"cover":false,"toc":true,"mathjax":false,"date":"2022-03-06T02:54:21.000Z","password":null,"summary":null,"keywords":"ubuntu","description":null,"_content":"\n# Ubuntu 命令\n\n## 1、文件/文件夹管理\n\n- `ls` 列出当前目录下的所有文件（不显示隐藏文件）\n- `cd` 或者 `cd ~`进入用户主目录\n- `cd -`返回进入此目录之前所在的目录\n- `mkdir dirname` 新建目录\n- `rmdir dirname` 删除空目录\n- `rm filename` 删除文件\n- `rm -rf dirname` 删除非空目录及其包含的所有文件\n- `mv file1 file2`将文件1重命名为文件2\n- `mv file1 dir1` 将文件1移动到目录1中\n- `find 路径 -name “字符串”` 查找路径所在范围内满足字符串匹配的文件和目录\n- `sudo su` 转到管理员权限执行命令\n- `pwd`指出当前所在的路径。是print working directory的缩写。\n- `cat`  查看ubuntu中文本文件的内容\n\n## 2、程序安装与卸载\n\n- `chmod`   用于改为用户对于文件的操作权限\n- `remove` 卸载指定的程序，一般最好加上“--purge”执行清除\n   式卸载；并在程序名称后添加*号。举例：`sudo apt-get remove --purge nvidia*`  卸载 nvidia 的驱动及其配置文件\n- `update` 更新本地软件源文件，需要管理员权限，举例：`sudo apt-get update`\n\n## 3、打包/解压\n\n这里需要先解释几个参数。\n\n| 参数 | 含义                       | 参数 | 含义                 |\n| :--- | :------------------------- | :--- | :------------------- |\n| -c   | 建立压缩档案               | -z   | 有gzip属性的         |\n| -t   | 查看内容                   | -j   | 有bz2属性的          |\n| -u   | 更新原压缩包中的文件       | -Z   | 有compress属性的     |\n| -x   | 解压                       | -v   | 显示所有过程         |\n| -r   | 向压缩归档文件末尾追加文件 | -O   | 将文件解开到标准输出 |\n\n上表左边五个参数是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。右边五个参数是根据需要在压缩或解压时可选的。\n 下面进行举例说明。\n **压缩**\n\n- `tar -cvf jpg.tar *.jpg` 将目录里所有jpg文件打包成tar.jpg\n- `tar -czf jpg.tar.gz *.jpg`   将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz\n- `tar -cjf jpg.tar.bz2 *.jpg` 将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2\n- `tar -cZf jpg.tar.Z *.jpg`   将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z\n- `rar a jpg.rar *.jpg` rar格式的压缩，需要先下载rar for linux\n- `zip jpg.zip *.jpg` zip格式的压缩，需要先下载zip for linux\n\n**解压**\n\n- `tar -xvf file.tar` 解压 tar包\n- `tar -xzvf file.tar.gz` 解压tar.gz\n- `tar -xjvf file.tar.bz2`   解压 tar.bz2\n- `tar -xZvf file.tar.Z`   解压tar.Z\n- `unrar e file.rar` 解压rar\n- `unzip file.zip` 解压zip\n\n**总结**\n .tar 用 tar -xvf 解压\n .gz 用 gzip -d或者gunzip 解压\n .tar.gz和.tgz 用 tar -xzf 解压\n .bz2 用 bzip2 -d或者用bunzip2 解压\n .tar.bz2用tar -xjf 解压\n .Z 用 uncompress 解压\n .tar.Z 用tar -xZf 解压\n .rar 用 unrar e解压\n .zip 用 unzip 解压\n\n## 4、用户管理\n\n- `sudo useradd username` 创建一个新的用户username\n- `sudo passwd username` 设置用户username的密码\n- `sudo groupadd groupname` 创建一个新的组groupname\n- `sudo usermod -g groupname username` 把用户username加入到组groupname中\n- `sudo chown username:groupname dirname` 将指定文件的拥有者改为指定的用户或组\n\n## 5、系统管理\n\n- `uname -a` 查看内核版本\n- `cat /etc/issue` 查看ubuntu版本\n- `sudo fdisk -l` 查看磁盘信息\n- `df -h` 查看硬盘剩余空间\n- `free -m` 查看当前的内存使用情况\n- `ps -A` 查看当前有哪些进程\n- `kill 进程号`或者 `killall 进程名` 杀死进程\n- `kill -9 进程号` 强制杀死进程\n\n\n\n设置 conda代理：\n\n原本是空白文件\n\n```\nsudo gedit ~/.condarc\n```\n\n在文件中添加代理端口：\n\n```\nproxy_servers:\n  http: http://127.0.0.1:7890\n  https: https://127.0.0.1:7890\n```\n","source":"_posts/Ubuntu.md","raw":"---\ntitle: Ubuntu 命令\ntop: false\ncover: false\ntoc: true\nmathjax: false\ndate: 2022-03-06 10:54:21\npassword:\nsummary:\ntags: ubuntu\ncategories:\nkeywords: ubuntu\ndescription:\n---\n\n# Ubuntu 命令\n\n## 1、文件/文件夹管理\n\n- `ls` 列出当前目录下的所有文件（不显示隐藏文件）\n- `cd` 或者 `cd ~`进入用户主目录\n- `cd -`返回进入此目录之前所在的目录\n- `mkdir dirname` 新建目录\n- `rmdir dirname` 删除空目录\n- `rm filename` 删除文件\n- `rm -rf dirname` 删除非空目录及其包含的所有文件\n- `mv file1 file2`将文件1重命名为文件2\n- `mv file1 dir1` 将文件1移动到目录1中\n- `find 路径 -name “字符串”` 查找路径所在范围内满足字符串匹配的文件和目录\n- `sudo su` 转到管理员权限执行命令\n- `pwd`指出当前所在的路径。是print working directory的缩写。\n- `cat`  查看ubuntu中文本文件的内容\n\n## 2、程序安装与卸载\n\n- `chmod`   用于改为用户对于文件的操作权限\n- `remove` 卸载指定的程序，一般最好加上“--purge”执行清除\n   式卸载；并在程序名称后添加*号。举例：`sudo apt-get remove --purge nvidia*`  卸载 nvidia 的驱动及其配置文件\n- `update` 更新本地软件源文件，需要管理员权限，举例：`sudo apt-get update`\n\n## 3、打包/解压\n\n这里需要先解释几个参数。\n\n| 参数 | 含义                       | 参数 | 含义                 |\n| :--- | :------------------------- | :--- | :------------------- |\n| -c   | 建立压缩档案               | -z   | 有gzip属性的         |\n| -t   | 查看内容                   | -j   | 有bz2属性的          |\n| -u   | 更新原压缩包中的文件       | -Z   | 有compress属性的     |\n| -x   | 解压                       | -v   | 显示所有过程         |\n| -r   | 向压缩归档文件末尾追加文件 | -O   | 将文件解开到标准输出 |\n\n上表左边五个参数是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。右边五个参数是根据需要在压缩或解压时可选的。\n 下面进行举例说明。\n **压缩**\n\n- `tar -cvf jpg.tar *.jpg` 将目录里所有jpg文件打包成tar.jpg\n- `tar -czf jpg.tar.gz *.jpg`   将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz\n- `tar -cjf jpg.tar.bz2 *.jpg` 将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2\n- `tar -cZf jpg.tar.Z *.jpg`   将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z\n- `rar a jpg.rar *.jpg` rar格式的压缩，需要先下载rar for linux\n- `zip jpg.zip *.jpg` zip格式的压缩，需要先下载zip for linux\n\n**解压**\n\n- `tar -xvf file.tar` 解压 tar包\n- `tar -xzvf file.tar.gz` 解压tar.gz\n- `tar -xjvf file.tar.bz2`   解压 tar.bz2\n- `tar -xZvf file.tar.Z`   解压tar.Z\n- `unrar e file.rar` 解压rar\n- `unzip file.zip` 解压zip\n\n**总结**\n .tar 用 tar -xvf 解压\n .gz 用 gzip -d或者gunzip 解压\n .tar.gz和.tgz 用 tar -xzf 解压\n .bz2 用 bzip2 -d或者用bunzip2 解压\n .tar.bz2用tar -xjf 解压\n .Z 用 uncompress 解压\n .tar.Z 用tar -xZf 解压\n .rar 用 unrar e解压\n .zip 用 unzip 解压\n\n## 4、用户管理\n\n- `sudo useradd username` 创建一个新的用户username\n- `sudo passwd username` 设置用户username的密码\n- `sudo groupadd groupname` 创建一个新的组groupname\n- `sudo usermod -g groupname username` 把用户username加入到组groupname中\n- `sudo chown username:groupname dirname` 将指定文件的拥有者改为指定的用户或组\n\n## 5、系统管理\n\n- `uname -a` 查看内核版本\n- `cat /etc/issue` 查看ubuntu版本\n- `sudo fdisk -l` 查看磁盘信息\n- `df -h` 查看硬盘剩余空间\n- `free -m` 查看当前的内存使用情况\n- `ps -A` 查看当前有哪些进程\n- `kill 进程号`或者 `killall 进程名` 杀死进程\n- `kill -9 进程号` 强制杀死进程\n\n\n\n设置 conda代理：\n\n原本是空白文件\n\n```\nsudo gedit ~/.condarc\n```\n\n在文件中添加代理端口：\n\n```\nproxy_servers:\n  http: http://127.0.0.1:7890\n  https: https://127.0.0.1:7890\n```\n","slug":"Ubuntu","published":1,"updated":"2022-03-06T02:56:07.235Z","_id":"cl0dvrsoy0007rme9czfd9h3p","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Ubuntu-命令\"><a href=\"#Ubuntu-命令\" class=\"headerlink\" title=\"Ubuntu 命令\"></a>Ubuntu 命令</h1><h2 id=\"1、文件-x2F-文件夹管理\"><a href=\"#1、文件-x2F-文件夹管理\" class=\"headerlink\" title=\"1、文件&#x2F;文件夹管理\"></a>1、文件&#x2F;文件夹管理</h2><ul>\n<li><code>ls</code> 列出当前目录下的所有文件（不显示隐藏文件）</li>\n<li><code>cd</code> 或者 <code>cd ~</code>进入用户主目录</li>\n<li><code>cd -</code>返回进入此目录之前所在的目录</li>\n<li><code>mkdir dirname</code> 新建目录</li>\n<li><code>rmdir dirname</code> 删除空目录</li>\n<li><code>rm filename</code> 删除文件</li>\n<li><code>rm -rf dirname</code> 删除非空目录及其包含的所有文件</li>\n<li><code>mv file1 file2</code>将文件1重命名为文件2</li>\n<li><code>mv file1 dir1</code> 将文件1移动到目录1中</li>\n<li><code>find 路径 -name “字符串”</code> 查找路径所在范围内满足字符串匹配的文件和目录</li>\n<li><code>sudo su</code> 转到管理员权限执行命令</li>\n<li><code>pwd</code>指出当前所在的路径。是print working directory的缩写。</li>\n<li><code>cat</code>  查看ubuntu中文本文件的内容</li>\n</ul>\n<h2 id=\"2、程序安装与卸载\"><a href=\"#2、程序安装与卸载\" class=\"headerlink\" title=\"2、程序安装与卸载\"></a>2、程序安装与卸载</h2><ul>\n<li><code>chmod</code>   用于改为用户对于文件的操作权限</li>\n<li><code>remove</code> 卸载指定的程序，一般最好加上“–purge”执行清除<br> 式卸载；并在程序名称后添加*号。举例：<code>sudo apt-get remove --purge nvidia*</code>  卸载 nvidia 的驱动及其配置文件</li>\n<li><code>update</code> 更新本地软件源文件，需要管理员权限，举例：<code>sudo apt-get update</code></li>\n</ul>\n<h2 id=\"3、打包-x2F-解压\"><a href=\"#3、打包-x2F-解压\" class=\"headerlink\" title=\"3、打包&#x2F;解压\"></a>3、打包&#x2F;解压</h2><p>这里需要先解释几个参数。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">含义</th>\n<th align=\"left\">参数</th>\n<th align=\"left\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">-c</td>\n<td align=\"left\">建立压缩档案</td>\n<td align=\"left\">-z</td>\n<td align=\"left\">有gzip属性的</td>\n</tr>\n<tr>\n<td align=\"left\">-t</td>\n<td align=\"left\">查看内容</td>\n<td align=\"left\">-j</td>\n<td align=\"left\">有bz2属性的</td>\n</tr>\n<tr>\n<td align=\"left\">-u</td>\n<td align=\"left\">更新原压缩包中的文件</td>\n<td align=\"left\">-Z</td>\n<td align=\"left\">有compress属性的</td>\n</tr>\n<tr>\n<td align=\"left\">-x</td>\n<td align=\"left\">解压</td>\n<td align=\"left\">-v</td>\n<td align=\"left\">显示所有过程</td>\n</tr>\n<tr>\n<td align=\"left\">-r</td>\n<td align=\"left\">向压缩归档文件末尾追加文件</td>\n<td align=\"left\">-O</td>\n<td align=\"left\">将文件解开到标准输出</td>\n</tr>\n</tbody></table>\n<p>上表左边五个参数是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。右边五个参数是根据需要在压缩或解压时可选的。<br> 下面进行举例说明。<br> <strong>压缩</strong></p>\n<ul>\n<li><code>tar -cvf jpg.tar *.jpg</code> 将目录里所有jpg文件打包成tar.jpg</li>\n<li><code>tar -czf jpg.tar.gz *.jpg</code>   将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz</li>\n<li><code>tar -cjf jpg.tar.bz2 *.jpg</code> 将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2</li>\n<li><code>tar -cZf jpg.tar.Z *.jpg</code>   将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z</li>\n<li><code>rar a jpg.rar *.jpg</code> rar格式的压缩，需要先下载rar for linux</li>\n<li><code>zip jpg.zip *.jpg</code> zip格式的压缩，需要先下载zip for linux</li>\n</ul>\n<p><strong>解压</strong></p>\n<ul>\n<li><code>tar -xvf file.tar</code> 解压 tar包</li>\n<li><code>tar -xzvf file.tar.gz</code> 解压tar.gz</li>\n<li><code>tar -xjvf file.tar.bz2</code>   解压 tar.bz2</li>\n<li><code>tar -xZvf file.tar.Z</code>   解压tar.Z</li>\n<li><code>unrar e file.rar</code> 解压rar</li>\n<li><code>unzip file.zip</code> 解压zip</li>\n</ul>\n<p><strong>总结</strong><br> .tar 用 tar -xvf 解压<br> .gz 用 gzip -d或者gunzip 解压<br> .tar.gz和.tgz 用 tar -xzf 解压<br> .bz2 用 bzip2 -d或者用bunzip2 解压<br> .tar.bz2用tar -xjf 解压<br> .Z 用 uncompress 解压<br> .tar.Z 用tar -xZf 解压<br> .rar 用 unrar e解压<br> .zip 用 unzip 解压</p>\n<h2 id=\"4、用户管理\"><a href=\"#4、用户管理\" class=\"headerlink\" title=\"4、用户管理\"></a>4、用户管理</h2><ul>\n<li><code>sudo useradd username</code> 创建一个新的用户username</li>\n<li><code>sudo passwd username</code> 设置用户username的密码</li>\n<li><code>sudo groupadd groupname</code> 创建一个新的组groupname</li>\n<li><code>sudo usermod -g groupname username</code> 把用户username加入到组groupname中</li>\n<li><code>sudo chown username:groupname dirname</code> 将指定文件的拥有者改为指定的用户或组</li>\n</ul>\n<h2 id=\"5、系统管理\"><a href=\"#5、系统管理\" class=\"headerlink\" title=\"5、系统管理\"></a>5、系统管理</h2><ul>\n<li><code>uname -a</code> 查看内核版本</li>\n<li><code>cat /etc/issue</code> 查看ubuntu版本</li>\n<li><code>sudo fdisk -l</code> 查看磁盘信息</li>\n<li><code>df -h</code> 查看硬盘剩余空间</li>\n<li><code>free -m</code> 查看当前的内存使用情况</li>\n<li><code>ps -A</code> 查看当前有哪些进程</li>\n<li><code>kill 进程号</code>或者 <code>killall 进程名</code> 杀死进程</li>\n<li><code>kill -9 进程号</code> 强制杀死进程</li>\n</ul>\n<p>设置 conda代理：</p>\n<p>原本是空白文件</p>\n<pre><code>sudo gedit ~/.condarc\n</code></pre>\n<p>在文件中添加代理端口：</p>\n<pre><code>proxy_servers:\n  http: http://127.0.0.1:7890\n  https: https://127.0.0.1:7890\n</code></pre>\n","site":{"data":{"friends":[{"name":"Hexo博客搭建","url":"https://zhuanlan.zhihu.com/c_1215655729367113728","title":"访问主页","introduction":"我的知乎博客搭建专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"godxiaolong","url":"https://blog.csdn.net/weixin_45682081","title":"访问主页","introduction":"我的CSDN主页，欢迎大家关注！","avatar":"/medias/avatars/csdn.ico"},{"name":"陈YF的博客","url":"https://blog.cyfan.top","title":"访问主页","introduction":"一个在互联网角落挣扎的小小博客，很小很小。","avatar":"https://blog.cyfan.top/pic/BLOGER.jpg"},{"name":"DylanLi","url":"https://cloudguest.cn","title":"前去学习","introduction":"人在少年，梦中不觉，醒后要归去。","avatar":"https://my-markdown-picbed.oss-cn-qingdao.aliyuncs.com/DylanBlog/logo2.jpg"},{"name":"框架师","url":"https://www.mobaijun.com","title":"前去学习","introduction":"墨白","avatar":"https://www.mobaijun.com/medias/avatar.jpg"}],"musics":[{"name":"总有一个人要先走","artist":"佚名","url":"/medias/music/总有一个人要先走.mp3","cover":"/medias/music/avatars/总有一个人要先走.jpg"},{"name":"Stay Alive","artist":"José González","url":"/medias/music/Stay Alive.mp3","cover":"/medias/music/avatars/Stay Alive.jpg"},{"name":"Like Real People Do","artist":"Hozier","url":"/medias/music/Like Real People Do.mp3","cover":"/medias/music/avatars/Like Real People Do.jpg"}]}},"excerpt":"","more":"<h1 id=\"Ubuntu-命令\"><a href=\"#Ubuntu-命令\" class=\"headerlink\" title=\"Ubuntu 命令\"></a>Ubuntu 命令</h1><h2 id=\"1、文件-x2F-文件夹管理\"><a href=\"#1、文件-x2F-文件夹管理\" class=\"headerlink\" title=\"1、文件&#x2F;文件夹管理\"></a>1、文件&#x2F;文件夹管理</h2><ul>\n<li><code>ls</code> 列出当前目录下的所有文件（不显示隐藏文件）</li>\n<li><code>cd</code> 或者 <code>cd ~</code>进入用户主目录</li>\n<li><code>cd -</code>返回进入此目录之前所在的目录</li>\n<li><code>mkdir dirname</code> 新建目录</li>\n<li><code>rmdir dirname</code> 删除空目录</li>\n<li><code>rm filename</code> 删除文件</li>\n<li><code>rm -rf dirname</code> 删除非空目录及其包含的所有文件</li>\n<li><code>mv file1 file2</code>将文件1重命名为文件2</li>\n<li><code>mv file1 dir1</code> 将文件1移动到目录1中</li>\n<li><code>find 路径 -name “字符串”</code> 查找路径所在范围内满足字符串匹配的文件和目录</li>\n<li><code>sudo su</code> 转到管理员权限执行命令</li>\n<li><code>pwd</code>指出当前所在的路径。是print working directory的缩写。</li>\n<li><code>cat</code>  查看ubuntu中文本文件的内容</li>\n</ul>\n<h2 id=\"2、程序安装与卸载\"><a href=\"#2、程序安装与卸载\" class=\"headerlink\" title=\"2、程序安装与卸载\"></a>2、程序安装与卸载</h2><ul>\n<li><code>chmod</code>   用于改为用户对于文件的操作权限</li>\n<li><code>remove</code> 卸载指定的程序，一般最好加上“–purge”执行清除<br> 式卸载；并在程序名称后添加*号。举例：<code>sudo apt-get remove --purge nvidia*</code>  卸载 nvidia 的驱动及其配置文件</li>\n<li><code>update</code> 更新本地软件源文件，需要管理员权限，举例：<code>sudo apt-get update</code></li>\n</ul>\n<h2 id=\"3、打包-x2F-解压\"><a href=\"#3、打包-x2F-解压\" class=\"headerlink\" title=\"3、打包&#x2F;解压\"></a>3、打包&#x2F;解压</h2><p>这里需要先解释几个参数。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">含义</th>\n<th align=\"left\">参数</th>\n<th align=\"left\">含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">-c</td>\n<td align=\"left\">建立压缩档案</td>\n<td align=\"left\">-z</td>\n<td align=\"left\">有gzip属性的</td>\n</tr>\n<tr>\n<td align=\"left\">-t</td>\n<td align=\"left\">查看内容</td>\n<td align=\"left\">-j</td>\n<td align=\"left\">有bz2属性的</td>\n</tr>\n<tr>\n<td align=\"left\">-u</td>\n<td align=\"left\">更新原压缩包中的文件</td>\n<td align=\"left\">-Z</td>\n<td align=\"left\">有compress属性的</td>\n</tr>\n<tr>\n<td align=\"left\">-x</td>\n<td align=\"left\">解压</td>\n<td align=\"left\">-v</td>\n<td align=\"left\">显示所有过程</td>\n</tr>\n<tr>\n<td align=\"left\">-r</td>\n<td align=\"left\">向压缩归档文件末尾追加文件</td>\n<td align=\"left\">-O</td>\n<td align=\"left\">将文件解开到标准输出</td>\n</tr>\n</tbody></table>\n<p>上表左边五个参数是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。右边五个参数是根据需要在压缩或解压时可选的。<br> 下面进行举例说明。<br> <strong>压缩</strong></p>\n<ul>\n<li><code>tar -cvf jpg.tar *.jpg</code> 将目录里所有jpg文件打包成tar.jpg</li>\n<li><code>tar -czf jpg.tar.gz *.jpg</code>   将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz</li>\n<li><code>tar -cjf jpg.tar.bz2 *.jpg</code> 将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2</li>\n<li><code>tar -cZf jpg.tar.Z *.jpg</code>   将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z</li>\n<li><code>rar a jpg.rar *.jpg</code> rar格式的压缩，需要先下载rar for linux</li>\n<li><code>zip jpg.zip *.jpg</code> zip格式的压缩，需要先下载zip for linux</li>\n</ul>\n<p><strong>解压</strong></p>\n<ul>\n<li><code>tar -xvf file.tar</code> 解压 tar包</li>\n<li><code>tar -xzvf file.tar.gz</code> 解压tar.gz</li>\n<li><code>tar -xjvf file.tar.bz2</code>   解压 tar.bz2</li>\n<li><code>tar -xZvf file.tar.Z</code>   解压tar.Z</li>\n<li><code>unrar e file.rar</code> 解压rar</li>\n<li><code>unzip file.zip</code> 解压zip</li>\n</ul>\n<p><strong>总结</strong><br> .tar 用 tar -xvf 解压<br> .gz 用 gzip -d或者gunzip 解压<br> .tar.gz和.tgz 用 tar -xzf 解压<br> .bz2 用 bzip2 -d或者用bunzip2 解压<br> .tar.bz2用tar -xjf 解压<br> .Z 用 uncompress 解压<br> .tar.Z 用tar -xZf 解压<br> .rar 用 unrar e解压<br> .zip 用 unzip 解压</p>\n<h2 id=\"4、用户管理\"><a href=\"#4、用户管理\" class=\"headerlink\" title=\"4、用户管理\"></a>4、用户管理</h2><ul>\n<li><code>sudo useradd username</code> 创建一个新的用户username</li>\n<li><code>sudo passwd username</code> 设置用户username的密码</li>\n<li><code>sudo groupadd groupname</code> 创建一个新的组groupname</li>\n<li><code>sudo usermod -g groupname username</code> 把用户username加入到组groupname中</li>\n<li><code>sudo chown username:groupname dirname</code> 将指定文件的拥有者改为指定的用户或组</li>\n</ul>\n<h2 id=\"5、系统管理\"><a href=\"#5、系统管理\" class=\"headerlink\" title=\"5、系统管理\"></a>5、系统管理</h2><ul>\n<li><code>uname -a</code> 查看内核版本</li>\n<li><code>cat /etc/issue</code> 查看ubuntu版本</li>\n<li><code>sudo fdisk -l</code> 查看磁盘信息</li>\n<li><code>df -h</code> 查看硬盘剩余空间</li>\n<li><code>free -m</code> 查看当前的内存使用情况</li>\n<li><code>ps -A</code> 查看当前有哪些进程</li>\n<li><code>kill 进程号</code>或者 <code>killall 进程名</code> 杀死进程</li>\n<li><code>kill -9 进程号</code> 强制杀死进程</li>\n</ul>\n<p>设置 conda代理：</p>\n<p>原本是空白文件</p>\n<pre><code>sudo gedit ~/.condarc\n</code></pre>\n<p>在文件中添加代理端口：</p>\n<pre><code>proxy_servers:\n  http: http://127.0.0.1:7890\n  https: https://127.0.0.1:7890\n</code></pre>\n"},{"_content":"## 置顶快捷键\n\n|          |                  |          |                  |\n| -------- | ---------------- | -------- | ---------------- |\n| 插入图片 | Ctrl + Shift + I | 插入链接 | Ctrl + K         |\n| 插入代码 | Ctrl + Shift + K | 插入公式 | Ctrl + Shift + M |\n|          |                  | 行内公式 | `$公式$`         |\n| 加粗     | Ctrl + B         | 下划线   | Ctrl + U         |\n| 字体倾斜 | Ctrl + I         |          |                  |\n|          |                  |          |                  |\n| 无序列表 | + + Space        | 有序列表 | 1 + . + Space    |\n| 降级列表 | Tab              | 升级列表 | Shift + Tab      |\n|          |                  |          |                  |\n| 创建表格 | Ctrl + T         |          |                  |\n|          |                  |          |                  |\n\n\n\n## RAFT\n\n**RAFT: Recurrent All-Pairs Field Transforms for Optical Flow**\n\n**2020 ECCV**\n\n**创新:**\n\nRAFT maintains and updates a single ﬁxed ﬂow ﬁeld at high resolution. This is diﬀerent from the prevailing coarse-to-ﬁne design in prior work [42,49,22,23,50], where ﬂow is ﬁrst estimated at low resolution and upsam- pled and reﬁned at high resolution. By operating on a single high-resolution ﬂow ﬁeld, RAFT overcomes several limitations of a coarse-to-ﬁne cascade: the diﬃ- culty of recovering from errors at coarse resolutions, the tendency to miss small fast-moving objects, and the many training iterations (often over 1M) typically required for training a multi-stage cascade\n\nRAFT以高分辨率维护和更新单个固定流场。这不同于之前工作[42,49,22,23,50]中普遍采用的从粗到细的设计，其中首先在低分辨率下估计流量，然后在高分辨率下进行上采样和重新定义。通过在单个高分辨率流场上运行，RAFT克服了粗到细级联的几个限制：难以从粗分辨率的错误中恢复，容易错过快速移动的小对象，以及训练多级级联通常需要的多次训练迭代（通常超过1M）\n\n## LiteFlowNet3\n\n**2020 ECCV**\n\n**solve:**\n\n解决从粗到细的光流推断初始化错误问题\n","source":"_posts/paper/笔记.md","raw":"## 置顶快捷键\n\n|          |                  |          |                  |\n| -------- | ---------------- | -------- | ---------------- |\n| 插入图片 | Ctrl + Shift + I | 插入链接 | Ctrl + K         |\n| 插入代码 | Ctrl + Shift + K | 插入公式 | Ctrl + Shift + M |\n|          |                  | 行内公式 | `$公式$`         |\n| 加粗     | Ctrl + B         | 下划线   | Ctrl + U         |\n| 字体倾斜 | Ctrl + I         |          |                  |\n|          |                  |          |                  |\n| 无序列表 | + + Space        | 有序列表 | 1 + . + Space    |\n| 降级列表 | Tab              | 升级列表 | Shift + Tab      |\n|          |                  |          |                  |\n| 创建表格 | Ctrl + T         |          |                  |\n|          |                  |          |                  |\n\n\n\n## RAFT\n\n**RAFT: Recurrent All-Pairs Field Transforms for Optical Flow**\n\n**2020 ECCV**\n\n**创新:**\n\nRAFT maintains and updates a single ﬁxed ﬂow ﬁeld at high resolution. This is diﬀerent from the prevailing coarse-to-ﬁne design in prior work [42,49,22,23,50], where ﬂow is ﬁrst estimated at low resolution and upsam- pled and reﬁned at high resolution. By operating on a single high-resolution ﬂow ﬁeld, RAFT overcomes several limitations of a coarse-to-ﬁne cascade: the diﬃ- culty of recovering from errors at coarse resolutions, the tendency to miss small fast-moving objects, and the many training iterations (often over 1M) typically required for training a multi-stage cascade\n\nRAFT以高分辨率维护和更新单个固定流场。这不同于之前工作[42,49,22,23,50]中普遍采用的从粗到细的设计，其中首先在低分辨率下估计流量，然后在高分辨率下进行上采样和重新定义。通过在单个高分辨率流场上运行，RAFT克服了粗到细级联的几个限制：难以从粗分辨率的错误中恢复，容易错过快速移动的小对象，以及训练多级级联通常需要的多次训练迭代（通常超过1M）\n\n## LiteFlowNet3\n\n**2020 ECCV**\n\n**solve:**\n\n解决从粗到细的光流推断初始化错误问题\n","slug":"paper/笔记","published":1,"date":"2022-03-05T13:08:53.637Z","updated":"2021-11-05T08:57:39.449Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cl0dvrsp1000arme97h182bc3","content":"<h2 id=\"置顶快捷键\"><a href=\"#置顶快捷键\" class=\"headerlink\" title=\"置顶快捷键\"></a>置顶快捷键</h2><table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>插入图片</td>\n<td>Ctrl + Shift + I</td>\n<td>插入链接</td>\n<td>Ctrl + K</td>\n</tr>\n<tr>\n<td>插入代码</td>\n<td>Ctrl + Shift + K</td>\n<td>插入公式</td>\n<td>Ctrl + Shift + M</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>行内公式</td>\n<td><code>$公式$</code></td>\n</tr>\n<tr>\n<td>加粗</td>\n<td>Ctrl + B</td>\n<td>下划线</td>\n<td>Ctrl + U</td>\n</tr>\n<tr>\n<td>字体倾斜</td>\n<td>Ctrl + I</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>无序列表</td>\n<td>+ + Space</td>\n<td>有序列表</td>\n<td>1 + . + Space</td>\n</tr>\n<tr>\n<td>降级列表</td>\n<td>Tab</td>\n<td>升级列表</td>\n<td>Shift + Tab</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>创建表格</td>\n<td>Ctrl + T</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"RAFT\"><a href=\"#RAFT\" class=\"headerlink\" title=\"RAFT\"></a>RAFT</h2><p><strong>RAFT: Recurrent All-Pairs Field Transforms for Optical Flow</strong></p>\n<p><strong>2020 ECCV</strong></p>\n<p><strong>创新:</strong></p>\n<p>RAFT maintains and updates a single ﬁxed ﬂow ﬁeld at high resolution. This is diﬀerent from the prevailing coarse-to-ﬁne design in prior work [42,49,22,23,50], where ﬂow is ﬁrst estimated at low resolution and upsam- pled and reﬁned at high resolution. By operating on a single high-resolution ﬂow ﬁeld, RAFT overcomes several limitations of a coarse-to-ﬁne cascade: the diﬃ- culty of recovering from errors at coarse resolutions, the tendency to miss small fast-moving objects, and the many training iterations (often over 1M) typically required for training a multi-stage cascade</p>\n<p>RAFT以高分辨率维护和更新单个固定流场。这不同于之前工作[42,49,22,23,50]中普遍采用的从粗到细的设计，其中首先在低分辨率下估计流量，然后在高分辨率下进行上采样和重新定义。通过在单个高分辨率流场上运行，RAFT克服了粗到细级联的几个限制：难以从粗分辨率的错误中恢复，容易错过快速移动的小对象，以及训练多级级联通常需要的多次训练迭代（通常超过1M）</p>\n<h2 id=\"LiteFlowNet3\"><a href=\"#LiteFlowNet3\" class=\"headerlink\" title=\"LiteFlowNet3\"></a>LiteFlowNet3</h2><p><strong>2020 ECCV</strong></p>\n<p><strong>solve:</strong></p>\n<p>解决从粗到细的光流推断初始化错误问题</p>\n","site":{"data":{"friends":[{"name":"Hexo博客搭建","url":"https://zhuanlan.zhihu.com/c_1215655729367113728","title":"访问主页","introduction":"我的知乎博客搭建专栏，欢迎大家关注","avatar":"/medias/avatars/myzhihu.png"},{"name":"godxiaolong","url":"https://blog.csdn.net/weixin_45682081","title":"访问主页","introduction":"我的CSDN主页，欢迎大家关注！","avatar":"/medias/avatars/csdn.ico"},{"name":"陈YF的博客","url":"https://blog.cyfan.top","title":"访问主页","introduction":"一个在互联网角落挣扎的小小博客，很小很小。","avatar":"https://blog.cyfan.top/pic/BLOGER.jpg"},{"name":"DylanLi","url":"https://cloudguest.cn","title":"前去学习","introduction":"人在少年，梦中不觉，醒后要归去。","avatar":"https://my-markdown-picbed.oss-cn-qingdao.aliyuncs.com/DylanBlog/logo2.jpg"},{"name":"框架师","url":"https://www.mobaijun.com","title":"前去学习","introduction":"墨白","avatar":"https://www.mobaijun.com/medias/avatar.jpg"}],"musics":[{"name":"总有一个人要先走","artist":"佚名","url":"/medias/music/总有一个人要先走.mp3","cover":"/medias/music/avatars/总有一个人要先走.jpg"},{"name":"Stay Alive","artist":"José González","url":"/medias/music/Stay Alive.mp3","cover":"/medias/music/avatars/Stay Alive.jpg"},{"name":"Like Real People Do","artist":"Hozier","url":"/medias/music/Like Real People Do.mp3","cover":"/medias/music/avatars/Like Real People Do.jpg"}]}},"excerpt":"","more":"<h2 id=\"置顶快捷键\"><a href=\"#置顶快捷键\" class=\"headerlink\" title=\"置顶快捷键\"></a>置顶快捷键</h2><table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>插入图片</td>\n<td>Ctrl + Shift + I</td>\n<td>插入链接</td>\n<td>Ctrl + K</td>\n</tr>\n<tr>\n<td>插入代码</td>\n<td>Ctrl + Shift + K</td>\n<td>插入公式</td>\n<td>Ctrl + Shift + M</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>行内公式</td>\n<td><code>$公式$</code></td>\n</tr>\n<tr>\n<td>加粗</td>\n<td>Ctrl + B</td>\n<td>下划线</td>\n<td>Ctrl + U</td>\n</tr>\n<tr>\n<td>字体倾斜</td>\n<td>Ctrl + I</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>无序列表</td>\n<td>+ + Space</td>\n<td>有序列表</td>\n<td>1 + . + Space</td>\n</tr>\n<tr>\n<td>降级列表</td>\n<td>Tab</td>\n<td>升级列表</td>\n<td>Shift + Tab</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>创建表格</td>\n<td>Ctrl + T</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"RAFT\"><a href=\"#RAFT\" class=\"headerlink\" title=\"RAFT\"></a>RAFT</h2><p><strong>RAFT: Recurrent All-Pairs Field Transforms for Optical Flow</strong></p>\n<p><strong>2020 ECCV</strong></p>\n<p><strong>创新:</strong></p>\n<p>RAFT maintains and updates a single ﬁxed ﬂow ﬁeld at high resolution. This is diﬀerent from the prevailing coarse-to-ﬁne design in prior work [42,49,22,23,50], where ﬂow is ﬁrst estimated at low resolution and upsam- pled and reﬁned at high resolution. By operating on a single high-resolution ﬂow ﬁeld, RAFT overcomes several limitations of a coarse-to-ﬁne cascade: the diﬃ- culty of recovering from errors at coarse resolutions, the tendency to miss small fast-moving objects, and the many training iterations (often over 1M) typically required for training a multi-stage cascade</p>\n<p>RAFT以高分辨率维护和更新单个固定流场。这不同于之前工作[42,49,22,23,50]中普遍采用的从粗到细的设计，其中首先在低分辨率下估计流量，然后在高分辨率下进行上采样和重新定义。通过在单个高分辨率流场上运行，RAFT克服了粗到细级联的几个限制：难以从粗分辨率的错误中恢复，容易错过快速移动的小对象，以及训练多级级联通常需要的多次训练迭代（通常超过1M）</p>\n<h2 id=\"LiteFlowNet3\"><a href=\"#LiteFlowNet3\" class=\"headerlink\" title=\"LiteFlowNet3\"></a>LiteFlowNet3</h2><p><strong>2020 ECCV</strong></p>\n<p><strong>solve:</strong></p>\n<p>解决从粗到细的光流推断初始化错误问题</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl0du52rj0001fie9brtw7j1z","category_id":"cl0du52rn0003fie943e0dbva","_id":"cl0du52rr000bfie914dkau3y"}],"PostTag":[{"post_id":"cl0du52rj0001fie9brtw7j1z","tag_id":"cl0du52ro0004fie9cjxydvlg","_id":"cl0du52rr000dfie90in08y23"},{"post_id":"cl0du52rj0001fie9brtw7j1z","tag_id":"cl0du52rq0008fie93q9pf83k","_id":"cl0du52rs000efie90qnkfxo6"},{"post_id":"cl0du52rj0001fie9brtw7j1z","tag_id":"cl0du52rr000cfie9ejrral5z","_id":"cl0du52rs000ffie910jeepcs"},{"post_id":"cl0dvrsoy0007rme9czfd9h3p","tag_id":"cl0eongl600003ae96q7ce8vj","_id":"cl0eongl900013ae9em1hgwdz"}],"Tag":[{"name":"Github","_id":"cl0du52ro0004fie9cjxydvlg"},{"name":"Hexo","_id":"cl0du52rq0008fie93q9pf83k"},{"name":"博客搭建","_id":"cl0du52rr000cfie9ejrral5z"},{"name":"ubuntu","_id":"cl0eongl600003ae96q7ce8vj"}]}}